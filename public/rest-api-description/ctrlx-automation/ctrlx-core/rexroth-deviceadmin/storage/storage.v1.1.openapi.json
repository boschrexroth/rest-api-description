{
  "openapi" : "3.0.1",
  "info" : {
    "contact" : {
      "email" : "support@boschrexroth.de",
      "name" : "Bosch Rexroth AG",
      "url" : "https://www.boschrexroth.de"
    },
    "description" : "Rest-API description to manage (removable) storage media.",
    "title" : "Rest-API description to manage (removable) storage media",
    "version" : "1.1.0"
  },
  "servers" : [ {
    "url" : "/storage/api/v1"
  } ],
  "tags" : [ {
    "description" : "Storage media handling",
    "name" : "media"
  }, {
    "description" : "Handle asnychronious operations",
    "name" : "tasks"
  } ],
  "paths" : {
    "/media" : {
      "get" : {
        "description" : "Retrieve a list of available storage media",
        "operationId" : "getMedias",
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "items" : {
                    "$ref" : "#/components/schemas/Media"
                  },
                  "type" : "array"
                }
              }
            },
            "description" : "OK"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Not authorized to access this resource"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Access forbidden for this resource"
          }
        },
        "tags" : [ "media" ]
      }
    },
    "/media/{uuid}" : {
      "get" : {
        "description" : "Retrieve information of storage media",
        "operationId" : "getMedia",
        "parameters" : [ {
          "explode" : false,
          "in" : "path",
          "name" : "uuid",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Media"
                }
              }
            },
            "description" : "OK"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Not authorized to access this resource"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Access forbidden for this resource"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "The resource was not found"
          }
        },
        "tags" : [ "media" ]
      }
    },
    "/media/{uuid}/encrypted-device" : {
      "get" : {
        "description" : "Get detailed information about encrypted partition",
        "operationId" : "getEncryptedDevice",
        "parameters" : [ {
          "explode" : false,
          "in" : "path",
          "name" : "uuid",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Media"
                }
              }
            },
            "description" : "OK"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Not authorized to access this resource"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Access forbidden for this resource"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "The resource was not found"
          }
        },
        "tags" : [ "encryption" ]
      }
    },
    "/media/{uuid}/encrypted-device/user-keys" : {
      "get" : {
        "description" : "If encrypted partition get state of keys",
        "operationId" : "getUserKeySlots",
        "parameters" : [ {
          "explode" : false,
          "in" : "path",
          "name" : "uuid",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/KeySlots"
                }
              }
            },
            "description" : "OK"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Not authorized to access this resource"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Access forbidden for this resource"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "The resource was not found"
          }
        },
        "tags" : [ "encryption" ]
      }
    },
    "/media/{uuid}/encrypted-device/user-keys/{slot}" : {
      "delete" : {
        "description" : "Remove key by slot",
        "operationId" : "deleteUserKeySlot",
        "parameters" : [ {
          "explode" : false,
          "in" : "path",
          "name" : "uuid",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "explode" : false,
          "in" : "path",
          "name" : "slot",
          "required" : true,
          "schema" : {
            "type" : "integer"
          },
          "style" : "simple"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/RemoveKey"
              }
            }
          }
        },
        "responses" : {
          "204" : {
            "description" : "Deleted successfully"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Not authorized to access this resource"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Access forbidden for this resource"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "The resource was not found"
          }
        },
        "tags" : [ "encryption" ]
      },
      "get" : {
        "description" : "Get state of key slot",
        "operationId" : "getUserKeySlot",
        "parameters" : [ {
          "explode" : false,
          "in" : "path",
          "name" : "uuid",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "explode" : false,
          "in" : "path",
          "name" : "slot",
          "required" : true,
          "schema" : {
            "type" : "integer"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/KeySlot"
                }
              }
            },
            "description" : "OK"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Not authorized to access this resource"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Access forbidden for this resource"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "The resource was not found"
          }
        },
        "tags" : [ "encryption" ]
      },
      "put" : {
        "description" : "Change or add password in key slot",
        "operationId" : "changeUserKeySlot",
        "parameters" : [ {
          "explode" : false,
          "in" : "path",
          "name" : "uuid",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "explode" : false,
          "in" : "path",
          "name" : "slot",
          "required" : true,
          "schema" : {
            "type" : "integer"
          },
          "style" : "simple"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AddKey"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/KeySlot"
                }
              }
            },
            "description" : "State of modified key"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Not authorized to access this resource"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Access forbidden for this resource"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "The resource was not found"
          }
        },
        "tags" : [ "encryption" ]
      }
    },
    "/tasks" : {
      "get" : {
        "description" : "Retrive list of running, done and failed tasks",
        "operationId" : "getTasks",
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "items" : {
                    "$ref" : "#/components/schemas/OneOfTasks"
                  },
                  "type" : "array"
                }
              }
            },
            "description" : "OK"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Not authorized to access this resource"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Access forbidden for this resource"
          }
        },
        "tags" : [ "tasks" ]
      },
      "post" : {
        "description" : "Create a new task",
        "operationId" : "createTask",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "examples" : {
                "unmount" : {
                  "value" : {
                    "action" : "unmount",
                    "parameters" : {
                      "media" : "d713f534-1240-4d5e-ae66-f79936c88bb5"
                    }
                  }
                }
              },
              "schema" : {
                "$ref" : "#/components/schemas/OneOfTasks"
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OneOfTasks"
                }
              }
            },
            "description" : "Created",
            "headers" : {
              "Location" : {
                "explode" : false,
                "schema" : {
                  "example" : "/tasks/123",
                  "type" : "string"
                },
                "style" : "simple"
              }
            }
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "The request is incomplete or malformed"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Not authorized to access this resource"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Access forbidden for this resource"
          }
        },
        "tags" : [ "tasks" ]
      }
    },
    "/tasks/{id}" : {
      "get" : {
        "description" : "Retrive list of running, done and failed tasks",
        "operationId" : "GetTask",
        "parameters" : [ {
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "examples" : {
                  "unmount" : {
                    "value" : {
                      "id" : 123,
                      "state" : "running",
                      "progress" : 10,
                      "action" : "unmount",
                      "parameters" : {
                        "media" : "d713f534-1240-4d5e-ae66-f79936c88bb5"
                      }
                    }
                  }
                },
                "schema" : {
                  "$ref" : "#/components/schemas/OneOfTasks"
                }
              }
            },
            "description" : "OK"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Not authorized to access this resource"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Access forbidden for this resource"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "The resource was not found"
          }
        },
        "tags" : [ "tasks" ]
      }
    }
  },
  "components" : {
    "parameters" : {
      "uuid" : {
        "explode" : false,
        "in" : "path",
        "name" : "uuid",
        "required" : true,
        "schema" : {
          "type" : "string"
        },
        "style" : "simple"
      },
      "slot" : {
        "explode" : false,
        "in" : "path",
        "name" : "slot",
        "required" : true,
        "schema" : {
          "type" : "integer"
        },
        "style" : "simple"
      }
    },
    "responses" : {
      "Unauthorized" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/Problem"
            }
          }
        },
        "description" : "Not authorized to access this resource"
      },
      "Forbidden" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/Problem"
            }
          }
        },
        "description" : "Access forbidden for this resource"
      },
      "BadRequest" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/Problem"
            }
          }
        },
        "description" : "The request is incomplete or malformed"
      },
      "InternalServerError" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/Problem"
            }
          }
        },
        "description" : "Something unexpected happened on the server"
      },
      "NotFound" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/Problem"
            }
          }
        },
        "description" : "The resource was not found"
      }
    },
    "schemas" : {
      "Media" : {
        "example" : {
          "internal" : true,
          "size" : 85899345920,
          "assignment" : "data-exchange",
          "format" : "fat32",
          "label" : "CtrlX External Storage",
          "used" : 4592,
          "uuid" : "d713f534-1240-4d5e-ae66-f79936c88bb5",
          "mounted" : true,
          "device" : "sda"
        },
        "properties" : {
          "uuid" : {
            "example" : "d713f534-1240-4d5e-ae66-f79936c88bb5",
            "type" : "string"
          },
          "label" : {
            "example" : "CtrlX External Storage",
            "type" : "string"
          },
          "mounted" : {
            "type" : "boolean"
          },
          "format" : {
            "$ref" : "#/components/schemas/MediaFormat"
          },
          "size" : {
            "description" : "Partition size in bytes",
            "example" : 85899345920,
            "format" : "int64",
            "type" : "integer"
          },
          "used" : {
            "description" : "Used storage in bytes",
            "example" : 4592,
            "format" : "int64",
            "type" : "integer"
          },
          "assignment" : {
            "$ref" : "#/components/schemas/MediaAssignment"
          },
          "device" : {
            "description" : "The name of the device in /dev",
            "example" : "sda",
            "type" : "string"
          },
          "internal" : {
            "description" : "Media is the internal media",
            "example" : true,
            "type" : "boolean"
          }
        },
        "required" : [ "mounted", "uuid" ],
        "type" : "object"
      },
      "Task" : {
        "discriminator" : {
          "propertyName" : "action"
        },
        "properties" : {
          "id" : {
            "description" : "The temporary id of a task",
            "example" : "123",
            "readOnly" : true,
            "type" : "string"
          },
          "state" : {
            "enum" : [ "pending", "failed", "done", "running" ],
            "example" : "running",
            "readOnly" : true,
            "type" : "string"
          },
          "progress" : {
            "description" : "Progress of the task",
            "example" : 10,
            "maximum" : 100,
            "minimum" : 0,
            "readOnly" : true,
            "type" : "integer"
          },
          "eta" : {
            "description" : "ETA in RFC 3339 format",
            "example" : "2019-01-01T12:00:27.87+00:20",
            "format" : "dateTime",
            "readOnly" : true,
            "type" : "string"
          },
          "action" : {
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "TaskMount" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Task"
        }, {
          "$ref" : "#/components/schemas/TaskMount_allOf"
        } ]
      },
      "TaskUnmount" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Task"
        }, {
          "$ref" : "#/components/schemas/TaskUnmount_allOf"
        } ]
      },
      "TaskFormat" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Task"
        }, {
          "$ref" : "#/components/schemas/TaskFormat_allOf"
        } ]
      },
      "TaskCreateExtensionStorage" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Task"
        }, {
          "$ref" : "#/components/schemas/TaskCreateExtensionStorage_allOf"
        } ]
      },
      "OneOfTasks" : {
        "oneOf" : [ {
          "$ref" : "#/components/schemas/Task"
        }, {
          "$ref" : "#/components/schemas/TaskMount"
        }, {
          "$ref" : "#/components/schemas/TaskUnmount"
        }, {
          "$ref" : "#/components/schemas/TaskFormat"
        }, {
          "$ref" : "#/components/schemas/TaskCreateExtensionStorage"
        } ]
      },
      "KeySlot" : {
        "description" : "A key slot can be used to set individual passphrases for an encrypted device. It has an index and enabled-flag to indicate its current status.",
        "example" : {
          "slot" : 0,
          "enabled" : true
        },
        "properties" : {
          "slot" : {
            "description" : "The index of a key slot of an encryted device. The slot index can be 0 to 4 and can be set with individual user passphrases to decrypt the device.",
            "example" : 0,
            "type" : "integer"
          },
          "enabled" : {
            "description" : "Enabled `true` indicates that a passphrase is already set for the specific slot.",
            "example" : true,
            "type" : "boolean"
          }
        },
        "type" : "object"
      },
      "KeySlots" : {
        "description" : "Array of key slots",
        "items" : {
          "$ref" : "#/components/schemas/KeySlot"
        },
        "type" : "array"
      },
      "Problem" : {
        "description" : "This document defines a \"problem detail\" as a way  to carry machine-readable details of errors in a  HTTP response to avoid the need to define new error  response formats for HTTP APIs.\n",
        "properties" : {
          "type" : {
            "default" : "about:blank",
            "description" : "A URI reference [RFC3986] that identifies the problem type. \nThis specification encourages that, when dereferenced, \nit provide human-readable documentation for the problem type \n(e.g., using HTML [W3C.REC-html5-20141028]). When this member \nis not present, its value is assumed to be \"about:blank\".\n",
            "example" : "https://example.com/probs/out-of-credit",
            "format" : "uri",
            "type" : "string"
          },
          "title" : {
            "description" : "A short, human-readable summary of the problem type. \nIt SHOULD NOT change from occurrence to occurrence of the problem, \nexcept for purposes of localization (e.g., using proactive content \nnegotiation; see [RFC7231], Section 3.4).\n",
            "example" : "You do not have enough credit.",
            "type" : "string"
          },
          "status" : {
            "description" : "The HTTP status code ([RFC7231], Section 6) generated by the \norigin server for this occurrence of the problem.\n",
            "example" : 403,
            "format" : "int32",
            "type" : "integer"
          },
          "detail" : {
            "description" : "A human-readable explanation specific to this occurrence of the problem.\n",
            "example" : "Your current balance is 30, but that costs 50.",
            "type" : "string"
          },
          "instance" : {
            "description" : "A URI reference that identifies the specific occurrence of the problem.\nIt may or may not yield further information if dereferenced.\n",
            "example" : "/account/12345/msgs/abc",
            "type" : "string"
          },
          "code" : {
            "deprecated" : true,
            "description" : "An error code issued by the system that caused the original problem.\nThis code can be used to track down the root cause of the error.\n",
            "example" : "F360001",
            "type" : "string"
          },
          "mainDiagnosisCode" : {
            "description" : "The main diagnosis code is issued by the system that caused the problem.\nThis code can be used to track down the root cause and source of the error.\nIt can be used to search in the documentation for a solution.\nIt SHOULD NOT change from occurrence to occurrence of the same problem.\n",
            "example" : "080F0100",
            "type" : "string"
          },
          "detailedDiagnosisCode" : {
            "description" : "The detailed diagnosis code issued by the system that caused the problem.\nThis code can be used to track down the detailed cause and source of the error.\nIt can be used to search in the documentation for a solution.\nThe detailed diagnosis code gives additional information about the cause of the error.\nIt SHOULD NOT change from occurrence to occurrence of the same problem.\n",
            "example" : "00666001",
            "type" : "string"
          },
          "dynamicDescription" : {
            "description" : "A dynamic description gives detailed information about the occurrence of a problem.\nIt can change between different occurrences of the same error.\n",
            "example" : "value = -4.5",
            "type" : "string"
          },
          "severity" : {
            "description" : " Severity of a problem as defined RFC5424 of the Syslog standard, see https://tools.ietf.org/html/rfc5424",
            "enum" : [ "Emergency", "Alert", "Critical", "Error", "Warning", "Notice", "Informational", "Debug" ],
            "example" : "Error",
            "type" : "string"
          },
          "links" : {
            "description" : "Collection of links to fix the problem. E.g. links to online user manual,\nto an online community (using tags) or a developer chat (e.g. Slack).\n",
            "items" : {
              "example" : "https://stackoverflow.com/questions/tagged/boschrexroth+controlx+f360001",
              "format" : "uri",
              "type" : "string"
            },
            "type" : "array"
          },
          "moreInfo" : {
            "additionalProperties" : true,
            "example" : {
              "trace" : "ExampleClass.cpp#452 Null pointer exception",
              "class" : "ExampleClass"
            },
            "type" : "object"
          }
        },
        "required" : [ "title", "type" ],
        "type" : "object",
        "x-version" : "1.0.0"
      },
      "AddKey" : {
        "example" : {
          "existingPassphrase" : "MyExistingPassphrase",
          "newPassphrase" : "MyNewPassphrase"
        },
        "properties" : {
          "existingPassphrase" : {
            "description" : "An existing passphrase that has already been set to the device to authenticate the request.",
            "example" : "MyExistingPassphrase",
            "type" : "string"
          },
          "newPassphrase" : {
            "description" : "A new passphrase that should be added to the device.",
            "example" : "MyNewPassphrase",
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "RemoveKey" : {
        "example" : {
          "existingPassphrase" : "MyExistingPassphrase"
        },
        "properties" : {
          "existingPassphrase" : {
            "description" : "An existing passphrase that has already been set to the device to authenticate the request.",
            "example" : "MyExistingPassphrase",
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "MediaFormat" : {
        "enum" : [ "fat32", "ext4", "crypto_LUKS" ],
        "example" : "fat32",
        "type" : "string"
      },
      "MediaAssignment" : {
        "description" : "There are in principle 2 different modes how a media device can be mounted and used in the system. Either as permanent storage-extension to increase and extend the availabel disk space for the device. Or as temporary data-exchange which allows to copy data from and to the media device.",
        "enum" : [ "storage-extension", "data-exchange" ],
        "example" : "data-exchange",
        "type" : "string"
      },
      "TaskMountParameters" : {
        "properties" : {
          "media" : {
            "description" : "UUID of the media (partition)",
            "example" : "d713f534-1240-4d5e-ae66-f79936c88bb5",
            "type" : "string"
          },
          "assignment" : {
            "$ref" : "#/components/schemas/MediaAssignment"
          }
        },
        "type" : "object"
      },
      "TaskFormatParameters" : {
        "properties" : {
          "media" : {
            "description" : "UUID of the media (partition)",
            "example" : "d713f534-1240-4d5e-ae66-f79936c88bb5",
            "type" : "string"
          },
          "format" : {
            "example" : "fat32",
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "TaskCreateExtensionStorageParameters" : {
        "properties" : {
          "device" : {
            "description" : "Device to create partition table and format for extension storage",
            "example" : "sdb",
            "type" : "string"
          },
          "passphrase" : {
            "description" : "Passphrase set as initial user key of encrypted device",
            "example" : "myInitialPassphrase",
            "type" : "string"
          }
        },
        "required" : [ "media", "passphrase" ],
        "type" : "object"
      },
      "TaskMount_allOf" : {
        "description" : "Task to mount removable media partition",
        "properties" : {
          "action" : {
            "example" : "mount",
            "type" : "string"
          },
          "parameters" : {
            "$ref" : "#/components/schemas/TaskMountParameters"
          }
        }
      },
      "TaskUnmount_allOf" : {
        "description" : "Task to unmount removable media partition",
        "properties" : {
          "action" : {
            "example" : "unmount",
            "type" : "string"
          },
          "parameters" : {
            "$ref" : "#/components/schemas/TaskMountParameters"
          }
        }
      },
      "TaskFormat_allOf" : {
        "description" : "Task to format a removable media partition",
        "properties" : {
          "action" : {
            "example" : "format",
            "type" : "string"
          },
          "parameters" : {
            "$ref" : "#/components/schemas/TaskFormatParameters"
          }
        }
      },
      "TaskCreateExtensionStorage_allOf" : {
        "description" : "Task to create an internal extension storage",
        "properties" : {
          "action" : {
            "example" : "createExtensionStorage",
            "type" : "string"
          },
          "parameters" : {
            "$ref" : "#/components/schemas/TaskCreateExtensionStorageParameters"
          }
        }
      }
    }
  }
}