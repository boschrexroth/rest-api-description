{
  "openapi" : "3.0.0",
  "info" : {
    "contact" : {
      "email" : "suppport@boschrexroth.com",
      "name" : "Bosch Rexroth AG",
      "url" : "https://www.boschrexroth.com"
    },
    "description" : "This is an API for the identity management on ctrX devices.",
    "title" : "Bosch Rexroth Identity Manager Service",
    "version" : "2.0.0"
  },
  "servers" : [ {
    "description" : "Use this, if this page and the api are on the same server",
    "url" : "/identity-manager/api/v2"
  }, {
    "url" : "https://{host}/identity-manager/api/{version}",
    "variables" : {
      "host" : {
        "default" : "[fe80::dcad:beff:fe00:0001]",
        "description" : "Hostname or ip address of the ctrlX device"
      },
      "version" : {
        "default" : "v2",
        "description" : "The version of the API",
        "enum" : [ "v2" ]
      }
    }
  } ],
  "paths" : {
    "/settings/easyserviceaccess" : {
      "get" : {
        "description" : "Get easy service access settings.",
        "operationId" : "getEasyServiceAccessSettings",
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EasyServiceAccessSettings"
                }
              }
            },
            "description" : "OK"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            },
            "description" : "Not authorized to access this resource"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            },
            "description" : "Access forbidden for this resource"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            },
            "description" : "Something unexpected happened on the server"
          }
        },
        "security" : [ {
          "BearerAuth" : [ ]
        } ],
        "summary" : "Get easy service access settings.",
        "tags" : [ "Settings" ]
      },
      "put" : {
        "description" : "Update easy service access settings.",
        "operationId" : "updateEasyServiceAccessSettings",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/EasyServiceAccessSettings"
              }
            }
          },
          "description" : "The easy service access settings.",
          "required" : true
        },
        "responses" : {
          "204" : {
            "description" : "OK, easy service access settings saved"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            },
            "description" : "The request is incomplete or malformed"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            },
            "description" : "Not authorized to access this resource"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            },
            "description" : "Access forbidden for this resource"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            },
            "description" : "Something unexpected happened on the server"
          }
        },
        "security" : [ {
          "BearerAuth" : [ ]
        } ],
        "summary" : "Update easy service access settings.",
        "tags" : [ "Settings" ]
      }
    },
    "/settings/loginbanner" : {
      "get" : {
        "description" : "Get the login banner that is shown with the login screen.",
        "operationId" : "getLoginBanner",
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LoginBanner"
                }
              }
            },
            "description" : "OK"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            },
            "description" : "Not authorized to access this resource"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            },
            "description" : "Access forbidden for this resource"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            },
            "description" : "Something unexpected happened on the server"
          }
        },
        "security" : [ {
          "BearerAuth" : [ ]
        } ],
        "summary" : "Get the login banner that is shown with the login screen.",
        "tags" : [ "Settings" ]
      },
      "put" : {
        "description" : "Set the login banner that is shown with the login screen.",
        "operationId" : "setLoginBanner",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/LoginBanner"
              }
            }
          },
          "description" : "The new login banner text.",
          "required" : true
        },
        "responses" : {
          "204" : {
            "description" : "OK, new banner saved"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            },
            "description" : "The request is incomplete or malformed"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            },
            "description" : "Not authorized to access this resource"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            },
            "description" : "Access forbidden for this resource"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            },
            "description" : "Something unexpected happened on the server"
          }
        },
        "security" : [ {
          "BearerAuth" : [ ]
        } ],
        "summary" : "Set the login banner that is shown with the login screen.",
        "tags" : [ "Settings" ]
      }
    },
    "/settings/session" : {
      "get" : {
        "description" : "get all Session-related settings object",
        "operationId" : "getSessionSettings",
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SessionSettings"
                }
              }
            },
            "description" : "OK"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            },
            "description" : "Not authorized to access this resource"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            },
            "description" : "Access forbidden for this resource"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            },
            "description" : "Something unexpected happened on the server"
          }
        },
        "security" : [ {
          "BearerAuth" : [ ]
        } ],
        "summary" : "Get session-related settings",
        "tags" : [ "Settings" ]
      },
      "put" : {
        "description" : "Set session default settings",
        "operationId" : "putSessionSettings",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/SessionSettings"
              }
            }
          },
          "description" : "Object with all Session-related Settings",
          "required" : true
        },
        "responses" : {
          "204" : {
            "description" : "OK, settings saved"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            },
            "description" : "The request is incomplete or malformed"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            },
            "description" : "Not authorized to access this resource"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            },
            "description" : "Access forbidden for this resource"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            },
            "description" : "Something unexpected happened on the server"
          }
        },
        "security" : [ {
          "BearerAuth" : [ ]
        } ],
        "summary" : "Set session settings",
        "tags" : [ "Settings" ]
      }
    },
    "/sessions" : {
      "get" : {
        "description" : "Get session-sbject srray (sessions-summary)",
        "operationId" : "getSessions",
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "items" : {
                    "$ref" : "#/components/schemas/Session"
                  },
                  "type" : "array"
                }
              }
            },
            "description" : "OK"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            },
            "description" : "Not authorized to access this resource"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            },
            "description" : "Access forbidden for this resource"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            },
            "description" : "Something unexpected happened on the server"
          }
        },
        "security" : [ {
          "BearerAuth" : [ ]
        } ],
        "summary" : "Get all open Sessions",
        "tags" : [ "Session Management" ]
      }
    },
    "/sessions/{id}" : {
      "delete" : {
        "description" : "Close Session via Session-ID",
        "operationId" : "deleteSession",
        "parameters" : [ {
          "description" : "Session ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "204" : {
            "description" : "OK, Session closed"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            },
            "description" : "Not authorized to access this resource"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            },
            "description" : "Access forbidden for this resource"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            },
            "description" : "The resource was not found"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            },
            "description" : "Something unexpected happened on the server"
          }
        },
        "security" : [ {
          "BearerAuth" : [ ]
        } ],
        "summary" : "Close session via session ID",
        "tags" : [ "Session Management" ]
      },
      "get" : {
        "description" : "Get details of session with given ID",
        "operationId" : "getSession",
        "parameters" : [ {
          "description" : "Session ID",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Session"
                }
              }
            },
            "description" : "OK, Session Details in content"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            },
            "description" : "Not authorized to access this resource"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            },
            "description" : "Access forbidden for this resource"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            },
            "description" : "The resource was not found"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            },
            "description" : "Something unexpected happened on the server"
          }
        },
        "security" : [ {
          "BearerAuth" : [ ]
        } ],
        "summary" : "Get session with session ID",
        "tags" : [ "Session Management" ]
      }
    },
    "/auth/token" : {
      "delete" : {
        "description" : "Destroys the authentication token of the currently logged in user.",
        "operationId" : "destroyToken",
        "responses" : {
          "204" : {
            "description" : "Token successfully destroyed."
          }
        },
        "summary" : "Destroy an authentication token",
        "tags" : [ "Authentication" ]
      },
      "post" : {
        "description" : "Create an authentication token for the specified user.",
        "operationId" : "createToken",
        "parameters" : [ {
          "description" : "If true, ignore remote authentication.",
          "explode" : true,
          "in" : "query",
          "name" : "force-local-auth",
          "required" : false,
          "schema" : {
            "type" : "boolean"
          },
          "style" : "form"
        }, {
          "description" : "If true only the credentials are checked, no token or session is created.",
          "explode" : true,
          "in" : "query",
          "name" : "dryrun",
          "required" : false,
          "schema" : {
            "default" : false,
            "type" : "boolean"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Credentials"
              }
            }
          },
          "description" : "Username and password",
          "required" : true
        },
        "responses" : {
          "204" : {
            "description" : "The dryrun was successful."
          },
          "201" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Token"
                }
              }
            },
            "description" : "Token successfully created."
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            },
            "description" : "The request is incomplete or malformed"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            },
            "description" : "Something unexpected happened on the server"
          }
        },
        "security" : [ {
          "OAuth2PasswordFlow" : [ ]
        }, {
          "basicAuth" : [ ]
        } ],
        "summary" : "Create an authentication token.",
        "tags" : [ "Authentication" ]
      }
    },
    "/auth/token/validity" : {
      "get" : {
        "description" : "Validate token.",
        "operationId" : "validateToken",
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Validity"
                }
              }
            },
            "description" : "Get validity of token."
          }
        },
        "summary" : "Validate token.",
        "tags" : [ "Authentication" ]
      }
    },
    "/systemusergen" : {
      "post" : {
        "description" : "Creates a new system user account with assertion file. Requires administration privileges. The created user is active (true) by default and has sudo permissions.",
        "operationId" : "systemUserGen",
        "requestBody" : {
          "content" : {
            "multipart/form-data" : {
              "schema" : {
                "$ref" : "#/components/schemas/UploadAssertion"
              }
            }
          },
          "description" : "system user assertion file",
          "required" : true
        },
        "responses" : {
          "201" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/User"
                }
              }
            },
            "description" : "User creation successful."
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            },
            "description" : "The request is incomplete or malformed"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            },
            "description" : "Not authorized to access this resource"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            },
            "description" : "Access forbidden for this resource"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            },
            "description" : "Something unexpected happened on the server"
          }
        },
        "security" : [ {
          "BearerAuth" : [ ]
        } ],
        "summary" : "Create a new system user account",
        "tags" : [ "User Management" ]
      }
    },
    "/users" : {
      "get" : {
        "description" : "Retrieve the users and their current status",
        "operationId" : "getUsers",
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Users"
                }
              }
            },
            "description" : "Operation successful"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            },
            "description" : "The request is incomplete or malformed"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            },
            "description" : "Not authorized to access this resource"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            },
            "description" : "Access forbidden for this resource"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            },
            "description" : "Something unexpected happened on the server"
          }
        },
        "security" : [ {
          "BearerAuth" : [ ]
        } ],
        "summary" : "List users",
        "tags" : [ "User Management" ]
      },
      "post" : {
        "description" : "Creates a new user account. Requires administration privileges. The created user is active (true) by default.",
        "operationId" : "createUser",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/User"
              }
            }
          },
          "description" : "Name of the normal user or assertion of system user",
          "required" : true
        },
        "responses" : {
          "201" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/User"
                }
              }
            },
            "description" : "User creation successful."
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            },
            "description" : "The request is incomplete or malformed"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            },
            "description" : "Not authorized to access this resource"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            },
            "description" : "Access forbidden for this resource"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            },
            "description" : "Something unexpected happened on the server"
          }
        },
        "security" : [ {
          "BearerAuth" : [ ]
        } ],
        "summary" : "Create a new user account",
        "tags" : [ "User Management" ]
      }
    },
    "/users/{id}" : {
      "delete" : {
        "description" : "Delete the user with the specified id",
        "operationId" : "deleteUser",
        "parameters" : [ {
          "description" : "The user id",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "204" : {
            "description" : "User account deleted successfully."
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            },
            "description" : "The request is incomplete or malformed"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            },
            "description" : "Not authorized to access this resource"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            },
            "description" : "Access forbidden for this resource"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            },
            "description" : "The resource was not found"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            },
            "description" : "Something unexpected happened on the server"
          }
        },
        "security" : [ {
          "BearerAuth" : [ ]
        } ],
        "summary" : "Delete a user",
        "tags" : [ "User Management" ]
      },
      "get" : {
        "description" : "Retrieve the details of the user with the specified id",
        "operationId" : "getUser",
        "parameters" : [ {
          "description" : "The user id",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/User"
                }
              }
            },
            "description" : "User details."
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            },
            "description" : "The request is incomplete or malformed"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            },
            "description" : "Not authorized to access this resource"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            },
            "description" : "Access forbidden for this resource"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            },
            "description" : "The resource was not found"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            },
            "description" : "Something unexpected happened on the server"
          }
        },
        "security" : [ {
          "BearerAuth" : [ ]
        } ],
        "summary" : "Retrieve details of a user",
        "tags" : [ "User Management" ]
      },
      "put" : {
        "description" : "Update writable properties of a user with the specified id. Such as lock state, individual session settings.\n",
        "operationId" : "updateUser",
        "parameters" : [ {
          "description" : "The user id",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/User"
              }
            }
          },
          "description" : "User object with updated lock state and individual session settings.",
          "required" : true
        },
        "responses" : {
          "204" : {
            "description" : "OK, properties saved."
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            },
            "description" : "The request is incomplete or malformed"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            },
            "description" : "Not authorized to access this resource"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            },
            "description" : "Access forbidden for this resource"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            },
            "description" : "The resource was not found"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            },
            "description" : "Something unexpected happened on the server"
          }
        },
        "security" : [ {
          "BearerAuth" : [ ]
        } ],
        "summary" : "Update writable properties of a user",
        "tags" : [ "User Management" ]
      }
    },
    "/users/{id}/locked" : {
      "put" : {
        "description" : "Change the lock state of the user with the specified id",
        "operationId" : "updateLockState",
        "parameters" : [ {
          "description" : "The user id",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/User"
              }
            }
          },
          "description" : "User object with updated lock state",
          "required" : true
        },
        "responses" : {
          "204" : {
            "description" : "Lock state updated successfully."
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            },
            "description" : "The request is incomplete or malformed"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            },
            "description" : "Not authorized to access this resource"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            },
            "description" : "Access forbidden for this resource"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            },
            "description" : "The resource was not found"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            },
            "description" : "Something unexpected happened on the server"
          }
        },
        "security" : [ {
          "BearerAuth" : [ ]
        } ],
        "summary" : "Change the lock state of a user",
        "tags" : [ "User Management" ]
      }
    },
    "/users/{id}/credentials" : {
      "put" : {
        "description" : "Changes the password of the user with the specified id. Only administrators are allowed to change the passwords of other  users. Regular users need to supply the current password to  set a new password.\n",
        "operationId" : "changePassword",
        "parameters" : [ {
          "description" : "The user id",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Passwords"
              }
            }
          },
          "description" : "New and current password (optional for admin users)",
          "required" : true
        },
        "responses" : {
          "204" : {
            "description" : "Password update successful."
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            },
            "description" : "The request is incomplete or malformed"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            },
            "description" : "Not authorized to access this resource"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            },
            "description" : "Access forbidden for this resource"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            },
            "description" : "The resource was not found"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            },
            "description" : "Something unexpected happened on the server"
          }
        },
        "security" : [ {
          "BearerAuth" : [ ]
        } ],
        "summary" : "Change the password of a user",
        "tags" : [ "User Management" ]
      }
    },
    "/users/{id}/membership" : {
      "get" : {
        "description" : "Get the groups of which the specified user is a member of.\n",
        "operationId" : "getMembership",
        "parameters" : [ {
          "description" : "The user id",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Groups"
                }
              }
            },
            "description" : "Groups, to which the user belongs."
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            },
            "description" : "The request is incomplete or malformed"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            },
            "description" : "Not authorized to access this resource"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            },
            "description" : "Access forbidden for this resource"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            },
            "description" : "The resource was not found"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            },
            "description" : "Something unexpected happened on the server"
          }
        },
        "security" : [ {
          "BearerAuth" : [ ]
        } ],
        "summary" : "Get the groups of the specified user.",
        "tags" : [ "User Management" ]
      },
      "post" : {
        "description" : "Assigns the specified groups to a user.\n",
        "operationId" : "addMembership",
        "parameters" : [ {
          "description" : "The user id",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Group"
              }
            }
          },
          "description" : "Group assignment of the user",
          "required" : true
        },
        "responses" : {
          "204" : {
            "description" : "Group assignment updated successfully."
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            },
            "description" : "The request is incomplete or malformed"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            },
            "description" : "Not authorized to access this resource"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            },
            "description" : "Access forbidden for this resource"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            },
            "description" : "The resource was not found"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            },
            "description" : "Something unexpected happened on the server"
          }
        },
        "security" : [ {
          "BearerAuth" : [ ]
        } ],
        "summary" : "Add the user to the specified group.",
        "tags" : [ "User Management" ]
      },
      "put" : {
        "description" : "Assigns the specified groups to a user.\n",
        "operationId" : "updateMembership",
        "parameters" : [ {
          "description" : "The user id",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Groups"
              }
            }
          },
          "description" : "Group assignment of the user",
          "required" : true
        },
        "responses" : {
          "204" : {
            "description" : "Group assignment updated successfully."
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            },
            "description" : "The request is incomplete or malformed"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            },
            "description" : "Not authorized to access this resource"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            },
            "description" : "Access forbidden for this resource"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            },
            "description" : "The resource was not found"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            },
            "description" : "Something unexpected happened on the server"
          }
        },
        "security" : [ {
          "BearerAuth" : [ ]
        } ],
        "summary" : "Update the group membership of a user.",
        "tags" : [ "User Management" ]
      }
    },
    "/users/{id}/membership/{groupid}" : {
      "delete" : {
        "description" : "Delete the membership of the user to the specified group.\n",
        "operationId" : "deleteMembership",
        "parameters" : [ {
          "description" : "The user id",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "The group id",
          "explode" : false,
          "in" : "path",
          "name" : "groupid",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "204" : {
            "description" : "Group membership deleted."
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            },
            "description" : "The request is incomplete or malformed"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            },
            "description" : "Not authorized to access this resource"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            },
            "description" : "Access forbidden for this resource"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            },
            "description" : "The resource was not found"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            },
            "description" : "Something unexpected happened on the server"
          }
        },
        "security" : [ {
          "BearerAuth" : [ ]
        } ],
        "summary" : "Remove the specified user from the specified group.",
        "tags" : [ "User Management" ]
      }
    },
    "/users/{id}/scopes" : {
      "get" : {
        "description" : "Get the scopes which is granted to the specified user.\n",
        "operationId" : "getScopesOfUser",
        "parameters" : [ {
          "description" : "The user id",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Scopes"
                }
              }
            },
            "description" : "Scopes, which are granted to the user."
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            },
            "description" : "The request is incomplete or malformed"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            },
            "description" : "Not authorized to access this resource"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            },
            "description" : "Access forbidden for this resource"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            },
            "description" : "The resource was not found"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            },
            "description" : "Something unexpected happened on the server"
          }
        },
        "security" : [ {
          "BearerAuth" : [ ]
        } ],
        "summary" : "Get the granted scopes of the specified user.",
        "tags" : [ "User Management" ]
      },
      "put" : {
        "description" : "Grant scopes to a user.\n",
        "operationId" : "updateScopesOfUser",
        "parameters" : [ {
          "description" : "The user id",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Scopes"
              }
            }
          },
          "description" : "Scope assignment of the user",
          "required" : true
        },
        "responses" : {
          "204" : {
            "description" : "Scope assignment updated successfully."
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            },
            "description" : "The request is incomplete or malformed"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            },
            "description" : "Not authorized to access this resource"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            },
            "description" : "Access forbidden for this resource"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            },
            "description" : "The resource was not found"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            },
            "description" : "Something unexpected happened on the server"
          }
        },
        "security" : [ {
          "BearerAuth" : [ ]
        } ],
        "summary" : "Update the granted scopes of a user.",
        "tags" : [ "User Management" ]
      }
    },
    "/users/{id}/pwdchgatnextlogin" : {
      "get" : {
        "description" : "Check if the user with id is forced to change password at next login.\n",
        "operationId" : "checkForcedChpasswd",
        "parameters" : [ {
          "description" : "The user id",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ForceChpasswd"
                }
              }
            },
            "description" : "Status, whether the user is forced to change password at next login."
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            },
            "description" : "The request is incomplete or malformed"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            },
            "description" : "Not authorized to access this resource"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            },
            "description" : "Access forbidden for this resource"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            },
            "description" : "The resource was not found"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            },
            "description" : "Something unexpected happened on the server"
          }
        },
        "security" : [ {
          "BearerAuth" : [ ]
        } ],
        "summary" : "Check if the user is forced to change password at next login.",
        "tags" : [ "User Management" ]
      },
      "put" : {
        "description" : "Enable/Disable force user with id to change password at next login",
        "operationId" : "enforceChpasswd",
        "parameters" : [ {
          "description" : "The user id",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ForceChpasswd"
              }
            }
          },
          "description" : "Status, whether the user is forced to change password at next login.",
          "required" : true
        },
        "responses" : {
          "204" : {
            "description" : "Enforce user to change passsword at next login successfully."
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            },
            "description" : "The request is incomplete or malformed"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            },
            "description" : "Not authorized to access this resource"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            },
            "description" : "Access forbidden for this resource"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            },
            "description" : "The resource was not found"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            },
            "description" : "Something unexpected happened on the server"
          }
        },
        "security" : [ {
          "BearerAuth" : [ ]
        } ],
        "summary" : "Enable/Disable force password change at next login",
        "tags" : [ "User Management" ]
      }
    },
    "/groups" : {
      "get" : {
        "description" : "Retrieve a list of groups that are available on the system",
        "operationId" : "getGroups",
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Groups"
                }
              }
            },
            "description" : "List of groups"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            },
            "description" : "The request is incomplete or malformed"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            },
            "description" : "Not authorized to access this resource"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            },
            "description" : "Access forbidden for this resource"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            },
            "description" : "The resource was not found"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            },
            "description" : "Something unexpected happened on the server"
          }
        },
        "security" : [ {
          "BearerAuth" : [ ]
        } ],
        "summary" : "List available groups",
        "tags" : [ "Group Management" ]
      },
      "post" : {
        "description" : "Creates a new user group. Requires administration privileges.",
        "operationId" : "createGroup",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Group"
              }
            }
          },
          "description" : "Name of the group to be created",
          "required" : true
        },
        "responses" : {
          "201" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Group"
                }
              }
            },
            "description" : "Group created successfully."
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            },
            "description" : "The request is incomplete or malformed"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            },
            "description" : "Not authorized to access this resource"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            },
            "description" : "Access forbidden for this resource"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            },
            "description" : "The resource was not found"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            },
            "description" : "Something unexpected happened on the server"
          }
        },
        "security" : [ {
          "BearerAuth" : [ ]
        } ],
        "summary" : "Create a new group",
        "tags" : [ "Group Management" ]
      }
    },
    "/groups/{id}" : {
      "delete" : {
        "description" : "Delete the group with the specified id",
        "operationId" : "deleteGroup",
        "parameters" : [ {
          "description" : "The group id",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "204" : {
            "description" : "Group deleted."
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            },
            "description" : "The request is incomplete or malformed"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            },
            "description" : "Not authorized to access this resource"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            },
            "description" : "Access forbidden for this resource"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            },
            "description" : "The resource was not found"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            },
            "description" : "Something unexpected happened on the server"
          }
        },
        "security" : [ {
          "BearerAuth" : [ ]
        } ],
        "summary" : "Delete a group",
        "tags" : [ "Group Management" ]
      },
      "get" : {
        "description" : "Retrieve the details of the group with the specified id",
        "operationId" : "getGroup",
        "parameters" : [ {
          "description" : "The group id",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Group"
                }
              }
            },
            "description" : "Group details."
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            },
            "description" : "The request is incomplete or malformed"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            },
            "description" : "Not authorized to access this resource"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            },
            "description" : "Access forbidden for this resource"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            },
            "description" : "The resource was not found"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            },
            "description" : "Something unexpected happened on the server"
          }
        },
        "security" : [ {
          "BearerAuth" : [ ]
        } ],
        "summary" : "Retrieve details of a group",
        "tags" : [ "Group Management" ]
      }
    },
    "/groups/{id}/members" : {
      "get" : {
        "description" : "Get the members of the specified group.\n",
        "operationId" : "getGroupMembers",
        "parameters" : [ {
          "description" : "The group id",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Users"
                }
              }
            },
            "description" : "The members of the group."
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            },
            "description" : "The request is incomplete or malformed"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            },
            "description" : "Not authorized to access this resource"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            },
            "description" : "Access forbidden for this resource"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            },
            "description" : "The resource was not found"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            },
            "description" : "Something unexpected happened on the server"
          }
        },
        "security" : [ {
          "BearerAuth" : [ ]
        } ],
        "summary" : "Get the members of the specified group.",
        "tags" : [ "Group Management" ]
      },
      "post" : {
        "description" : "Adds the specified user to the group.\n",
        "operationId" : "addGroupMember",
        "parameters" : [ {
          "description" : "The group id",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/User"
              }
            }
          },
          "description" : "User to be added to the group",
          "required" : true
        },
        "responses" : {
          "204" : {
            "description" : "User assignment updated successfully."
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            },
            "description" : "The request is incomplete or malformed"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            },
            "description" : "Not authorized to access this resource"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            },
            "description" : "Access forbidden for this resource"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            },
            "description" : "The resource was not found"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            },
            "description" : "Something unexpected happened on the server"
          }
        },
        "security" : [ {
          "BearerAuth" : [ ]
        } ],
        "summary" : "Add the user to the specified group.",
        "tags" : [ "Group Management" ]
      },
      "put" : {
        "description" : "Updates the members of the specified group\n",
        "operationId" : "updateMembers",
        "parameters" : [ {
          "description" : "The group id",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Users"
              }
            }
          },
          "description" : "Member(s) of the group",
          "required" : true
        },
        "responses" : {
          "204" : {
            "description" : "Updated group members successfully."
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            },
            "description" : "The request is incomplete or malformed"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            },
            "description" : "Not authorized to access this resource"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            },
            "description" : "Access forbidden for this resource"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            },
            "description" : "The resource was not found"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            },
            "description" : "Something unexpected happened on the server"
          }
        },
        "security" : [ {
          "BearerAuth" : [ ]
        } ],
        "summary" : "Update group members",
        "tags" : [ "Group Management" ]
      }
    },
    "/groups/{id}/members/{userid}" : {
      "delete" : {
        "description" : "Remove the membership of the specified user to the specified group\n",
        "operationId" : "deleteUserInGroup",
        "parameters" : [ {
          "description" : "The group id",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "The user id",
          "explode" : false,
          "in" : "path",
          "name" : "userid",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "204" : {
            "description" : "Group membership deleted."
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            },
            "description" : "The request is incomplete or malformed"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            },
            "description" : "Not authorized to access this resource"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            },
            "description" : "Access forbidden for this resource"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            },
            "description" : "The resource was not found"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            },
            "description" : "Something unexpected happened on the server"
          }
        },
        "security" : [ {
          "BearerAuth" : [ ]
        } ],
        "summary" : "Remove a user from the group",
        "tags" : [ "Group Management" ]
      }
    },
    "/groups/{id}/scopes" : {
      "get" : {
        "description" : "Get the scopes which is granted to the specified group.\n",
        "operationId" : "getScopesOfGroup",
        "parameters" : [ {
          "description" : "The group id",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Scopes"
                }
              }
            },
            "description" : "Scopes, which are granted to the group."
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            },
            "description" : "The request is incomplete or malformed"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            },
            "description" : "Not authorized to access this resource"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            },
            "description" : "Access forbidden for this resource"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            },
            "description" : "The resource was not found"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            },
            "description" : "Something unexpected happened on the server"
          }
        },
        "security" : [ {
          "BearerAuth" : [ ]
        } ],
        "summary" : "Get the granted scopes of the specified group.",
        "tags" : [ "Group Management" ]
      },
      "put" : {
        "description" : "Grant scopes to a group.\n",
        "operationId" : "updateScopesOfGroup",
        "parameters" : [ {
          "description" : "The group id",
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Scopes"
              }
            }
          },
          "description" : "Scope assignment of the group",
          "required" : true
        },
        "responses" : {
          "204" : {
            "description" : "Scope assignment updated successfully."
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            },
            "description" : "The request is incomplete or malformed"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            },
            "description" : "Not authorized to access this resource"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            },
            "description" : "Access forbidden for this resource"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            },
            "description" : "The resource was not found"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            },
            "description" : "Something unexpected happened on the server"
          }
        },
        "security" : [ {
          "BearerAuth" : [ ]
        } ],
        "summary" : "Update the granted scopes of a group.",
        "tags" : [ "Group Management" ]
      }
    },
    "/scopes" : {
      "get" : {
        "description" : "Retrieve the scopes, which are registered in identity-manager",
        "operationId" : "getScopes",
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Apps"
                }
              }
            },
            "description" : "Operation successful"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            },
            "description" : "The request is incomplete or malformed"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            },
            "description" : "Not authorized to access this resource"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            },
            "description" : "Access forbidden for this resource"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            },
            "description" : "Something unexpected happened on the server"
          }
        },
        "security" : [ {
          "BearerAuth" : [ ]
        } ],
        "summary" : "List Scopes",
        "tags" : [ "Scope Management" ]
      }
    },
    "/scopes/{identifier}/users" : {
      "get" : {
        "description" : "Get the users, to which the specified scope is granted.\n",
        "operationId" : "getUsersOfScope",
        "parameters" : [ {
          "description" : "The identifier of scope",
          "explode" : false,
          "in" : "path",
          "name" : "identifier",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Users"
                }
              }
            },
            "description" : "The users, to which the specified scope is granted."
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            },
            "description" : "The request is incomplete or malformed"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            },
            "description" : "Not authorized to access this resource"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            },
            "description" : "Access forbidden for this resource"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            },
            "description" : "The resource was not found"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            },
            "description" : "Something unexpected happened on the server"
          }
        },
        "security" : [ {
          "BearerAuth" : [ ]
        } ],
        "summary" : "Get the users of the specified scope.",
        "tags" : [ "Scope Management" ]
      },
      "put" : {
        "description" : "Update the users, to which the specified scope is granted.\n",
        "operationId" : "updateUsersOfScope",
        "parameters" : [ {
          "description" : "The identifier of scope",
          "explode" : false,
          "in" : "path",
          "name" : "identifier",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Users"
              }
            }
          },
          "description" : "Users, to which the scope is granted.",
          "required" : true
        },
        "responses" : {
          "204" : {
            "description" : "Grant the scope to users successfully."
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            },
            "description" : "The request is incomplete or malformed"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            },
            "description" : "Not authorized to access this resource"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            },
            "description" : "Access forbidden for this resource"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            },
            "description" : "The resource was not found"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            },
            "description" : "Something unexpected happened on the server"
          }
        },
        "security" : [ {
          "BearerAuth" : [ ]
        } ],
        "summary" : "Update the users of the specified scope.",
        "tags" : [ "Scope Management" ]
      }
    },
    "/scopes/{identifier}/groups" : {
      "get" : {
        "description" : "Get the groups, to which the specified scope is granted.\n",
        "operationId" : "getGroupsOfScope",
        "parameters" : [ {
          "description" : "The identifier of scope",
          "explode" : false,
          "in" : "path",
          "name" : "identifier",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Groups"
                }
              }
            },
            "description" : "The groups, to which the specified scope is granted."
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            },
            "description" : "The request is incomplete or malformed"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            },
            "description" : "Not authorized to access this resource"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            },
            "description" : "Access forbidden for this resource"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            },
            "description" : "The resource was not found"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            },
            "description" : "Something unexpected happened on the server"
          }
        },
        "security" : [ {
          "BearerAuth" : [ ]
        } ],
        "summary" : "Get the groups of the specified scope.",
        "tags" : [ "Scope Management" ]
      },
      "put" : {
        "description" : "Update the groups, to which the specified scope is granted.\n",
        "operationId" : "updateGroupsOfScope",
        "parameters" : [ {
          "description" : "The identifier of scope",
          "explode" : false,
          "in" : "path",
          "name" : "identifier",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Groups"
              }
            }
          },
          "description" : "groups, to which the scope is granted.",
          "required" : true
        },
        "responses" : {
          "204" : {
            "description" : "Grant the scope to groups successfully."
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            },
            "description" : "The request is incomplete or malformed"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            },
            "description" : "Not authorized to access this resource"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            },
            "description" : "Access forbidden for this resource"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            },
            "description" : "The resource was not found"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            },
            "description" : "Something unexpected happened on the server"
          }
        },
        "security" : [ {
          "BearerAuth" : [ ]
        } ],
        "summary" : "Update the groups of the specified scope.",
        "tags" : [ "Scope Management" ]
      }
    },
    "/policies/users/reservednames" : {
      "get" : {
        "description" : "List of reserved names, which must not be used when creating a new user account",
        "operationId" : "getReservedUsernames",
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Reservednames"
                }
              }
            },
            "description" : "Operation successful"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            },
            "description" : "The request is incomplete or malformed"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            },
            "description" : "Not authorized to access this resource"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            },
            "description" : "Access forbidden for this resource"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            },
            "description" : "Something unexpected happened on the server"
          }
        },
        "security" : [ {
          "BearerAuth" : [ ]
        } ],
        "summary" : "List of reserved usernames.",
        "tags" : [ "Policies" ]
      }
    },
    "/policies/users/passwords" : {
      "get" : {
        "description" : "Get password policies.",
        "operationId" : "getPasswordPolicies",
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PasswordPolicies"
                }
              }
            },
            "description" : "Operation successful"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            },
            "description" : "The request is incomplete or malformed"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            },
            "description" : "Not authorized to access this resource"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            },
            "description" : "Access forbidden for this resource"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            },
            "description" : "Something unexpected happened on the server"
          }
        },
        "security" : [ {
          "BearerAuth" : [ ]
        } ],
        "summary" : "Get password policies.",
        "tags" : [ "Policies" ]
      },
      "put" : {
        "description" : "Update password policies.\n",
        "operationId" : "updatePasswordPolicies",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PasswordPolicies"
              }
            }
          },
          "description" : "password policies.",
          "required" : true
        },
        "responses" : {
          "204" : {
            "description" : "Update password policies successfully."
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            },
            "description" : "The request is incomplete or malformed"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            },
            "description" : "Not authorized to access this resource"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            },
            "description" : "Access forbidden for this resource"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            },
            "description" : "Something unexpected happened on the server"
          }
        },
        "security" : [ {
          "BearerAuth" : [ ]
        } ],
        "summary" : "Update password policies.",
        "tags" : [ "Policies" ]
      }
    },
    "/policies/groups/reservednames" : {
      "get" : {
        "description" : "List of reserved names, which must not be used when creating a new group",
        "operationId" : "getReservedGroupnames",
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Reservednames"
                }
              }
            },
            "description" : "Operation successful"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            },
            "description" : "The request is incomplete or malformed"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            },
            "description" : "Not authorized to access this resource"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            },
            "description" : "Access forbidden for this resource"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            },
            "description" : "Something unexpected happened on the server"
          }
        },
        "security" : [ {
          "BearerAuth" : [ ]
        } ],
        "summary" : "List of reserved groupnames",
        "tags" : [ "Policies" ]
      }
    },
    "/loginLockedStatus/users" : {
      "get" : {
        "description" : "List of login locked status",
        "operationId" : "getLoginLockedStatus",
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LoginLockedStatusOfAllUsers"
                }
              }
            },
            "description" : "Operation successful"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            },
            "description" : "The request is incomplete or malformed"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            },
            "description" : "Not authorized to access this resource"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            },
            "description" : "Access forbidden for this resource"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            },
            "description" : "Something unexpected happened on the server"
          }
        },
        "security" : [ {
          "BearerAuth" : [ ]
        } ],
        "summary" : "Login locked status of all users",
        "tags" : [ "LoginLockedStatus" ]
      }
    },
    "/loginLockedStatus/users/{id}" : {
      "put" : {
        "description" : "Set login locked status of a user to unlocked\n",
        "operationId" : "updateLoginLockedStatus",
        "parameters" : [ {
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "description" : "ID of user",
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/LoginLockedStatus"
              }
            }
          },
          "description" : "login locked status",
          "required" : false
        },
        "responses" : {
          "204" : {
            "description" : "Set login locked status to unlock successfully."
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            },
            "description" : "The request is incomplete or malformed"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            },
            "description" : "Not authorized to access this resource"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            },
            "description" : "Access forbidden for this resource"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            },
            "description" : "The resource was not found"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            },
            "description" : "Something unexpected happened on the server"
          }
        },
        "security" : [ {
          "BearerAuth" : [ ]
        } ],
        "summary" : "Unlock login",
        "tags" : [ "LoginLockedStatus" ]
      }
    },
    "/remote-auth/config" : {
      "get" : {
        "description" : "Get configuration of remote authentication",
        "operationId" : "GetConfigOfRemoteAuth",
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RemoteAuthConfig"
                }
              }
            },
            "description" : "Operation successful"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            },
            "description" : "The request is incomplete or malformed"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            },
            "description" : "Not authorized to access this resource"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            },
            "description" : "Access forbidden for this resource"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            },
            "description" : "Something unexpected happened on the server"
          }
        },
        "security" : [ {
          "BearerAuth" : [ ]
        } ],
        "summary" : "Get configuration of remote authentication",
        "tags" : [ "Remote Auth Management" ]
      },
      "put" : {
        "description" : "Update configuration of remote authentication",
        "operationId" : "UpdateConfigOfRemoteAuth",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/RemoteAuthConfig"
              }
            }
          },
          "description" : "Configurations of remote authentication",
          "required" : true
        },
        "responses" : {
          "204" : {
            "description" : "Operation successful"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            },
            "description" : "The request is incomplete or malformed"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            },
            "description" : "Not authorized to access this resource"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            },
            "description" : "Access forbidden for this resource"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            },
            "description" : "Something unexpected happened on the server"
          }
        },
        "security" : [ {
          "BearerAuth" : [ ]
        } ],
        "summary" : "Update configuration of remote authentication",
        "tags" : [ "Remote Auth Management" ]
      }
    },
    "/remote-auth/services" : {
      "get" : {
        "description" : "Get supported remote authentication services",
        "operationId" : "GetRemoteAuthServices",
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RemoteAuthServices"
                }
              }
            },
            "description" : "Operation successful"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            },
            "description" : "The request is incomplete or malformed"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            },
            "description" : "Not authorized to access this resource"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            },
            "description" : "Access forbidden for this resource"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            },
            "description" : "Something unexpected happened on the server"
          }
        },
        "security" : [ {
          "BearerAuth" : [ ]
        } ],
        "summary" : "Get supported remote authentication services",
        "tags" : [ "Remote Auth Management" ]
      }
    },
    "/remote-auth/services/radius/config" : {
      "get" : {
        "description" : "Get configuration of radius server",
        "operationId" : "GetRadiusConfig",
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RadiusConfig"
                }
              }
            },
            "description" : "Operation successful"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            },
            "description" : "The request is incomplete or malformed"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            },
            "description" : "Not authorized to access this resource"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            },
            "description" : "Access forbidden for this resource"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            },
            "description" : "Something unexpected happened on the server"
          }
        },
        "security" : [ {
          "BearerAuth" : [ ]
        } ],
        "summary" : "Get configuration of radius server",
        "tags" : [ "Remote Auth Management" ]
      },
      "put" : {
        "description" : "Update configuration of radius server",
        "operationId" : "UpdateRadiusConfig",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/RadiusConfig"
              }
            }
          },
          "description" : "Configurations of radius server",
          "required" : true
        },
        "responses" : {
          "204" : {
            "description" : "Operation successful"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            },
            "description" : "The request is incomplete or malformed"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            },
            "description" : "Not authorized to access this resource"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            },
            "description" : "Access forbidden for this resource"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            },
            "description" : "Something unexpected happened on the server"
          }
        },
        "security" : [ {
          "BearerAuth" : [ ]
        } ],
        "summary" : "Update configuration of radius server",
        "tags" : [ "Remote Auth Management" ]
      }
    },
    "/remote-auth/services/radius/auth-protocols" : {
      "get" : {
        "description" : "Get supported authentication protocols of radius server",
        "operationId" : "GetRadiusAuthProtocols",
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "items" : {
                    "type" : "string"
                  },
                  "type" : "array"
                }
              }
            },
            "description" : "Operation successful"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            },
            "description" : "The request is incomplete or malformed"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            },
            "description" : "Not authorized to access this resource"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            },
            "description" : "Access forbidden for this resource"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            },
            "description" : "Something unexpected happened on the server"
          }
        },
        "security" : [ {
          "BearerAuth" : [ ]
        } ],
        "summary" : "Get supported authentication protocols of radius server",
        "tags" : [ "Remote Auth Management" ]
      }
    },
    "/remote-auth/services/ldap/config" : {
      "get" : {
        "description" : "Get configuration of ldap server",
        "operationId" : "GetLDAPConfig",
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LDAPConfig"
                }
              }
            },
            "description" : "Operation successful"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            },
            "description" : "The request is incomplete or malformed"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            },
            "description" : "Not authorized to access this resource"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            },
            "description" : "Access forbidden for this resource"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            },
            "description" : "Something unexpected happened on the server"
          }
        },
        "security" : [ {
          "BearerAuth" : [ ]
        } ],
        "summary" : "Get configuration of ldap server",
        "tags" : [ "Remote Auth Management" ]
      },
      "put" : {
        "description" : "Update configuration of ldap server",
        "operationId" : "UpdateLDAPConfig",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/LDAPConfig"
              }
            }
          },
          "description" : "Configurations of ldap server",
          "required" : true
        },
        "responses" : {
          "204" : {
            "description" : "Operation successful"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            },
            "description" : "The request is incomplete or malformed"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            },
            "description" : "Not authorized to access this resource"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            },
            "description" : "Access forbidden for this resource"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Error"
                }
              }
            },
            "description" : "Something unexpected happened on the server"
          }
        },
        "security" : [ {
          "BearerAuth" : [ ]
        } ],
        "summary" : "Update configuration of ldap server",
        "tags" : [ "Remote Auth Management" ]
      }
    }
  },
  "components" : {
    "responses" : {
      "BadRequest" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/Error"
            }
          }
        },
        "description" : "The request is incomplete or malformed"
      },
      "Unauthorized" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/Error"
            }
          }
        },
        "description" : "Not authorized to access this resource"
      },
      "Forbidden" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/Error"
            }
          }
        },
        "description" : "Access forbidden for this resource"
      },
      "NotFound" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/Error"
            }
          }
        },
        "description" : "The resource was not found"
      },
      "InternalServerError" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/Error"
            }
          }
        },
        "description" : "Something unexpected happened on the server"
      },
      "MovedTemporary" : {
        "description" : "The resource moved temporarily to a new location",
        "headers" : {
          "Location" : {
            "explode" : false,
            "schema" : {
              "type" : "string"
            },
            "style" : "simple"
          }
        }
      },
      "SeeOther" : {
        "description" : "See at other location.",
        "headers" : {
          "Location" : {
            "explode" : false,
            "schema" : {
              "type" : "string"
            },
            "style" : "simple"
          }
        }
      }
    },
    "schemas" : {
      "EasyServiceAccessSettings" : {
        "description" : "Easy service access settings",
        "example" : {
          "enabled" : false
        },
        "properties" : {
          "enabled" : {
            "example" : false,
            "type" : "boolean"
          }
        },
        "required" : [ "enabled" ],
        "type" : "object"
      },
      "SessionSettings" : {
        "description" : "Restrict settings of session.",
        "example" : {
          "maxSessionsPerUser" : 1,
          "maxTicketsPerUser" : 6,
          "ticketValidity" : 5,
          "sessionTimeout" : 0,
          "tokenValidity" : 5
        },
        "properties" : {
          "sessionTimeout" : {
            "description" : "duration a session can stay inactive in seconds",
            "format" : "int64",
            "type" : "integer"
          },
          "maxTicketsPerUser" : {
            "description" : "max amount of tickets a user can have open for authentication",
            "format" : "int32",
            "type" : "integer"
          },
          "maxSessionsPerUser" : {
            "description" : "max amount of sessions per user",
            "format" : "int32",
            "type" : "integer"
          },
          "ticketValidity" : {
            "description" : "time a ticket stays open in seconds",
            "format" : "int64",
            "type" : "integer"
          },
          "tokenValidity" : {
            "description" : "time a session stays open in seconds",
            "format" : "int64",
            "type" : "integer"
          }
        },
        "required" : [ "maxSessionsPerUser", "maxTicketsPerUser", "sessionTimeout", "ticketValidity", "tokenValidity" ],
        "type" : "object"
      },
      "Session" : {
        "description" : "Properties of a session.",
        "example" : {
          "lastAccessDate" : 0,
          "clientIP" : "clientIP",
          "name" : "name",
          "systemUser" : true,
          "timeoutDuration" : 6,
          "id" : "id",
          "scopes" : [ "scopes", "scopes" ],
          "type" : "type",
          "creationDate" : 5,
          "typeDetail" : "typeDetail",
          "expirationDate" : 1
        },
        "properties" : {
          "type" : {
            "type" : "string"
          },
          "id" : {
            "type" : "string"
          },
          "lastAccessDate" : {
            "format" : "int64",
            "type" : "integer"
          },
          "timeoutDuration" : {
            "format" : "int64",
            "type" : "integer"
          },
          "expirationDate" : {
            "format" : "int64",
            "type" : "integer"
          },
          "creationDate" : {
            "format" : "int64",
            "type" : "integer"
          },
          "typeDetail" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "clientIP" : {
            "type" : "string"
          },
          "scopes" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "systemUser" : {
            "type" : "boolean"
          }
        },
        "required" : [ "clientIP", "creationDate", "expirationDate", "id", "lastAccessDate", "name", "scopes", "systemUser", "timeoutDuration", "typeDetail" ],
        "type" : "object"
      },
      "Credentials" : {
        "description" : "Credentials of a user. Include username and password.",
        "example" : {
          "password" : "41>a72&$b",
          "name" : "user.name"
        },
        "properties" : {
          "name" : {
            "example" : "user.name",
            "type" : "string"
          },
          "password" : {
            "example" : "41>a72&$b",
            "type" : "string"
          }
        },
        "required" : [ "name", "password" ],
        "type" : "object"
      },
      "User" : {
        "description" : "Properties of a user.",
        "example" : {
          "deleteat" : 1610612736,
          "useGlobalSessionSettings" : false,
          "name" : "mustermann",
          "deletable" : true,
          "systemuser" : false,
          "id" : "1000",
          "locked" : true,
          "remote" : false,
          "sessionSettings" : {
            "maxSessionsPerUser" : 1,
            "maxTicketsPerUser" : 6,
            "ticketValidity" : 5,
            "sessionTimeout" : 0,
            "tokenValidity" : 5
          }
        },
        "properties" : {
          "name" : {
            "example" : "mustermann",
            "type" : "string"
          },
          "id" : {
            "example" : "1000",
            "type" : "string"
          },
          "locked" : {
            "default" : false,
            "example" : true,
            "type" : "boolean"
          },
          "deletable" : {
            "example" : true,
            "type" : "boolean"
          },
          "systemuser" : {
            "example" : false,
            "type" : "boolean"
          },
          "deleteat" : {
            "description" : "The time at which the system user will be deleted.",
            "example" : 1610612736,
            "format" : "int64",
            "type" : "integer"
          },
          "sessionSettings" : {
            "$ref" : "#/components/schemas/SessionSettings"
          },
          "useGlobalSessionSettings" : {
            "description" : "If true, apply global session settings at next login. Otherwise use individual sessions settings.",
            "example" : false,
            "type" : "boolean"
          },
          "remote" : {
            "description" : "Shows if the user is a remote user. Remote user are managed remotly.",
            "example" : false,
            "type" : "boolean"
          }
        },
        "required" : [ "deletable", "deleteat", "id", "locked", "name", "remote", "sessionSettings", "systemuser", "useGlobalSessionSettings" ],
        "type" : "object"
      },
      "Users" : {
        "description" : "Array of users.",
        "items" : {
          "$ref" : "#/components/schemas/User"
        },
        "type" : "array"
      },
      "Reservednames" : {
        "description" : "Reserved usernames.",
        "items" : {
          "example" : "root",
          "type" : "string"
        },
        "type" : "array"
      },
      "Password" : {
        "description" : "Password.",
        "example" : "dF$acsXsh",
        "type" : "string",
        "writeOnly" : true
      },
      "Passwords" : {
        "description" : "For changing password, user should provid old and new passwords.",
        "example" : {
          "newPassword" : "dF$acsXsh",
          "currentPassword" : "dF$acsXsh"
        },
        "properties" : {
          "newPassword" : {
            "description" : "Password.",
            "example" : "dF$acsXsh",
            "type" : "string",
            "writeOnly" : true
          },
          "currentPassword" : {
            "description" : "Password.",
            "example" : "dF$acsXsh",
            "type" : "string",
            "writeOnly" : true
          }
        },
        "required" : [ "currentPassword", "newPassword" ],
        "type" : "object"
      },
      "Group" : {
        "description" : "Properties of a group.",
        "example" : {
          "name" : "sample.group",
          "deletable" : true,
          "id" : "1234",
          "remote" : false
        },
        "properties" : {
          "name" : {
            "example" : "sample.group",
            "type" : "string"
          },
          "id" : {
            "example" : "1234",
            "type" : "string"
          },
          "deletable" : {
            "example" : true,
            "type" : "boolean"
          },
          "remote" : {
            "description" : "Shows if the group is a remote group. Remote group are managed remotly.",
            "example" : false,
            "type" : "boolean"
          }
        },
        "required" : [ "deletable", "id", "name", "remote" ],
        "type" : "object"
      },
      "Groups" : {
        "description" : "Array of groups.",
        "items" : {
          "$ref" : "#/components/schemas/Group"
        },
        "type" : "array"
      },
      "Token" : {
        "description" : "Token (required for authentication / authorization)",
        "example" : {
          "access_token" : "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.xxx.xxx",
          "token_type" : "Bearer"
        },
        "properties" : {
          "access_token" : {
            "description" : "Base64 encoded JSON Web Token (JWT). See RFC 7519 for details.",
            "example" : "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.xxx.xxx",
            "type" : "string"
          },
          "token_type" : {
            "description" : "Type of the token (usually Bearer)",
            "example" : "Bearer",
            "type" : "string"
          }
        },
        "required" : [ "access_token", "token_type" ],
        "type" : "object"
      },
      "Scope" : {
        "description" : "Properties of a scope, which is used to limiting an access to resource.",
        "example" : {
          "identifier" : "myApp.all.rw",
          "name" : "Full Permissions",
          "description" : "Full permissions of My App"
        },
        "properties" : {
          "identifier" : {
            "example" : "myApp.all.rw",
            "type" : "string"
          },
          "name" : {
            "example" : "Full Permissions",
            "type" : "string"
          },
          "description" : {
            "example" : "Full permissions of My App",
            "type" : "string"
          }
        },
        "required" : [ "description", "identifier", "name" ],
        "type" : "object"
      },
      "Scopes" : {
        "description" : "Array of scopes.",
        "items" : {
          "$ref" : "#/components/schemas/Scope"
        },
        "type" : "array"
      },
      "App" : {
        "description" : "Properties of an application.",
        "example" : {
          "identifier" : "myApp",
          "name" : "My App",
          "description" : "Description of My App",
          "scopes" : [ {
            "identifier" : "myApp.all.rw",
            "name" : "Full Permissions",
            "description" : "Full permissions of My App"
          }, {
            "identifier" : "myApp.all.rw",
            "name" : "Full Permissions",
            "description" : "Full permissions of My App"
          } ]
        },
        "properties" : {
          "identifier" : {
            "example" : "myApp",
            "type" : "string"
          },
          "name" : {
            "example" : "My App",
            "type" : "string"
          },
          "description" : {
            "example" : "Description of My App",
            "type" : "string"
          },
          "scopes" : {
            "items" : {
              "$ref" : "#/components/schemas/Scope"
            },
            "type" : "array"
          }
        },
        "required" : [ "description", "identifier", "name", "scopes" ],
        "type" : "object"
      },
      "Apps" : {
        "description" : "Array of applications.",
        "example" : {
          "apps" : [ {
            "identifier" : "myApp",
            "name" : "My App",
            "description" : "Description of My App",
            "scopes" : [ {
              "identifier" : "myApp.all.rw",
              "name" : "Full Permissions",
              "description" : "Full permissions of My App"
            }, {
              "identifier" : "myApp.all.rw",
              "name" : "Full Permissions",
              "description" : "Full permissions of My App"
            } ]
          }, {
            "identifier" : "myApp",
            "name" : "My App",
            "description" : "Description of My App",
            "scopes" : [ {
              "identifier" : "myApp.all.rw",
              "name" : "Full Permissions",
              "description" : "Full permissions of My App"
            }, {
              "identifier" : "myApp.all.rw",
              "name" : "Full Permissions",
              "description" : "Full permissions of My App"
            } ]
          } ]
        },
        "properties" : {
          "apps" : {
            "items" : {
              "$ref" : "#/components/schemas/App"
            },
            "type" : "array"
          }
        },
        "required" : [ "apps" ],
        "type" : "object"
      },
      "PasswordPolicies" : {
        "description" : "Restrict policies of password.",
        "example" : {
          "remember" : 0,
          "minUppercase" : 1,
          "expiresAfterDays" : 1,
          "minLen" : 1,
          "minDigit" : 1,
          "minLowercase" : 1,
          "minSpecial" : 1,
          "rejectUsername" : true
        },
        "properties" : {
          "remember" : {
            "description" : "number of old password in password history.",
            "example" : 0,
            "type" : "integer"
          },
          "minLen" : {
            "description" : "Minimum password length.",
            "example" : 1,
            "type" : "integer"
          },
          "minDigit" : {
            "description" : "Minimum numeric characters.",
            "example" : 1,
            "type" : "integer"
          },
          "minUppercase" : {
            "description" : "Minimum uppercase characters.",
            "example" : 1,
            "type" : "integer"
          },
          "minLowercase" : {
            "description" : "Minimum lowercase characters.",
            "example" : 1,
            "type" : "integer"
          },
          "minSpecial" : {
            "description" : "Minimum special characters.",
            "example" : 1,
            "type" : "integer"
          },
          "rejectUsername" : {
            "description" : "If true, password is not allowed to contain username.",
            "example" : true,
            "type" : "boolean"
          },
          "expiresAfterDays" : {
            "description" : "Password expires after days.",
            "example" : 1,
            "type" : "integer"
          }
        },
        "required" : [ "expiresAfterDays", "minDigit", "minLen", "minLowercase", "minSpecial", "minUppercase", "rejectUsername", "remember" ],
        "type" : "object"
      },
      "Validity" : {
        "description" : "Validity of a token.",
        "example" : {
          "valid" : true
        },
        "properties" : {
          "valid" : {
            "example" : true,
            "type" : "boolean"
          }
        },
        "required" : [ "valid" ],
        "type" : "object"
      },
      "ForceChpasswd" : {
        "description" : "Status, if the password should be changed at next login.",
        "example" : {
          "forced" : true
        },
        "properties" : {
          "forced" : {
            "example" : true,
            "type" : "boolean"
          }
        },
        "required" : [ "forced" ],
        "type" : "object"
      },
      "LoginLockedStatus" : {
        "description" : "Login locked status of a user.",
        "example" : {
          "lockedUntil" : 0,
          "id" : "1000",
          "locked" : false
        },
        "properties" : {
          "id" : {
            "example" : "1000",
            "type" : "string"
          },
          "locked" : {
            "example" : false,
            "type" : "boolean"
          },
          "lockedUntil" : {
            "example" : 0,
            "format" : "int64",
            "type" : "integer"
          }
        },
        "required" : [ "id", "locked", "lockedUntil" ],
        "type" : "object"
      },
      "LoginLockedStatusOfAllUsers" : {
        "items" : {
          "$ref" : "#/components/schemas/LoginLockedStatus"
        },
        "type" : "array"
      },
      "LoginBanner" : {
        "description" : "Content of login banner.",
        "example" : {
          "text" : "Hello world"
        },
        "properties" : {
          "text" : {
            "example" : "Hello world",
            "type" : "string"
          }
        },
        "required" : [ "text" ],
        "type" : "object"
      },
      "RadiusConfig" : {
        "description" : "Configurations of radius.",
        "example" : {
          "protocol" : "tcp",
          "port" : "1812",
          "ip" : "192.168.2.2",
          "vendorId" : 9,
          "groupsVSA" : 1,
          "secret" : "testing123",
          "authProtocol" : "ms-chapv2"
        },
        "properties" : {
          "ip" : {
            "example" : "192.168.2.2",
            "type" : "string"
          },
          "port" : {
            "example" : "1812",
            "type" : "string"
          },
          "secret" : {
            "example" : "testing123",
            "type" : "string"
          },
          "protocol" : {
            "example" : "tcp",
            "type" : "string"
          },
          "authProtocol" : {
            "example" : "ms-chapv2",
            "type" : "string"
          },
          "vendorId" : {
            "example" : 9,
            "type" : "integer"
          },
          "groupsVSA" : {
            "example" : 1,
            "type" : "integer"
          }
        },
        "required" : [ "authProtocol", "groupsVSA", "ip", "port", "protocol", "secret", "vendorId" ],
        "type" : "object"
      },
      "LDAPConfig" : {
        "description" : "Configurations of LDAP.",
        "example" : {
          "readOnlyUser" : "readonly",
          "groupFilter" : "(&(cn=DC-AE*)(objectClass=group))",
          "groupMembershipAttribute" : "member",
          "port" : "389",
          "serverType" : "ActiveDirectory",
          "host" : "192.168.1.2",
          "userFilter" : "(&(department=*ESW2)(objectClass=user))",
          "skipServerCertificateVerification" : true,
          "usernameAttribute" : "sAMAccountName",
          "baseDN" : "dc=example,dc=com",
          "readOnlyUserPassword" : "topsecret",
          "useTLS" : true
        },
        "properties" : {
          "host" : {
            "example" : "192.168.1.2",
            "type" : "string"
          },
          "port" : {
            "example" : "389",
            "type" : "string"
          },
          "serverType" : {
            "default" : "ActiveDirectory",
            "enum" : [ "ActiveDirectory", "OpenLDAP" ],
            "type" : "string"
          },
          "baseDN" : {
            "example" : "dc=example,dc=com",
            "type" : "string"
          },
          "readOnlyUser" : {
            "description" : "Leave empty for anonymous mode",
            "example" : "readonly",
            "type" : "string"
          },
          "readOnlyUserPassword" : {
            "example" : "topsecret",
            "type" : "string"
          },
          "userFilter" : {
            "example" : "(&(department=*ESW2)(objectClass=user))",
            "type" : "string"
          },
          "groupFilter" : {
            "example" : "(&(cn=DC-AE*)(objectClass=group))",
            "type" : "string"
          },
          "usernameAttribute" : {
            "example" : "sAMAccountName",
            "type" : "string"
          },
          "groupMembershipAttribute" : {
            "example" : "member",
            "type" : "string"
          },
          "useTLS" : {
            "type" : "boolean"
          },
          "skipServerCertificateVerification" : {
            "type" : "boolean"
          }
        },
        "required" : [ "baseDN", "groupFilter", "groupMembershipAttribute", "host", "port", "readOnlyUser", "readOnlyUserPassword", "serverType", "userFilter", "usernameAttribute" ],
        "type" : "object"
      },
      "RemoteAuthConfig" : {
        "description" : "Configurations of remote authentication.",
        "example" : {
          "service" : "radius",
          "enabled" : true
        },
        "properties" : {
          "enabled" : {
            "type" : "boolean"
          },
          "service" : {
            "example" : "radius",
            "type" : "string"
          }
        },
        "required" : [ "enabled", "service" ],
        "type" : "object"
      },
      "RemoteAuthService" : {
        "description" : "Properties of remote authentication service.",
        "example" : {
          "chgpwd" : false,
          "name" : "radius"
        },
        "properties" : {
          "name" : {
            "description" : "name of remote authentication service.",
            "example" : "radius",
            "type" : "string"
          },
          "chgpwd" : {
            "description" : "if true, change password is possible.",
            "example" : false,
            "type" : "boolean"
          }
        },
        "required" : [ "chgpwd", "name" ],
        "type" : "object"
      },
      "RemoteAuthServices" : {
        "description" : "Supported remote authentication services.",
        "items" : {
          "$ref" : "#/components/schemas/RemoteAuthService"
        },
        "type" : "array"
      },
      "UploadAssertion" : {
        "description" : "To upload system user assertion file.",
        "properties" : {
          "file" : {
            "format" : "binary",
            "type" : "string"
          }
        },
        "required" : [ "file" ],
        "type" : "object"
      },
      "Error" : {
        "description" : "Defines a \"error detail\" as a way  to carry machine-readable details of errors in a  HTTP response to avoid the need to define new error  response formats for HTTP APIs.\n",
        "properties" : {
          "code" : {
            "description" : "Internal error code of the application or system",
            "example" : 400,
            "format" : "int32",
            "type" : "integer"
          },
          "message" : {
            "description" : "Human-readable text that describes the error message",
            "example" : "User does not exist",
            "type" : "string"
          },
          "moreInfo" : {
            "description" : "(optional) Link to error details and troubleshooting",
            "example" : "idm_PasswordReuse",
            "type" : "string"
          },
          "details" : {
            "description" : "(optional) Text with application specific error details for the developer, e.g. stack trace",
            "example" : "Invalid character '#' after top-level value",
            "type" : "string"
          }
        },
        "required" : [ "code", "message" ],
        "type" : "object"
      }
    },
    "securitySchemes" : {
      "BearerAuth" : {
        "scheme" : "bearer",
        "type" : "http"
      },
      "UsernamePassword" : {
        "description" : "Enter username and password",
        "flows" : {
          "password" : {
            "scopes" : {
              "dummy" : "Dummy scope (scopes not used)"
            },
            "tokenUrl" : "/identity-manager/api/v1/auth/token"
          }
        },
        "type" : "oauth2"
      }
    }
  }
}