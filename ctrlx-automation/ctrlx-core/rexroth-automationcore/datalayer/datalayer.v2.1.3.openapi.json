{
  "openapi" : "3.0.0",
  "info" : {
    "contact" : {
      "email" : "support@boschrexroth.com",
      "name" : "Bosch Rexroth Support",
      "url" : "https://www.boschrexroth.com"
    },
    "description" : "This is the base API for the ctrlX Data Layer access on ctrlX OS systems <ul> <li>Click 'Authorize' to open the 'Available authorizations' dialog.</li> <li>Enter 'username' and 'password'. The 'Client credentials location' selector together with the 'client_id' and 'client_secret' fields as well as the 'Bearer' section can be ignored.</li> <li>Click 'Authorize' and then 'Close' to close the 'Available authorizations' dialog.</li> <li>Try out those GET, PUT, ... operations you're interested in.</li> </ul>",
    "license" : {
      "name" : "MIT"
    },
    "title" : "ctrlX OS - Data Layer API",
    "version" : "2.1.3"
  },
  "servers" : [ {
    "url" : "/automation/api/v2"
  }, {
    "url" : "https://[fe80::dcad:beff:fe00:1]/automation/api/v2"
  }, {
    "url" : "https://{host}/automation/api/v2",
    "variables" : {
      "host" : {
        "default" : "192.168.1.1",
        "description" : "Hostname or ip address of the ctrlX OS system"
      }
    }
  } ],
  "security" : [ {
    "UsernamePassword" : [ ]
  }, {
    "Bearer" : [ ]
  } ],
  "tags" : [ {
    "description" : "Generic access to all Data Layer nodes",
    "name" : "Nodes"
  }, {
    "description" : "Setup a subscription and start server send events (SSE)",
    "name" : "Subscriptions"
  }, {
    "description" : "Access to informations about running subscriptions and global subscription settings",
    "name" : "Subscription information and settings"
  }, {
    "description" : "Access to multiple Data Layer nodes",
    "name" : "Bulk Access"
  }, {
    "description" : "Typed access to Data Layer child nodes",
    "name" : "Data Layer information and settings"
  }, {
    "description" : "Data Layer type definitions",
    "name" : "Types"
  }, {
    "description" : "Retain memory handling",
    "name" : "Retain Memory"
  }, {
    "description" : "Mapping the Data Layer of another device to the address space of this device",
    "name" : "Remotes"
  } ],
  "paths" : {
    "/nodes/{Path}" : {
      "delete" : {
        "description" : "Execute a delete operation on a node. Not every node is deletable.",
        "operationId" : "DeleteNode",
        "parameters" : [ {
          "description" : "The path is a string which contains the full access path in the data layer tree. The sub elements in the path are separated by '/'. To query the root node use '/' as path.",
          "example" : "datalayer/nodes",
          "explode" : false,
          "in" : "path",
          "name" : "Path",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "200" : {
            "description" : "Node deleted successfully"
          },
          "202" : {
            "description" : "Node is marked for deletion"
          },
          "204" : {
            "description" : "Node deleted successfully"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Not authorized to access this resource"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Access forbidden for this resource"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "The resource was not found"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Something unexpected happened on the server"
          }
        },
        "summary" : "Execute a delete operation on a node",
        "tags" : [ "Nodes" ]
      },
      "get" : {
        "description" : "Returns the data, browse-information or metadata of a requested node. Depends on the query parameter.",
        "operationId" : "ReadNode",
        "parameters" : [ {
          "description" : "The path is a string which contains the full access path in the data layer tree. The sub elements in the path are separated by '/'. To query the root node use '/' as path.",
          "example" : "datalayer/nodes",
          "explode" : false,
          "in" : "path",
          "name" : "Path",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "explode" : true,
          "in" : "query",
          "name" : "type",
          "required" : false,
          "schema" : {
            "default" : "null",
            "enum" : [ "metadata", "browse" ],
            "type" : "string"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "oneOf" : [ {
                    "$ref" : "#/components/schemas/Data"
                  }, {
                    "$ref" : "#/components/schemas/MetaData"
                  }, {
                    "$ref" : "#/components/schemas/BrowseData"
                  } ]
                }
              },
              "application/octet-stream" : {
                "schema" : {
                  "format" : "binary",
                  "type" : "string"
                }
              },
              "plain/text" : {
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "description" : "A JSON object or binary string containing the data, browseinfo or metadata of a requested node, depends on the query parameter."
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "The request is incomplete or malformed"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Not authorized to access this resource"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Access forbidden for this resource"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "The resource was not found"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Something unexpected happened on the server"
          }
        },
        "summary" : "Execute a read operation on a node to get data",
        "tags" : [ "Nodes" ]
      },
      "post" : {
        "description" : "Execute a create operation on a path. The values for the new node are posted as payload.",
        "operationId" : "CreateNode",
        "parameters" : [ {
          "description" : "The path is a string which contains the full access path in the data layer tree. The sub elements in the path are separated by '/'. To query the root node use '/' as path.",
          "example" : "datalayer/nodes",
          "explode" : false,
          "in" : "path",
          "name" : "Path",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Data"
              }
            },
            "application/octet-stream" : {
              "schema" : {
                "format" : "binary",
                "type" : "string"
              }
            },
            "plain/text" : {
              "schema" : {
                "type" : "string"
              }
            }
          },
          "description" : "The data for the create operation"
        },
        "responses" : {
          "200" : {
            "description" : "Node successfully created"
          },
          "201" : {
            "description" : "Node successfully created"
          },
          "202" : {
            "description" : "Node will be created"
          },
          "204" : {
            "description" : "Node successfully created"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "The request is incomplete or malformed"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Not authorized to access this resource"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Access forbidden for this resource"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "The resource was not found"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Something unexpected happened on the server"
          }
        },
        "summary" : "Execute a create operation on a node",
        "tags" : [ "Nodes" ]
      },
      "put" : {
        "description" : "Execute a write operation. The written values are posted as payload.",
        "operationId" : "WriteNode",
        "parameters" : [ {
          "description" : "The path is a string which contains the full access path in the data layer tree. The sub elements in the path are separated by '/'. To query the root node use '/' as path.",
          "example" : "datalayer/nodes",
          "explode" : false,
          "in" : "path",
          "name" : "Path",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Data"
              }
            },
            "application/octet-stream" : {
              "schema" : {
                "format" : "binary",
                "type" : "string"
              }
            },
            "plain/text" : {
              "schema" : {
                "type" : "string"
              }
            }
          },
          "description" : "The data of the node to be updated or the data of the command to be executed."
        },
        "responses" : {
          "200" : {
            "description" : "Node updated successfully"
          },
          "202" : {
            "description" : "Node is marked for update"
          },
          "204" : {
            "description" : "Node updated successfully"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "The request is incomplete or malformed"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Not authorized to access this resource"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Access forbidden for this resource"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "The resource was not found"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Something unexpected happened on the server"
          }
        },
        "summary" : "Execute a write operation on a node to change data",
        "tags" : [ "Nodes" ]
      }
    },
    "/nodes/datalayer/curvemq/publickey" : {
      "get" : {
        "description" : "The public key used for secure Data Layer communication.",
        "operationId" : "GetPublicKey",
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DLString"
                }
              }
            },
            "description" : "A JSON object containing the public key for Data Layer communication."
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Not authorized to access this resource"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Access forbidden for this resource"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Something unexpected happened on the server"
          }
        },
        "summary" : "Public key for Data Layer communication",
        "tags" : [ "Data Layer information and settings" ]
      }
    },
    "/nodes/datalayer/nodes" : {
      "get" : {
        "description" : "List of registered non-realtime data (Data Layer NRT) node names.",
        "operationId" : "GetNodeNames",
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BrowseData"
                }
              }
            },
            "description" : "A JSON object containing the list of non realtime node names."
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Not authorized to access this resource"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Access forbidden for this resource"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Something unexpected happened on the server"
          }
        },
        "summary" : "List of registered non-realtime data (Data Layer NRT) node names",
        "tags" : [ "Data Layer information and settings" ]
      }
    },
    "/nodes/datalayer/nodesrt" : {
      "get" : {
        "description" : "List of registered realtime data (Data Layer RT) node names.",
        "operationId" : "GetRealtimeNodeNames",
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BrowseData"
                }
              }
            },
            "description" : "A JSON object containing the list of realtime node names."
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Not authorized to access this resource"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Access forbidden for this resource"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Something unexpected happened on the server"
          }
        },
        "summary" : "List of registered realtime data (Data Layer RT) node names",
        "tags" : [ "Data Layer information and settings" ]
      }
    },
    "/nodes/datalayer/server/settings" : {
      "get" : {
        "operationId" : "getDatalayerServerSettings",
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServerSettings"
                }
              }
            },
            "description" : "A JSON object containing the list of realtime node names."
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Not authorized to access this resource"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Access forbidden for this resource"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Something unexpected happened on the server"
          }
        },
        "summary" : "Data Layer Server Settings",
        "tags" : [ "Data Layer information and settings" ]
      },
      "put" : {
        "description" : "Change Data Layer Server Settings. For debug purposes of provider it's necessary to increase timeout values to prevent a provider to be disconnected from broker.",
        "operationId" : "putDatalayerServerSettings",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ServerSettings"
              }
            }
          },
          "description" : "The data of the new node"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServerSettings"
                }
              }
            },
            "description" : "A JSON object containing the list of realtime node names."
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Not authorized to access this resource"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Access forbidden for this resource"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Something unexpected happened on the server"
          }
        },
        "summary" : "Change Data Layer Server Settings",
        "tags" : [ "Data Layer information and settings" ]
      }
    },
    "/nodes/datalayer/retain/chunks" : {
      "post" : {
        "description" : "Create a new retain memory chunk. The values for the new chunk are posted as payload. Chunk will survive reboot.",
        "operationId" : "CreateRetainChunk",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "example" : {
                "type" : "object",
                "value" : {
                  "type" : "SharedRetain",
                  "id" : "mychunk",
                  "sizeBytes" : 100
                }
              },
              "schema" : {
                "$ref" : "#/components/schemas/Memory"
              }
            }
          },
          "description" : "Desciption of new chunk"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Memory"
                }
              }
            },
            "description" : "A JSON object containing the created chunk."
          },
          "201" : {
            "description" : "Node successfully created"
          },
          "202" : {
            "description" : "Node will be created"
          },
          "204" : {
            "description" : "Node successfully created"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "The request is incomplete or malformed"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Not authorized to access this resource"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Access forbidden for this resource"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "The resource was not found"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Something unexpected happened on the server"
          }
        },
        "summary" : "Create a new retain memory chunk",
        "tags" : [ "Retain Memory" ]
      }
    },
    "/nodes/datalayer/retain/chunks/{ChunkName}" : {
      "delete" : {
        "description" : "Delete a retain memory chunk. Memory is not available after reboot anymore.",
        "operationId" : "DeleteRetainChunk",
        "parameters" : [ {
          "description" : "The ChunkName is a string which contains the name of the chunk.",
          "example" : "mychunk",
          "explode" : false,
          "in" : "path",
          "name" : "ChunkName",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "200" : {
            "description" : "Node deleted successfully"
          },
          "202" : {
            "description" : "Node is marked for deletion"
          },
          "204" : {
            "description" : "Node deleted successfully"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Not authorized to access this resource"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Access forbidden for this resource"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "The resource was not found"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Something unexpected happened on the server"
          }
        },
        "summary" : "Delete a retain memory chunk",
        "tags" : [ "Retain Memory" ]
      },
      "get" : {
        "description" : "Get information about a retain memory chunk.",
        "operationId" : "GetRetainChunk",
        "parameters" : [ {
          "description" : "The ChunkName is a string which contains the name of the chunk.",
          "example" : "mychunk",
          "explode" : false,
          "in" : "path",
          "name" : "ChunkName",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "example" : {
                  "type" : "object",
                  "value" : {
                    "type" : "SharedRetain",
                    "id" : "mychunk",
                    "sizeBytes" : 100
                  }
                },
                "schema" : {
                  "$ref" : "#/components/schemas/Memory"
                }
              }
            },
            "description" : "Information about a retain memory chunk."
          },
          "202" : {
            "description" : "Node is marked for deletion"
          },
          "204" : {
            "description" : "Node deleted successfully"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Not authorized to access this resource"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Access forbidden for this resource"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "The resource was not found"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Something unexpected happened on the server"
          }
        },
        "summary" : "Get information about a retain memory chunk",
        "tags" : [ "Retain Memory" ]
      }
    },
    "/nodes/datalayer/retain/stats" : {
      "get" : {
        "description" : "Biggest Free, Free, Used, and Total (Unit Byte).",
        "operationId" : "GetRetainStats",
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RetainStats"
                }
              }
            },
            "description" : "A JSON object containing the statistics data."
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Not authorized to access this resource"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Access forbidden for this resource"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Something unexpected happened on the server"
          }
        },
        "summary" : "Retain Data Statitics",
        "tags" : [ "Retain Memory" ]
      }
    },
    "/nodes/datalayer/retain/stats/total" : {
      "get" : {
        "description" : "Total size of memory in bytes",
        "operationId" : "GetRetainStatsTotal",
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DLUInt32"
                }
              }
            },
            "description" : "A JSON object containing the statistics data."
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Not authorized to access this resource"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Access forbidden for this resource"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Something unexpected happened on the server"
          }
        },
        "summary" : "Retain Data Statitics - total",
        "tags" : [ "Retain Memory" ]
      }
    },
    "/nodes/datalayer/retain/stats/free" : {
      "get" : {
        "description" : "Total size of free memory in bytes.",
        "operationId" : "GetRetainStatsFree",
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DLUInt32"
                }
              }
            },
            "description" : "A JSON object containing the statistics data."
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Not authorized to access this resource"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Access forbidden for this resource"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Something unexpected happened on the server"
          }
        },
        "summary" : "Retain Data Statitics - free",
        "tags" : [ "Retain Memory" ]
      }
    },
    "/nodes/datalayer/retain/stats/used" : {
      "get" : {
        "description" : "Used memory in bytes.",
        "operationId" : "GetRetainStatsUsed",
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DLUInt32"
                }
              }
            },
            "description" : "A JSON object containing the statistics data."
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Not authorized to access this resource"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Access forbidden for this resource"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Something unexpected happened on the server"
          }
        },
        "summary" : "Retain Data Statitics - used",
        "tags" : [ "Retain Memory" ]
      }
    },
    "/nodes/datalayer/retain/stats/biggest-free" : {
      "get" : {
        "description" : "Biggest free chunk of memory in bytes.",
        "operationId" : "GetRetainStatsBiggestFree",
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DLUInt32"
                }
              }
            },
            "description" : "A JSON object containing the statistics data."
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Not authorized to access this resource"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Access forbidden for this resource"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Something unexpected happened on the server"
          }
        },
        "summary" : "Retain Data Statitics - biggest free",
        "tags" : [ "Retain Memory" ]
      }
    },
    "/nodes/datalayer/retain/stats/sync-counter" : {
      "get" : {
        "description" : "Count of synchronization to hardware NvRam.",
        "operationId" : "GetRetainStatsSyncCounter",
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DLUInt32"
                }
              }
            },
            "description" : "A JSON object containing the statistics data."
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Not authorized to access this resource"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Access forbidden for this resource"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Something unexpected happened on the server"
          }
        },
        "summary" : "Retain Data Statistics - sync counter",
        "tags" : [ "Retain Memory" ]
      }
    },
    "/nodes/datalayer/retain/stats/last-used" : {
      "get" : {
        "description" : "Last used byte offset of nvram memory.",
        "operationId" : "GetRetainStatsLastUsed",
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DLUInt32"
                }
              }
            },
            "description" : "A JSON object containing the statistics data."
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Not authorized to access this resource"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Access forbidden for this resource"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Something unexpected happened on the server"
          }
        },
        "summary" : "Retain Data Statistics - last used",
        "tags" : [ "Retain Memory" ]
      }
    },
    "/nodes/datalayer/retain/stats/info" : {
      "get" : {
        "description" : "Detailed information about the NvRam.",
        "operationId" : "GetRetainStatsInfo",
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DLString"
                }
              }
            },
            "description" : "A JSON object containing the statistics data."
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Not authorized to access this resource"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Access forbidden for this resource"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Something unexpected happened on the server"
          }
        },
        "summary" : "Retain Data Statistics - info",
        "tags" : [ "Retain Memory" ]
      }
    },
    "/events" : {
      "get" : {
        "description" : "Create a new subscription and starts server send event (SSE) stream. You can specify a bunch of paths to be observed for changes. <br> <br> Unfortunately, SSE is not compatible to OpenAPI specs and can therefore not be properly specified within this API description. An SSE event contains three parts separated by linebreaks: event, id and data. Different events are separated by empty lines. The event field can be one of these types: keepalive, update, browse, metadata, error. The data field is populated with the JSON object defined below. <br> <br> At startup you will get initial events for each node. Afterwards you will only get events if the value of the node changes.",
        "parameters" : [ {
          "description" : "Comma sepearted list of nodes",
          "example" : "datalayer/retain/stats/sync-counter,datalayer/retain/stats/free",
          "explode" : true,
          "in" : "query",
          "name" : "nodes",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Publish interval for notifications. Internal poll interval.",
          "explode" : true,
          "in" : "query",
          "name" : "publishIntervalMs",
          "required" : false,
          "schema" : {
            "default" : 1000,
            "type" : "integer"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "text/event-stream" : {
                "example" : "event: update \nid: 1 \ndata: {\"node\":\"datalayer/retain/chunks/mychunk\",\"timestamp\":132778212343571969,\"schema\":\"types/datalayer/memory\",\"value\":{\"type\": \"SharedRetain\",\"id\": \"mychunk:32\",\"sizeBytes\": 104}} \n \nevent: update \nid: 2 \ndata: {\"node\":\"datalayer/retain/stats\",\"timestamp\":132778212343584333,\"schema\":\"types/datalayer/retain-stats\",\"type\":\"object\",\"value\":{\"total\": 122880,\"free\": 122712,\"used\": 168,\"biggestFree\": 122712,\"syncCounter\": 184038,\"lastUsed\": 168}}",
                "schema" : {
                  "format" : "event-stream",
                  "items" : {
                    "$ref" : "#/components/schemas/SSE_Event"
                  },
                  "type" : "array"
                }
              }
            },
            "description" : "SSE Event stream"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Not authorized to access this resource"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Access forbidden for this resource"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Something unexpected happened on the server"
          }
        },
        "summary" : "Create a new subscription and starts server send event (SSE) stream.",
        "tags" : [ "Subscriptions" ]
      },
      "post" : {
        "description" : "Create a new subscription. You can later make GET request on this created subscription to start the subscription. If subscription is not used within one minute, subscription will be deleted automatically. You can start a created subscription multiple times. <br><br> To create a subscription in this way allows to setup more complex settings within the subscription (queueing, data change filter, ...).",
        "operationId" : "CreateSubscription",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "allOf" : [ {
                  "properties" : {
                    "properties" : {
                      "$ref" : "#/components/schemas/SubscriptionPropertiesData"
                    },
                    "nodes" : {
                      "description" : "list of nodes to subscribe to",
                      "example" : [ "datalayer/retain/stats/sync-counter" ],
                      "items" : {
                        "type" : "string"
                      },
                      "type" : "array"
                    }
                  },
                  "type" : "object"
                } ],
                "required" : [ "nodes", "properties" ]
              }
            }
          },
          "description" : "The data for the new subscription"
        },
        "responses" : {
          "200" : {
            "description" : "Node successfully created"
          },
          "201" : {
            "description" : "Node successfully created"
          },
          "202" : {
            "description" : "Node will be created"
          },
          "204" : {
            "description" : "Node successfully created"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "The request is incomplete or malformed"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Not authorized to access this resource"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Access forbidden for this resource"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "The resource was not found"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Something unexpected happened on the server"
          }
        },
        "summary" : "Create a new subscription as separate resource",
        "tags" : [ "Subscriptions" ]
      }
    },
    "/events/{SubscriptionName}" : {
      "delete" : {
        "description" : "Deletes an existing subscription. A subscription can only be deleted if there are no open SSE connections for this SubscriptionName.",
        "operationId" : "DeleteSubscription",
        "parameters" : [ {
          "description" : "The SubscriptionName is a string which contains the identification of the subscription.",
          "example" : "subID",
          "explode" : false,
          "in" : "path",
          "name" : "SubscriptionName",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "200" : {
            "description" : "Subscription successfully deleted"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "The request is incomplete or malformed"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Not authorized to access this resource"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Access forbidden for this resource"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "The resource was not found"
          },
          "409" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "The request could not be completed due to a conflict with the current state of the target resource"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Something unexpected happened on the server"
          }
        },
        "summary" : "Deletes an existing subscription resource.",
        "tags" : [ "Subscriptions" ]
      },
      "get" : {
        "description" : "Starts a server send event stream (SSE) for a given subscription. You have to create this subscription before. <br> <br> Unfortunately, SSE is not compatible to OpenAPI specs and can therefore not be properly specified within this API description. An SSE event contains three parts separated by linebreaks: event, id and data. Different events are separated by empty lines. The event field can be one of these types: keepalive, update, browse, metadata, error. The data field is populated with the JSON object defined below. <br> <br> At startup you will get initial events for each node. Afterwards you will only get events if the value of the node changes.",
        "operationId" : "GetCreatedSubscription",
        "parameters" : [ {
          "description" : "The SubscriptionName is a string which contains the identification of the subscription.",
          "example" : "subID",
          "explode" : false,
          "in" : "path",
          "name" : "SubscriptionName",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "text/event-stream" : {
                "example" : "event: update \nid: 1 \ndata: {\"node\":\"datalayer/retain/chunks/mychunk\",\"timestamp\":132778212343571969,\"schema\":\"types/datalayer/memory\",\"value\":{\"type\": \"SharedRetain\",\"id\": \"mychunk:32\",\"sizeBytes\": 104}} \n \nevent: update \nid: 2 \ndata: {\"node\":\"datalayer/retain/stats\",\"timestamp\":132778212343584333,\"schema\":\"types/datalayer/retain-stats\",\"type\":\"object\",\"value\":{\"total\": 122880,\"free\": 122712,\"used\": 168,\"biggestFree\": 122712,\"syncCounter\": 184038,\"lastUsed\": 168}}",
                "schema" : {
                  "format" : "event-stream",
                  "items" : {
                    "$ref" : "#/components/schemas/SSE_Event"
                  },
                  "type" : "array"
                }
              }
            },
            "description" : "SSE Event stream"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Not authorized to access this resource"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Access forbidden for this resource"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Something unexpected happened on the server"
          }
        },
        "summary" : "Starts a server send event stream (SSE) on a given subscription",
        "tags" : [ "Subscriptions" ]
      },
      "put" : {
        "description" : "Change node list of existing subscription. All opened SSE connections for this subscription are changed.",
        "operationId" : "ChangeSubscription",
        "parameters" : [ {
          "description" : "The SubscriptionName is a string which contains the identification of the subscription.",
          "example" : "subID",
          "explode" : false,
          "in" : "path",
          "name" : "SubscriptionName",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/SubscriptionID"
                }, {
                  "$ref" : "#/components/schemas/SubscriptionNodeList"
                } ]
              }
            }
          },
          "description" : "The data for the new subscription"
        },
        "responses" : {
          "200" : {
            "description" : "Subscription successfully changed"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "The request is incomplete or malformed"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Not authorized to access this resource"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Access forbidden for this resource"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "The resource was not found"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Something unexpected happened on the server"
          }
        },
        "summary" : "Change node list of existing subscription.",
        "tags" : [ "Subscriptions" ]
      }
    },
    "/nodes/datalayer/subscriptions/settings" : {
      "get" : {
        "description" : "Global settings for Data Layer subscriptions.",
        "operationId" : "GetSubscriptionSettings",
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SubscriptionSettings"
                }
              }
            },
            "description" : "A JSON object containing global subscription settings."
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Not authorized to access this resource"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Access forbidden for this resource"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Something unexpected happened on the server"
          }
        },
        "summary" : "Data Layer Subscriptions - Global Settings",
        "tags" : [ "Subscription information and settings" ]
      },
      "put" : {
        "description" : "Sets global settings for Data Layer subscriptions. Global settings change will not affect existing subscriptions.",
        "operationId" : "SetSubscriptionSettings",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "example" : {
                "type" : "object",
                "value" : {
                  "minimumPublishInterval" : 50,
                  "minimumSampleInterval" : 100000,
                  "maximumBufferSize" : 50,
                  "minimumErrorInterval" : 10000
                }
              },
              "schema" : {
                "$ref" : "#/components/schemas/SubscriptionSettings"
              }
            }
          },
          "description" : "New global subscription settings."
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SubscriptionSettings"
                }
              }
            },
            "description" : "A JSON object containing global subscription settings."
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Not authorized to access this resource"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Access forbidden for this resource"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Something unexpected happened on the server"
          }
        },
        "summary" : "Sets Data Layer Subscriptions - Global Settings",
        "tags" : [ "Subscription information and settings" ]
      }
    },
    "/nodes/datalayer/subscriptions/clients/{ClientName}/subscriptions/{SubscriptionName}" : {
      "get" : {
        "description" : "Get all information about a subscription. It contains subscribed nodes and subscription properties.",
        "operationId" : "GetClientSubscription",
        "parameters" : [ {
          "description" : "The ClientName is a string which contains the identification of the client.",
          "example" : "client-00e768a686",
          "explode" : false,
          "in" : "path",
          "name" : "ClientName",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "The SubscriptionName is a string which contains the identification of the subscription.",
          "example" : "subID",
          "explode" : false,
          "in" : "path",
          "name" : "SubscriptionName",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SubscriptionData"
                }
              }
            },
            "description" : "A JSON object containing all information about a subscription. It contains subscribed nodes and subscription properties."
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "The request is incomplete or malformed"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Not authorized to access this resource"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Access forbidden for this resource"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "The resource was not found"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Something unexpected happened on the server"
          }
        },
        "summary" : "Get all information about a subscription",
        "tags" : [ "Subscription information and settings" ]
      }
    },
    "/nodes/datalayer/subscriptions/clients/{ClientName}/subscriptions/{SubscriptionName}/nodes" : {
      "get" : {
        "description" : "Get list of subscribed nodes for this client and subscription.",
        "operationId" : "GetClientSubscriptionNodes",
        "parameters" : [ {
          "description" : "The ClientName is a string which contains the identification of the client.",
          "example" : "client-00e768a686",
          "explode" : false,
          "in" : "path",
          "name" : "ClientName",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "The SubscriptionName is a string which contains the identification of the subscription.",
          "example" : "subID",
          "explode" : false,
          "in" : "path",
          "name" : "SubscriptionName",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DLARString"
                }
              }
            },
            "description" : "A JSON object containing list of subscribed nodes for this client and subscription."
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "The request is incomplete or malformed"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Not authorized to access this resource"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Access forbidden for this resource"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "The resource was not found"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Something unexpected happened on the server"
          }
        },
        "summary" : "Get list of subscribed nodes for this client and subscription",
        "tags" : [ "Subscription information and settings" ]
      }
    },
    "/nodes/datalayer/subscriptions/clients/{ClientName}/subscriptions/{SubscriptionName}/properties" : {
      "get" : {
        "description" : "Get properties for this client and subscription.",
        "operationId" : "GetClientSubscriptionProperties",
        "parameters" : [ {
          "description" : "The ClientName is a string which contains the identification of the client.",
          "example" : "client-00e768a686",
          "explode" : false,
          "in" : "path",
          "name" : "ClientName",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "The SubscriptionName is a string which contains the identification of the subscription.",
          "example" : "subID",
          "explode" : false,
          "in" : "path",
          "name" : "SubscriptionName",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SubscriptionProperties"
                }
              }
            },
            "description" : "A JSON object containing properties for this client and subscription."
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "The request is incomplete or malformed"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Not authorized to access this resource"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Access forbidden for this resource"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "The resource was not found"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Something unexpected happened on the server"
          }
        },
        "summary" : "Get properties for this client and subscription.",
        "tags" : [ "Subscription information and settings" ]
      }
    },
    "/bulk" : {
      "put" : {
        "description" : "Requests to multiple datalayer nodes with one request",
        "operationId" : "BulkRequest",
        "parameters" : [ {
          "explode" : true,
          "in" : "query",
          "name" : "type",
          "required" : false,
          "schema" : {
            "default" : "read",
            "enum" : [ "read", "write", "create", "delete", "browse", "metadata" ],
            "type" : "string"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/BulkRequest"
              }
            }
          },
          "description" : "The data for the bulk request"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BulkResponse"
                }
              }
            },
            "description" : "A JSON object containing properties for this client and subscription."
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "The request is incomplete or malformed"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Not authorized to access this resource"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Access forbidden for this resource"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "The resource was not found"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Something unexpected happened on the server"
          }
        },
        "summary" : "Access to multiple datalayer nodes",
        "tags" : [ "Bulk Access" ]
      }
    },
    "/nodes/types/{TypeName}" : {
      "get" : {
        "description" : "Returns a type definition. Types can be referenced by nodes. A type describes the layout and structure of a complex node value.",
        "operationId" : "ReadTypeNode",
        "parameters" : [ {
          "description" : "The TypeName is a string. It can be separated by '/'",
          "example" : "datalayer/reflection",
          "explode" : false,
          "in" : "path",
          "name" : "TypeName",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Reflection"
                }
              },
              "application/octet-stream" : {
                "schema" : {
                  "format" : "binary",
                  "type" : "string"
                }
              },
              "plain/text" : {
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "description" : "A JSON object containing the type definition."
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "The request is incomplete or malformed"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Not authorized to access this resource"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Access forbidden for this resource"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "The resource was not found"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Something unexpected happened on the server"
          }
        },
        "summary" : "Generic type access",
        "tags" : [ "Types" ]
      }
    },
    "/nodes/devices/remotes" : {
      "post" : {
        "description" : "By adding a remote Data Layer, the content of the Data Layer is mapped into the address space of the current Data Layer. Requests are forwarded to the remote Data Layer.",
        "operationId" : "CreateRemote",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/RemoteConfig"
                } ],
                "required" : [ "nodes" ]
              }
            }
          },
          "description" : "Desciption of new remote connection"
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RemoteConfig"
                }
              },
              "application/octet-stream" : {
                "schema" : {
                  "format" : "binary",
                  "type" : "string"
                }
              },
              "plain/text" : {
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "description" : "A JSON object containing the remote config."
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "The request is incomplete or malformed"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Not authorized to access this resource"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Access forbidden for this resource"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "The resource was not found"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Something unexpected happened on the server"
          }
        },
        "summary" : "Creates an access to a remote Data Layer",
        "tags" : [ "Remotes" ]
      }
    },
    "/nodes/devices/remotes/{RemoteName}" : {
      "delete" : {
        "description" : "Delete a remote configuration.",
        "operationId" : "DeleteRemoteConfig",
        "parameters" : [ {
          "description" : "The name of the remote",
          "example" : "myremote",
          "explode" : false,
          "in" : "path",
          "name" : "RemoteName",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "200" : {
            "description" : "Node deleted successfully"
          },
          "202" : {
            "description" : "Node is marked for deletion"
          },
          "204" : {
            "description" : "Node deleted successfully"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Not authorized to access this resource"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Access forbidden for this resource"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "The resource was not found"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Something unexpected happened on the server"
          }
        },
        "summary" : "Delete a remote configuration",
        "tags" : [ "Remotes" ]
      },
      "get" : {
        "description" : "Access the remote configuration.",
        "operationId" : "GetRemote",
        "parameters" : [ {
          "description" : "The name of the remote",
          "example" : "myremote",
          "explode" : false,
          "in" : "path",
          "name" : "RemoteName",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RemoteConfig"
                }
              },
              "application/octet-stream" : {
                "schema" : {
                  "format" : "binary",
                  "type" : "string"
                }
              },
              "plain/text" : {
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "description" : "A JSON object containing the remote config."
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "The request is incomplete or malformed"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Not authorized to access this resource"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Access forbidden for this resource"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "The resource was not found"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Something unexpected happened on the server"
          }
        },
        "summary" : "Access the remote configuration",
        "tags" : [ "Remotes" ]
      }
    },
    "/nodes/devices/remotes/{RemoteName}/{Path}" : {
      "delete" : {
        "description" : "Execute a delete operation on a remote Data Layer.",
        "operationId" : "DeleteRemoteNode",
        "parameters" : [ {
          "description" : "The name of the remote",
          "example" : "myremote",
          "explode" : false,
          "in" : "path",
          "name" : "RemoteName",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "The path is a string which contains the full access path in the data layer tree. The sub elements in the path are separated by '/'. To query the root node use '/' as path.",
          "example" : "datalayer/nodes",
          "explode" : false,
          "in" : "path",
          "name" : "Path",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "200" : {
            "description" : "Node deleted successfully"
          },
          "202" : {
            "description" : "Node is marked for deletion"
          },
          "204" : {
            "description" : "Node deleted successfully"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Not authorized to access this resource"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Access forbidden for this resource"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "The resource was not found"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Something unexpected happened on the server"
          }
        },
        "summary" : "Execute a delete operation on a remote Data Layer",
        "tags" : [ "Remotes" ]
      },
      "get" : {
        "description" : "Returns the data, browse-information or metadata of a requested node. Depends on the query parameter.",
        "operationId" : "ReadRemoteNode",
        "parameters" : [ {
          "description" : "The name of the remote",
          "example" : "myremote",
          "explode" : false,
          "in" : "path",
          "name" : "RemoteName",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "The path is a string which contains the full access path in the data layer tree. The sub elements in the path are separated by '/'. To query the root node use '/' as path.",
          "example" : "datalayer/nodes",
          "explode" : false,
          "in" : "path",
          "name" : "Path",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "explode" : true,
          "in" : "query",
          "name" : "type",
          "required" : false,
          "schema" : {
            "default" : "null",
            "enum" : [ "metadata", "browse" ],
            "type" : "string"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "oneOf" : [ {
                    "$ref" : "#/components/schemas/Data"
                  }, {
                    "$ref" : "#/components/schemas/MetaData"
                  }, {
                    "$ref" : "#/components/schemas/BrowseData"
                  } ]
                }
              },
              "application/octet-stream" : {
                "schema" : {
                  "format" : "binary",
                  "type" : "string"
                }
              },
              "plain/text" : {
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "description" : "A JSON object or binary string containing the data, browseinfo or metadata of a requested node, depends on the query parameter."
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "The request is incomplete or malformed"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Not authorized to access this resource"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Access forbidden for this resource"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "The resource was not found"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Something unexpected happened on the server"
          }
        },
        "summary" : "Execute a read operation to get data from a remote Data Layer",
        "tags" : [ "Remotes" ]
      },
      "post" : {
        "description" : "Execute a create operation on a remote node. The values for the new node are posted as payload.",
        "operationId" : "CreateRemoteNode",
        "parameters" : [ {
          "description" : "The name of the remote",
          "example" : "myremote",
          "explode" : false,
          "in" : "path",
          "name" : "RemoteName",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "The path is a string which contains the full access path in the data layer tree. The sub elements in the path are separated by '/'. To query the root node use '/' as path.",
          "example" : "datalayer/nodes",
          "explode" : false,
          "in" : "path",
          "name" : "Path",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Data"
              }
            },
            "application/octet-stream" : {
              "schema" : {
                "format" : "binary",
                "type" : "string"
              }
            },
            "plain/text" : {
              "schema" : {
                "type" : "string"
              }
            }
          },
          "description" : "The data for the create operation"
        },
        "responses" : {
          "200" : {
            "description" : "Node successfully created"
          },
          "201" : {
            "description" : "Node successfully created"
          },
          "202" : {
            "description" : "Node will be created"
          },
          "204" : {
            "description" : "Node successfully created"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "The request is incomplete or malformed"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Not authorized to access this resource"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Access forbidden for this resource"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "The resource was not found"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Something unexpected happened on the server"
          }
        },
        "summary" : "Execute a create operation on a remote Data Layer",
        "tags" : [ "Remotes" ]
      },
      "put" : {
        "description" : "Execute a write operation. The written values are posted as payload.",
        "operationId" : "WriteRemoteNode",
        "parameters" : [ {
          "description" : "The name of the remote",
          "example" : "myremote",
          "explode" : false,
          "in" : "path",
          "name" : "RemoteName",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "The path is a string which contains the full access path in the data layer tree. The sub elements in the path are separated by '/'. To query the root node use '/' as path.",
          "example" : "datalayer/nodes",
          "explode" : false,
          "in" : "path",
          "name" : "Path",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Data"
              }
            },
            "application/octet-stream" : {
              "schema" : {
                "format" : "binary",
                "type" : "string"
              }
            },
            "plain/text" : {
              "schema" : {
                "type" : "string"
              }
            }
          },
          "description" : "The data of the node to be updated or the data of the command to be executed."
        },
        "responses" : {
          "200" : {
            "description" : "Node updated successfully"
          },
          "202" : {
            "description" : "Node is marked for update"
          },
          "204" : {
            "description" : "Node updated successfully"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "The request is incomplete or malformed"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Not authorized to access this resource"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Access forbidden for this resource"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "The resource was not found"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Something unexpected happened on the server"
          }
        },
        "summary" : "Execute a write operation on a remote Data Layer",
        "tags" : [ "Remotes" ]
      }
    }
  },
  "components" : {
    "parameters" : {
      "Path" : {
        "description" : "The path is a string which contains the full access path in the data layer tree. The sub elements in the path are separated by '/'. To query the root node use '/' as path.",
        "example" : "datalayer/nodes",
        "explode" : false,
        "in" : "path",
        "name" : "Path",
        "required" : true,
        "schema" : {
          "type" : "string"
        },
        "style" : "simple"
      },
      "TypeName" : {
        "description" : "The TypeName is a string. It can be separated by '/'",
        "example" : "datalayer/reflection",
        "explode" : false,
        "in" : "path",
        "name" : "TypeName",
        "required" : true,
        "schema" : {
          "type" : "string"
        },
        "style" : "simple"
      },
      "Name" : {
        "description" : "Name of the object",
        "example" : "Name",
        "explode" : false,
        "in" : "path",
        "name" : "Name",
        "required" : true,
        "schema" : {
          "type" : "string"
        },
        "style" : "simple"
      },
      "ChunkName" : {
        "description" : "The ChunkName is a string which contains the name of the chunk.",
        "example" : "mychunk",
        "explode" : false,
        "in" : "path",
        "name" : "ChunkName",
        "required" : true,
        "schema" : {
          "type" : "string"
        },
        "style" : "simple"
      },
      "ClientName" : {
        "description" : "The ClientName is a string which contains the identification of the client.",
        "example" : "client-00e768a686",
        "explode" : false,
        "in" : "path",
        "name" : "ClientName",
        "required" : true,
        "schema" : {
          "type" : "string"
        },
        "style" : "simple"
      },
      "SubscriptionName" : {
        "description" : "The SubscriptionName is a string which contains the identification of the subscription.",
        "example" : "subID",
        "explode" : false,
        "in" : "path",
        "name" : "SubscriptionName",
        "required" : true,
        "schema" : {
          "type" : "string"
        },
        "style" : "simple"
      },
      "RemoteName" : {
        "description" : "The name of the remote",
        "example" : "myremote",
        "explode" : false,
        "in" : "path",
        "name" : "RemoteName",
        "required" : true,
        "schema" : {
          "type" : "string"
        },
        "style" : "simple"
      }
    },
    "responses" : {
      "Unauthorized" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/Problem"
            }
          }
        },
        "description" : "Not authorized to access this resource"
      },
      "Forbidden" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/Problem"
            }
          }
        },
        "description" : "Access forbidden for this resource"
      },
      "BadRequest" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/Problem"
            }
          }
        },
        "description" : "The request is incomplete or malformed"
      },
      "InternalServerError" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/Problem"
            }
          }
        },
        "description" : "Something unexpected happened on the server"
      },
      "NotFound" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/Problem"
            }
          }
        },
        "description" : "The resource was not found"
      },
      "Conflict" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/Problem"
            }
          }
        },
        "description" : "The request could not be completed due to a conflict with the current state of the target resource"
      }
    },
    "schemas" : {
      "Data" : {
        "description" : "JSON serialized object string depending on format parameter.",
        "example" : {
          "schema" : "types/datalayer/metadata",
          "responseType" : "read",
          "type" : "arstring",
          "value" : "{}"
        },
        "properties" : {
          "type" : {
            "description" : "The type of the returned value",
            "example" : "arstring",
            "type" : "string"
          },
          "value" : {
            "description" : "Value of the node",
            "type" : "object"
          },
          "schema" : {
            "description" : "Reference to the type",
            "example" : "types/datalayer/metadata",
            "type" : "string"
          },
          "responseType" : {
            "description" : "Type of the response",
            "enum" : [ "browse", "read", "write", "metadata", "create", "delete", "getAllowed" ],
            "example" : "read",
            "type" : "string"
          }
        },
        "required" : [ "type" ],
        "type" : "object"
      },
      "MetaData" : {
        "properties" : {
          "type" : {
            "description" : "Type of the returned value",
            "example" : "object",
            "type" : "string"
          },
          "value" : {
            "$ref" : "#/components/schemas/metadata"
          },
          "responseType" : {
            "description" : "Type of the response",
            "enum" : [ "browse", "read", "write", "metadata", "create", "delete", "getAllowed" ],
            "example" : "read",
            "type" : "string"
          }
        },
        "required" : [ "type", "value" ],
        "type" : "object"
      },
      "BulkRequest" : {
        "description" : "Bulk request parameters.",
        "items" : {
          "properties" : {
            "address" : {
              "description" : "Requested Data Layer address",
              "example" : "datalayer/nodes",
              "type" : "string"
            },
            "type" : {
              "description" : "The type of the value",
              "enum" : [ "bool8", "int8", "uint8", "int16", "uint16", "int32", "uint32", "int64", "uint64", "float", "double", "float32", "float64", "string", "arbool8", "arint8", "aruint8", "arint16", "aruint16", "arint32", "aruint32", "arint64", "aruint64", "arfloat", "ardouble", "arfloat32", "arfloat64", "arstring", "timestamp", "artimestamp", "object" ],
              "example" : "bool8",
              "type" : "string"
            },
            "value" : {
              "description" : "Value of the node",
              "type" : "object"
            }
          },
          "type" : "object"
        },
        "type" : "array"
      },
      "RetainStats" : {
        "example" : {
          "type" : "object",
          "value" : {
            "lastUsed" : 988759834,
            "total" : 343953088,
            "used" : 629561881,
            "free" : 2147483647,
            "biggestFree" : 2147483647,
            "syncCounter" : 2147483647,
            "info" : "emulated"
          }
        },
        "properties" : {
          "type" : {
            "description" : "Type of the returned value",
            "example" : "object",
            "type" : "string"
          },
          "value" : {
            "$ref" : "#/components/schemas/retainstats"
          }
        },
        "required" : [ "type", "value" ],
        "type" : "object"
      },
      "BulkResponse" : {
        "description" : "Bulk request parameters.",
        "items" : {
          "properties" : {
            "address" : {
              "description" : "Requested Data Layer address",
              "example" : "datalayer/curvemq/publickey",
              "type" : "string"
            },
            "timestamp" : {
              "description" : "Timestamp of request of this entry",
              "example" : 12934120346,
              "type" : "integer"
            },
            "result" : {
              "description" : "Result of this request",
              "example" : "DL_OK",
              "type" : "string"
            },
            "type" : {
              "description" : "The type of the value",
              "enum" : [ "bool8", "int8", "uint8", "int16", "uint16", "int32", "uint32", "int64", "uint64", "float", "double", "float32", "float64", "string", "arbool8", "arint8", "aruint8", "arint16", "aruint16", "arint32", "aruint32", "arint64", "aruint64", "arfloat", "ardouble", "arfloat32", "arfloat64", "arstring", "timestamp", "artimestamp", "object", "error" ],
              "example" : "string",
              "type" : "string"
            },
            "value" : {
              "description" : "Value of the node",
              "type" : "object"
            }
          },
          "type" : "object"
        },
        "type" : "array"
      },
      "Memory" : {
        "example" : {
          "type" : "type",
          "value" : {
            "id" : "id",
            "sizeBytes" : 343953088
          }
        },
        "properties" : {
          "type" : {
            "description" : "Type of the returned value",
            "type" : "string"
          },
          "value" : {
            "$ref" : "#/components/schemas/MemoryValue"
          }
        },
        "required" : [ "type", "value" ],
        "type" : "object"
      },
      "State" : {
        "description" : "Current State of the framework / application",
        "enum" : [ "INIT", "STOP", "RUN", "SYSERROR", "SHUTDOWN" ],
        "type" : "string"
      },
      "Task" : {
        "description" : "Definition of a ctrlX scheduler task",
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "priority" : {
            "type" : "number"
          },
          "affinity" : {
            "type" : "number"
          },
          "stacksize" : {
            "type" : "number"
          },
          "event" : {
            "type" : "string"
          },
          "cycletime" : {
            "type" : "number"
          }
        },
        "required" : [ "name" ],
        "type" : "object"
      },
      "BrowseData" : {
        "description" : "Browse information about child nodes",
        "example" : {
          "responseType" : "read",
          "type" : "arstring",
          "value" : [ "datalayer", "scheduler", "types" ]
        },
        "properties" : {
          "type" : {
            "description" : "The type of the returned value",
            "example" : "arstring",
            "type" : "string"
          },
          "value" : {
            "description" : "Array of child node names",
            "example" : [ "datalayer", "scheduler", "types" ],
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "responseType" : {
            "description" : "Type of the response",
            "enum" : [ "browse", "read", "write", "metadata", "create", "delete", "getAllowed" ],
            "example" : "read",
            "type" : "string"
          }
        },
        "required" : [ "type" ],
        "type" : "object"
      },
      "Problem" : {
        "description" : "This document defines a \"problem detail\" as a way  to carry machine-readable details of errors in a  HTTP response to avoid the need to define new error  response formats for HTTP APIs.\n",
        "properties" : {
          "type" : {
            "default" : "about:blank",
            "description" : "A URI reference [RFC3986] that identifies the problem type. \nThis specification encourages that, when dereferenced, \nit provide human-readable documentation for the problem type \n(e.g., using HTML [W3C.REC-html5-20141028]). When this member \nis not present, its value is assumed to be \"about:blank\".\n",
            "example" : "https://example.com/probs/out-of-credit",
            "format" : "uri",
            "type" : "string"
          },
          "title" : {
            "description" : "A short, human-readable summary of the problem type. \nIt SHOULD NOT change from occurrence to occurrence of the problem, \nexcept for purposes of localization (e.g., using proactive content \nnegotiation; see [RFC7231], Section 3.4).\n",
            "example" : "You do not have enough credit.",
            "type" : "string"
          },
          "status" : {
            "description" : "The HTTP status code ([RFC7231], Section 6) generated by the \norigin server for this occurrence of the problem.\n",
            "example" : 403,
            "format" : "int32",
            "type" : "integer"
          },
          "detail" : {
            "description" : "A human-readable explanation specific to this occurrence of the problem.\n",
            "example" : "Your current balance is 30, but that costs 50.",
            "type" : "string"
          },
          "instance" : {
            "description" : "A URI reference that identifies the specific occurrence of the problem.\nIt may or may not yield further information if dereferenced.\n",
            "example" : "/account/12345/msgs/abc",
            "type" : "string"
          },
          "code" : {
            "deprecated" : true,
            "description" : "An error code issued by the system that caused the original problem.\nThis code can be used to track down the root cause of the error.\n",
            "example" : "F360001",
            "type" : "string"
          },
          "mainDiagnosisCode" : {
            "description" : "The main diagnosis code is issued by the system that caused the problem.\nThis code can be used to track down the root cause and source of the error.\nIt can be used to search in the documentation for a solution.\nIt SHOULD NOT change from occurrence to occurrence of the same problem.\n",
            "example" : "080F0100",
            "type" : "string"
          },
          "detailedDiagnosisCode" : {
            "description" : "The detailed diagnosis code issued by the system that caused the problem.\nThis code can be used to track down the detailed cause and source of the error.\nIt can be used to search in the documentation for a solution.\nThe detailed diagnosis code gives additional information about the cause of the error.\nIt SHOULD NOT change from occurrence to occurrence of the same problem.\n",
            "example" : "00666001",
            "type" : "string"
          },
          "dynamicDescription" : {
            "description" : "A dynamic description gives detailed information about the occurrence of a problem.\nIt can change between different occurrences of the same error.\n",
            "example" : "value = -4.5",
            "type" : "string"
          },
          "severity" : {
            "description" : " Severity of a problem as defined RFC5424 of the Syslog standard, see https://tools.ietf.org/html/rfc5424",
            "enum" : [ "Emergency", "Alert", "Critical", "Error", "Warning", "Notice", "Informational", "Debug" ],
            "example" : "Error",
            "type" : "string"
          },
          "links" : {
            "description" : "Collection of links to fix the problem. E.g. links to online user manual,\nto an online community (using tags) or a developer chat (e.g. Slack).\n",
            "items" : {
              "example" : "https://stackoverflow.com/questions/tagged/boschrexroth+controlx+f360001",
              "format" : "uri",
              "type" : "string"
            },
            "type" : "array"
          },
          "moreInfo" : {
            "additionalProperties" : true,
            "example" : {
              "trace" : "ExampleClass.cpp#452 Null pointer exception",
              "class" : "ExampleClass"
            },
            "type" : "object"
          }
        },
        "required" : [ "title", "type" ],
        "type" : "object",
        "x-version" : "1.0.0"
      },
      "DLString" : {
        "description" : "JSON serialized string object.",
        "example" : {
          "type" : "string",
          "value" : "value"
        },
        "properties" : {
          "type" : {
            "description" : "The type of the returned value",
            "example" : "string",
            "type" : "string"
          },
          "value" : {
            "description" : "Value of the node",
            "type" : "string"
          }
        },
        "required" : [ "type", "value" ],
        "type" : "object"
      },
      "DLARString" : {
        "description" : "JSON serialized string object.",
        "example" : {
          "type" : "arstring",
          "value" : [ "value", "value" ]
        },
        "properties" : {
          "type" : {
            "description" : "The type of the returned value",
            "example" : "arstring",
            "type" : "string"
          },
          "value" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        },
        "required" : [ "type", "value" ],
        "type" : "object"
      },
      "DLUInt32" : {
        "description" : "JSON serialized uint32 object.",
        "example" : {
          "type" : "uint32",
          "value" : 343953088
        },
        "properties" : {
          "type" : {
            "description" : "The type of the returned value",
            "example" : "uint32",
            "type" : "string"
          },
          "value" : {
            "description" : "Value of the node",
            "format" : "int32",
            "maximum" : 4294967295,
            "minimum" : 0,
            "type" : "integer"
          }
        },
        "required" : [ "type", "value" ],
        "type" : "object"
      },
      "SubscriptionSettings" : {
        "example" : {
          "type" : "object",
          "value" : {
            "minimumSampleInterval" : 2147483647,
            "maximumBufferSize" : 629561881,
            "minimumErrorInterval" : 2147483647,
            "minimumPublishInterval" : 343953088
          }
        },
        "properties" : {
          "type" : {
            "description" : "Type of the returned value",
            "example" : "object",
            "type" : "string"
          },
          "value" : {
            "$ref" : "#/components/schemas/subscriptionsettings"
          }
        },
        "required" : [ "type", "value" ],
        "type" : "object"
      },
      "SubscriptionProperties" : {
        "example" : {
          "type" : "type",
          "value" : {
            "keepaliveInterval" : 343953088,
            "rules" : [ {
              "rule" : ""
            }, {
              "rule" : ""
            } ],
            "id" : "subID",
            "publishInterval" : 2147483647,
            "errorInterval" : 629561881
          }
        },
        "properties" : {
          "type" : {
            "description" : "Type of the returned value",
            "type" : "string"
          },
          "value" : {
            "$ref" : "#/components/schemas/comm_datalayer_SubscriptionProperties"
          }
        },
        "required" : [ "type", "value" ],
        "type" : "object"
      },
      "SubscriptionPropertiesData" : {
        "example" : {
          "keepaliveInterval" : 343953088,
          "rules" : [ {
            "rule" : ""
          }, {
            "rule" : ""
          } ],
          "id" : "subID",
          "publishInterval" : 2147483647,
          "errorInterval" : 629561881
        },
        "properties" : {
          "id" : {
            "description" : "User identification for subscribtion. Use it update and dispose the old subscription",
            "example" : "subID",
            "type" : "string"
          },
          "keepaliveInterval" : {
            "default" : 60000,
            "description" : "keepalive in milli seconds for subscription time in seconds the subscriptions",
            "maximum" : 4294967295,
            "minimum" : 0,
            "type" : "integer"
          },
          "publishInterval" : {
            "default" : 1000,
            "description" : "time in milli seconds for upper limit of publish messages to not get flooded with new messages",
            "maximum" : 4294967295,
            "minimum" : 0,
            "type" : "integer"
          },
          "rules" : {
            "description" : "Additional rules for subscription",
            "items" : {
              "$ref" : "#/components/schemas/comm_datalayer_Property"
            },
            "type" : "array"
          },
          "errorInterval" : {
            "default" : 10000,
            "description" : "time in milli seconds to re-read data if an error was received for a node",
            "maximum" : 4294967295,
            "minimum" : 0,
            "type" : "integer"
          }
        },
        "required" : [ "id" ],
        "type" : "object"
      },
      "SubscriptionData" : {
        "example" : {
          "type" : "type",
          "value" : {
            "nodes" : [ "nodes", "nodes" ],
            "properties" : {
              "keepaliveInterval" : 343953088,
              "rules" : [ {
                "rule" : ""
              }, {
                "rule" : ""
              } ],
              "id" : "subID",
              "publishInterval" : 2147483647,
              "errorInterval" : 629561881
            }
          }
        },
        "properties" : {
          "type" : {
            "description" : "Type of the returned value",
            "type" : "string"
          },
          "value" : {
            "$ref" : "#/components/schemas/comm_datalayer_SubscriptionData"
          }
        },
        "required" : [ "type", "value" ],
        "type" : "object"
      },
      "SSE_Event" : {
        "example" : {
          "data" : "",
          "id" : 0.8008281904610115,
          "event" : "update"
        },
        "properties" : {
          "id" : {
            "type" : "number"
          },
          "event" : {
            "enum" : [ "update", "keepalive", "browse", "metadata", "error" ],
            "type" : "string"
          },
          "data" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/SSE_EventData"
            }, {
              "$ref" : "#/components/schemas/Problem"
            } ]
          }
        },
        "required" : [ "data", "event", "id" ],
        "type" : "object",
        "x-version" : "1.0.0"
      },
      "SSE_Event_data" : {
        "description" : "Event data",
        "properties" : {
          "node" : {
            "description" : "Node address of event item",
            "type" : "string"
          },
          "type" : {
            "description" : "type of value (basetype or \"object\")",
            "type" : "string"
          },
          "schema" : {
            "description" : "reference to flatbuffer type in datalayer (only if type is \"object\")",
            "type" : "string"
          },
          "value" : {
            "description" : "value of the node",
            "type" : "string"
          },
          "timestamp" : {
            "description" : "Timestamp as Filetime",
            "type" : "number"
          }
        },
        "required" : [ "event", "node", "timestamp", "value" ],
        "type" : "object",
        "x-version" : "1.0.0"
      },
      "SubscriptionID" : {
        "description" : "SubscriptionID",
        "properties" : {
          "id" : {
            "example" : "subID",
            "type" : "string"
          }
        },
        "required" : [ "id" ],
        "type" : "object"
      },
      "SubscriptionNodeList" : {
        "description" : "list of nodes to subscribe to",
        "properties" : {
          "nodes" : {
            "example" : [ "datalayer/retain/stats/sync-counter" ],
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        },
        "required" : [ "nodes" ],
        "type" : "object"
      },
      "ServerSettings" : {
        "example" : {
          "type" : "object",
          "value" : {
            "serverWaitResponseTimeout" : 2147483647,
            "serverIdlePingTimeout" : 343953088
          }
        },
        "properties" : {
          "type" : {
            "default" : "object",
            "description" : "Type of the returned value",
            "type" : "string"
          },
          "value" : {
            "$ref" : "#/components/schemas/comm_datalayer_ServerSettings"
          }
        },
        "required" : [ "type", "value" ],
        "type" : "object"
      },
      "Reflection" : {
        "additionalProperties" : false,
        "example" : {
          "enums" : [ {
            "is_union" : true,
            "values" : [ {
              "union_type" : {
                "index" : -1803530559
              },
              "documentation" : [ "documentation", "documentation" ],
              "name" : "name",
              "value" : 2147483647,
              "object" : {
                "is_struct" : true,
                "bytesize" : 885365090,
                "documentation" : [ "documentation", "documentation" ],
                "name" : "name",
                "attributes" : [ {
                  "value" : "value",
                  "key" : "key"
                }, {
                  "value" : "value",
                  "key" : "key"
                } ],
                "fields" : [ {
                  "default_real" : 5.637376656633329,
                  "default_integer" : 2147483647,
                  "offset" : 9606,
                  "deprecated" : true,
                  "documentation" : [ "documentation", "documentation" ],
                  "name" : "name",
                  "attributes" : [ {
                    "value" : "value",
                    "key" : "key"
                  }, {
                    "value" : "value",
                    "key" : "key"
                  } ],
                  "id" : 39500,
                  "type" : {
                    "index" : -1803530559
                  },
                  "required" : true,
                  "key" : true
                }, {
                  "default_real" : 5.637376656633329,
                  "default_integer" : 2147483647,
                  "offset" : 9606,
                  "deprecated" : true,
                  "documentation" : [ "documentation", "documentation" ],
                  "name" : "name",
                  "attributes" : [ {
                    "value" : "value",
                    "key" : "key"
                  }, {
                    "value" : "value",
                    "key" : "key"
                  } ],
                  "id" : 39500,
                  "type" : {
                    "index" : -1803530559
                  },
                  "required" : true,
                  "key" : true
                } ],
                "minalign" : -1158723813
              }
            }, {
              "union_type" : {
                "index" : -1803530559
              },
              "documentation" : [ "documentation", "documentation" ],
              "name" : "name",
              "value" : 2147483647,
              "object" : {
                "is_struct" : true,
                "bytesize" : 885365090,
                "documentation" : [ "documentation", "documentation" ],
                "name" : "name",
                "attributes" : [ {
                  "value" : "value",
                  "key" : "key"
                }, {
                  "value" : "value",
                  "key" : "key"
                } ],
                "fields" : [ {
                  "default_real" : 5.637376656633329,
                  "default_integer" : 2147483647,
                  "offset" : 9606,
                  "deprecated" : true,
                  "documentation" : [ "documentation", "documentation" ],
                  "name" : "name",
                  "attributes" : [ {
                    "value" : "value",
                    "key" : "key"
                  }, {
                    "value" : "value",
                    "key" : "key"
                  } ],
                  "id" : 39500,
                  "type" : {
                    "index" : -1803530559
                  },
                  "required" : true,
                  "key" : true
                }, {
                  "default_real" : 5.637376656633329,
                  "default_integer" : 2147483647,
                  "offset" : 9606,
                  "deprecated" : true,
                  "documentation" : [ "documentation", "documentation" ],
                  "name" : "name",
                  "attributes" : [ {
                    "value" : "value",
                    "key" : "key"
                  }, {
                    "value" : "value",
                    "key" : "key"
                  } ],
                  "id" : 39500,
                  "type" : {
                    "index" : -1803530559
                  },
                  "required" : true,
                  "key" : true
                } ],
                "minalign" : -1158723813
              }
            } ],
            "documentation" : [ "documentation", "documentation" ],
            "name" : "name",
            "attributes" : [ {
              "value" : "value",
              "key" : "key"
            }, {
              "value" : "value",
              "key" : "key"
            } ],
            "underlying_type" : {
              "index" : -1803530559
            }
          }, {
            "is_union" : true,
            "values" : [ {
              "union_type" : {
                "index" : -1803530559
              },
              "documentation" : [ "documentation", "documentation" ],
              "name" : "name",
              "value" : 2147483647,
              "object" : {
                "is_struct" : true,
                "bytesize" : 885365090,
                "documentation" : [ "documentation", "documentation" ],
                "name" : "name",
                "attributes" : [ {
                  "value" : "value",
                  "key" : "key"
                }, {
                  "value" : "value",
                  "key" : "key"
                } ],
                "fields" : [ {
                  "default_real" : 5.637376656633329,
                  "default_integer" : 2147483647,
                  "offset" : 9606,
                  "deprecated" : true,
                  "documentation" : [ "documentation", "documentation" ],
                  "name" : "name",
                  "attributes" : [ {
                    "value" : "value",
                    "key" : "key"
                  }, {
                    "value" : "value",
                    "key" : "key"
                  } ],
                  "id" : 39500,
                  "type" : {
                    "index" : -1803530559
                  },
                  "required" : true,
                  "key" : true
                }, {
                  "default_real" : 5.637376656633329,
                  "default_integer" : 2147483647,
                  "offset" : 9606,
                  "deprecated" : true,
                  "documentation" : [ "documentation", "documentation" ],
                  "name" : "name",
                  "attributes" : [ {
                    "value" : "value",
                    "key" : "key"
                  }, {
                    "value" : "value",
                    "key" : "key"
                  } ],
                  "id" : 39500,
                  "type" : {
                    "index" : -1803530559
                  },
                  "required" : true,
                  "key" : true
                } ],
                "minalign" : -1158723813
              }
            }, {
              "union_type" : {
                "index" : -1803530559
              },
              "documentation" : [ "documentation", "documentation" ],
              "name" : "name",
              "value" : 2147483647,
              "object" : {
                "is_struct" : true,
                "bytesize" : 885365090,
                "documentation" : [ "documentation", "documentation" ],
                "name" : "name",
                "attributes" : [ {
                  "value" : "value",
                  "key" : "key"
                }, {
                  "value" : "value",
                  "key" : "key"
                } ],
                "fields" : [ {
                  "default_real" : 5.637376656633329,
                  "default_integer" : 2147483647,
                  "offset" : 9606,
                  "deprecated" : true,
                  "documentation" : [ "documentation", "documentation" ],
                  "name" : "name",
                  "attributes" : [ {
                    "value" : "value",
                    "key" : "key"
                  }, {
                    "value" : "value",
                    "key" : "key"
                  } ],
                  "id" : 39500,
                  "type" : {
                    "index" : -1803530559
                  },
                  "required" : true,
                  "key" : true
                }, {
                  "default_real" : 5.637376656633329,
                  "default_integer" : 2147483647,
                  "offset" : 9606,
                  "deprecated" : true,
                  "documentation" : [ "documentation", "documentation" ],
                  "name" : "name",
                  "attributes" : [ {
                    "value" : "value",
                    "key" : "key"
                  }, {
                    "value" : "value",
                    "key" : "key"
                  } ],
                  "id" : 39500,
                  "type" : {
                    "index" : -1803530559
                  },
                  "required" : true,
                  "key" : true
                } ],
                "minalign" : -1158723813
              }
            } ],
            "documentation" : [ "documentation", "documentation" ],
            "name" : "name",
            "attributes" : [ {
              "value" : "value",
              "key" : "key"
            }, {
              "value" : "value",
              "key" : "key"
            } ],
            "underlying_type" : {
              "index" : -1803530559
            }
          } ],
          "file_ext" : "file_ext",
          "root_table" : {
            "is_struct" : true,
            "bytesize" : 885365090,
            "documentation" : [ "documentation", "documentation" ],
            "name" : "name",
            "attributes" : [ {
              "value" : "value",
              "key" : "key"
            }, {
              "value" : "value",
              "key" : "key"
            } ],
            "fields" : [ {
              "default_real" : 5.637376656633329,
              "default_integer" : 2147483647,
              "offset" : 9606,
              "deprecated" : true,
              "documentation" : [ "documentation", "documentation" ],
              "name" : "name",
              "attributes" : [ {
                "value" : "value",
                "key" : "key"
              }, {
                "value" : "value",
                "key" : "key"
              } ],
              "id" : 39500,
              "type" : {
                "index" : -1803530559
              },
              "required" : true,
              "key" : true
            }, {
              "default_real" : 5.637376656633329,
              "default_integer" : 2147483647,
              "offset" : 9606,
              "deprecated" : true,
              "documentation" : [ "documentation", "documentation" ],
              "name" : "name",
              "attributes" : [ {
                "value" : "value",
                "key" : "key"
              }, {
                "value" : "value",
                "key" : "key"
              } ],
              "id" : 39500,
              "type" : {
                "index" : -1803530559
              },
              "required" : true,
              "key" : true
            } ],
            "minalign" : -1158723813
          },
          "file_ident" : "file_ident",
          "objects" : [ {
            "is_struct" : true,
            "bytesize" : 885365090,
            "documentation" : [ "documentation", "documentation" ],
            "name" : "name",
            "attributes" : [ {
              "value" : "value",
              "key" : "key"
            }, {
              "value" : "value",
              "key" : "key"
            } ],
            "fields" : [ {
              "default_real" : 5.637376656633329,
              "default_integer" : 2147483647,
              "offset" : 9606,
              "deprecated" : true,
              "documentation" : [ "documentation", "documentation" ],
              "name" : "name",
              "attributes" : [ {
                "value" : "value",
                "key" : "key"
              }, {
                "value" : "value",
                "key" : "key"
              } ],
              "id" : 39500,
              "type" : {
                "index" : -1803530559
              },
              "required" : true,
              "key" : true
            }, {
              "default_real" : 5.637376656633329,
              "default_integer" : 2147483647,
              "offset" : 9606,
              "deprecated" : true,
              "documentation" : [ "documentation", "documentation" ],
              "name" : "name",
              "attributes" : [ {
                "value" : "value",
                "key" : "key"
              }, {
                "value" : "value",
                "key" : "key"
              } ],
              "id" : 39500,
              "type" : {
                "index" : -1803530559
              },
              "required" : true,
              "key" : true
            } ],
            "minalign" : -1158723813
          }, {
            "is_struct" : true,
            "bytesize" : 885365090,
            "documentation" : [ "documentation", "documentation" ],
            "name" : "name",
            "attributes" : [ {
              "value" : "value",
              "key" : "key"
            }, {
              "value" : "value",
              "key" : "key"
            } ],
            "fields" : [ {
              "default_real" : 5.637376656633329,
              "default_integer" : 2147483647,
              "offset" : 9606,
              "deprecated" : true,
              "documentation" : [ "documentation", "documentation" ],
              "name" : "name",
              "attributes" : [ {
                "value" : "value",
                "key" : "key"
              }, {
                "value" : "value",
                "key" : "key"
              } ],
              "id" : 39500,
              "type" : {
                "index" : -1803530559
              },
              "required" : true,
              "key" : true
            }, {
              "default_real" : 5.637376656633329,
              "default_integer" : 2147483647,
              "offset" : 9606,
              "deprecated" : true,
              "documentation" : [ "documentation", "documentation" ],
              "name" : "name",
              "attributes" : [ {
                "value" : "value",
                "key" : "key"
              }, {
                "value" : "value",
                "key" : "key"
              } ],
              "id" : 39500,
              "type" : {
                "index" : -1803530559
              },
              "required" : true,
              "key" : true
            } ],
            "minalign" : -1158723813
          } ],
          "services" : [ {
            "calls" : [ {
              "request" : {
                "is_struct" : true,
                "bytesize" : 885365090,
                "documentation" : [ "documentation", "documentation" ],
                "name" : "name",
                "attributes" : [ {
                  "value" : "value",
                  "key" : "key"
                }, {
                  "value" : "value",
                  "key" : "key"
                } ],
                "fields" : [ {
                  "default_real" : 5.637376656633329,
                  "default_integer" : 2147483647,
                  "offset" : 9606,
                  "deprecated" : true,
                  "documentation" : [ "documentation", "documentation" ],
                  "name" : "name",
                  "attributes" : [ {
                    "value" : "value",
                    "key" : "key"
                  }, {
                    "value" : "value",
                    "key" : "key"
                  } ],
                  "id" : 39500,
                  "type" : {
                    "index" : -1803530559
                  },
                  "required" : true,
                  "key" : true
                }, {
                  "default_real" : 5.637376656633329,
                  "default_integer" : 2147483647,
                  "offset" : 9606,
                  "deprecated" : true,
                  "documentation" : [ "documentation", "documentation" ],
                  "name" : "name",
                  "attributes" : [ {
                    "value" : "value",
                    "key" : "key"
                  }, {
                    "value" : "value",
                    "key" : "key"
                  } ],
                  "id" : 39500,
                  "type" : {
                    "index" : -1803530559
                  },
                  "required" : true,
                  "key" : true
                } ],
                "minalign" : -1158723813
              },
              "response" : {
                "is_struct" : true,
                "bytesize" : 885365090,
                "documentation" : [ "documentation", "documentation" ],
                "name" : "name",
                "attributes" : [ {
                  "value" : "value",
                  "key" : "key"
                }, {
                  "value" : "value",
                  "key" : "key"
                } ],
                "fields" : [ {
                  "default_real" : 5.637376656633329,
                  "default_integer" : 2147483647,
                  "offset" : 9606,
                  "deprecated" : true,
                  "documentation" : [ "documentation", "documentation" ],
                  "name" : "name",
                  "attributes" : [ {
                    "value" : "value",
                    "key" : "key"
                  }, {
                    "value" : "value",
                    "key" : "key"
                  } ],
                  "id" : 39500,
                  "type" : {
                    "index" : -1803530559
                  },
                  "required" : true,
                  "key" : true
                }, {
                  "default_real" : 5.637376656633329,
                  "default_integer" : 2147483647,
                  "offset" : 9606,
                  "deprecated" : true,
                  "documentation" : [ "documentation", "documentation" ],
                  "name" : "name",
                  "attributes" : [ {
                    "value" : "value",
                    "key" : "key"
                  }, {
                    "value" : "value",
                    "key" : "key"
                  } ],
                  "id" : 39500,
                  "type" : {
                    "index" : -1803530559
                  },
                  "required" : true,
                  "key" : true
                } ],
                "minalign" : -1158723813
              },
              "documentation" : [ "documentation", "documentation" ],
              "name" : "name",
              "attributes" : [ {
                "value" : "value",
                "key" : "key"
              }, {
                "value" : "value",
                "key" : "key"
              } ]
            }, {
              "request" : {
                "is_struct" : true,
                "bytesize" : 885365090,
                "documentation" : [ "documentation", "documentation" ],
                "name" : "name",
                "attributes" : [ {
                  "value" : "value",
                  "key" : "key"
                }, {
                  "value" : "value",
                  "key" : "key"
                } ],
                "fields" : [ {
                  "default_real" : 5.637376656633329,
                  "default_integer" : 2147483647,
                  "offset" : 9606,
                  "deprecated" : true,
                  "documentation" : [ "documentation", "documentation" ],
                  "name" : "name",
                  "attributes" : [ {
                    "value" : "value",
                    "key" : "key"
                  }, {
                    "value" : "value",
                    "key" : "key"
                  } ],
                  "id" : 39500,
                  "type" : {
                    "index" : -1803530559
                  },
                  "required" : true,
                  "key" : true
                }, {
                  "default_real" : 5.637376656633329,
                  "default_integer" : 2147483647,
                  "offset" : 9606,
                  "deprecated" : true,
                  "documentation" : [ "documentation", "documentation" ],
                  "name" : "name",
                  "attributes" : [ {
                    "value" : "value",
                    "key" : "key"
                  }, {
                    "value" : "value",
                    "key" : "key"
                  } ],
                  "id" : 39500,
                  "type" : {
                    "index" : -1803530559
                  },
                  "required" : true,
                  "key" : true
                } ],
                "minalign" : -1158723813
              },
              "response" : {
                "is_struct" : true,
                "bytesize" : 885365090,
                "documentation" : [ "documentation", "documentation" ],
                "name" : "name",
                "attributes" : [ {
                  "value" : "value",
                  "key" : "key"
                }, {
                  "value" : "value",
                  "key" : "key"
                } ],
                "fields" : [ {
                  "default_real" : 5.637376656633329,
                  "default_integer" : 2147483647,
                  "offset" : 9606,
                  "deprecated" : true,
                  "documentation" : [ "documentation", "documentation" ],
                  "name" : "name",
                  "attributes" : [ {
                    "value" : "value",
                    "key" : "key"
                  }, {
                    "value" : "value",
                    "key" : "key"
                  } ],
                  "id" : 39500,
                  "type" : {
                    "index" : -1803530559
                  },
                  "required" : true,
                  "key" : true
                }, {
                  "default_real" : 5.637376656633329,
                  "default_integer" : 2147483647,
                  "offset" : 9606,
                  "deprecated" : true,
                  "documentation" : [ "documentation", "documentation" ],
                  "name" : "name",
                  "attributes" : [ {
                    "value" : "value",
                    "key" : "key"
                  }, {
                    "value" : "value",
                    "key" : "key"
                  } ],
                  "id" : 39500,
                  "type" : {
                    "index" : -1803530559
                  },
                  "required" : true,
                  "key" : true
                } ],
                "minalign" : -1158723813
              },
              "documentation" : [ "documentation", "documentation" ],
              "name" : "name",
              "attributes" : [ {
                "value" : "value",
                "key" : "key"
              }, {
                "value" : "value",
                "key" : "key"
              } ]
            } ],
            "documentation" : [ "documentation", "documentation" ],
            "name" : "name",
            "attributes" : [ {
              "value" : "value",
              "key" : "key"
            }, {
              "value" : "value",
              "key" : "key"
            } ]
          }, {
            "calls" : [ {
              "request" : {
                "is_struct" : true,
                "bytesize" : 885365090,
                "documentation" : [ "documentation", "documentation" ],
                "name" : "name",
                "attributes" : [ {
                  "value" : "value",
                  "key" : "key"
                }, {
                  "value" : "value",
                  "key" : "key"
                } ],
                "fields" : [ {
                  "default_real" : 5.637376656633329,
                  "default_integer" : 2147483647,
                  "offset" : 9606,
                  "deprecated" : true,
                  "documentation" : [ "documentation", "documentation" ],
                  "name" : "name",
                  "attributes" : [ {
                    "value" : "value",
                    "key" : "key"
                  }, {
                    "value" : "value",
                    "key" : "key"
                  } ],
                  "id" : 39500,
                  "type" : {
                    "index" : -1803530559
                  },
                  "required" : true,
                  "key" : true
                }, {
                  "default_real" : 5.637376656633329,
                  "default_integer" : 2147483647,
                  "offset" : 9606,
                  "deprecated" : true,
                  "documentation" : [ "documentation", "documentation" ],
                  "name" : "name",
                  "attributes" : [ {
                    "value" : "value",
                    "key" : "key"
                  }, {
                    "value" : "value",
                    "key" : "key"
                  } ],
                  "id" : 39500,
                  "type" : {
                    "index" : -1803530559
                  },
                  "required" : true,
                  "key" : true
                } ],
                "minalign" : -1158723813
              },
              "response" : {
                "is_struct" : true,
                "bytesize" : 885365090,
                "documentation" : [ "documentation", "documentation" ],
                "name" : "name",
                "attributes" : [ {
                  "value" : "value",
                  "key" : "key"
                }, {
                  "value" : "value",
                  "key" : "key"
                } ],
                "fields" : [ {
                  "default_real" : 5.637376656633329,
                  "default_integer" : 2147483647,
                  "offset" : 9606,
                  "deprecated" : true,
                  "documentation" : [ "documentation", "documentation" ],
                  "name" : "name",
                  "attributes" : [ {
                    "value" : "value",
                    "key" : "key"
                  }, {
                    "value" : "value",
                    "key" : "key"
                  } ],
                  "id" : 39500,
                  "type" : {
                    "index" : -1803530559
                  },
                  "required" : true,
                  "key" : true
                }, {
                  "default_real" : 5.637376656633329,
                  "default_integer" : 2147483647,
                  "offset" : 9606,
                  "deprecated" : true,
                  "documentation" : [ "documentation", "documentation" ],
                  "name" : "name",
                  "attributes" : [ {
                    "value" : "value",
                    "key" : "key"
                  }, {
                    "value" : "value",
                    "key" : "key"
                  } ],
                  "id" : 39500,
                  "type" : {
                    "index" : -1803530559
                  },
                  "required" : true,
                  "key" : true
                } ],
                "minalign" : -1158723813
              },
              "documentation" : [ "documentation", "documentation" ],
              "name" : "name",
              "attributes" : [ {
                "value" : "value",
                "key" : "key"
              }, {
                "value" : "value",
                "key" : "key"
              } ]
            }, {
              "request" : {
                "is_struct" : true,
                "bytesize" : 885365090,
                "documentation" : [ "documentation", "documentation" ],
                "name" : "name",
                "attributes" : [ {
                  "value" : "value",
                  "key" : "key"
                }, {
                  "value" : "value",
                  "key" : "key"
                } ],
                "fields" : [ {
                  "default_real" : 5.637376656633329,
                  "default_integer" : 2147483647,
                  "offset" : 9606,
                  "deprecated" : true,
                  "documentation" : [ "documentation", "documentation" ],
                  "name" : "name",
                  "attributes" : [ {
                    "value" : "value",
                    "key" : "key"
                  }, {
                    "value" : "value",
                    "key" : "key"
                  } ],
                  "id" : 39500,
                  "type" : {
                    "index" : -1803530559
                  },
                  "required" : true,
                  "key" : true
                }, {
                  "default_real" : 5.637376656633329,
                  "default_integer" : 2147483647,
                  "offset" : 9606,
                  "deprecated" : true,
                  "documentation" : [ "documentation", "documentation" ],
                  "name" : "name",
                  "attributes" : [ {
                    "value" : "value",
                    "key" : "key"
                  }, {
                    "value" : "value",
                    "key" : "key"
                  } ],
                  "id" : 39500,
                  "type" : {
                    "index" : -1803530559
                  },
                  "required" : true,
                  "key" : true
                } ],
                "minalign" : -1158723813
              },
              "response" : {
                "is_struct" : true,
                "bytesize" : 885365090,
                "documentation" : [ "documentation", "documentation" ],
                "name" : "name",
                "attributes" : [ {
                  "value" : "value",
                  "key" : "key"
                }, {
                  "value" : "value",
                  "key" : "key"
                } ],
                "fields" : [ {
                  "default_real" : 5.637376656633329,
                  "default_integer" : 2147483647,
                  "offset" : 9606,
                  "deprecated" : true,
                  "documentation" : [ "documentation", "documentation" ],
                  "name" : "name",
                  "attributes" : [ {
                    "value" : "value",
                    "key" : "key"
                  }, {
                    "value" : "value",
                    "key" : "key"
                  } ],
                  "id" : 39500,
                  "type" : {
                    "index" : -1803530559
                  },
                  "required" : true,
                  "key" : true
                }, {
                  "default_real" : 5.637376656633329,
                  "default_integer" : 2147483647,
                  "offset" : 9606,
                  "deprecated" : true,
                  "documentation" : [ "documentation", "documentation" ],
                  "name" : "name",
                  "attributes" : [ {
                    "value" : "value",
                    "key" : "key"
                  }, {
                    "value" : "value",
                    "key" : "key"
                  } ],
                  "id" : 39500,
                  "type" : {
                    "index" : -1803530559
                  },
                  "required" : true,
                  "key" : true
                } ],
                "minalign" : -1158723813
              },
              "documentation" : [ "documentation", "documentation" ],
              "name" : "name",
              "attributes" : [ {
                "value" : "value",
                "key" : "key"
              }, {
                "value" : "value",
                "key" : "key"
              } ]
            } ],
            "documentation" : [ "documentation", "documentation" ],
            "name" : "name",
            "attributes" : [ {
              "value" : "value",
              "key" : "key"
            }, {
              "value" : "value",
              "key" : "key"
            } ]
          } ]
        },
        "properties" : {
          "objects" : {
            "items" : {
              "$ref" : "#/components/schemas/reflection_Object"
            },
            "type" : "array"
          },
          "enums" : {
            "items" : {
              "$ref" : "#/components/schemas/reflection_Enum"
            },
            "type" : "array"
          },
          "file_ident" : {
            "type" : "string"
          },
          "file_ext" : {
            "type" : "string"
          },
          "root_table" : {
            "$ref" : "#/components/schemas/reflection_Object"
          },
          "services" : {
            "items" : {
              "$ref" : "#/components/schemas/reflection_Service"
            },
            "type" : "array"
          }
        },
        "required" : [ "enums", "objects" ],
        "type" : "object"
      },
      "RemoteConfig" : {
        "example" : {
          "type" : "object",
          "value" : {
            "address" : "tcp://boschrexroth:boschrexroth@127.0.0.1:2069",
            "name" : "myremote"
          }
        },
        "properties" : {
          "type" : {
            "description" : "Type of the returned value",
            "example" : "object",
            "type" : "string"
          },
          "value" : {
            "$ref" : "#/components/schemas/comm_datalayer_remote_ConfigItem"
          }
        },
        "required" : [ "type", "value" ],
        "type" : "object"
      },
      "metadata" : {
        "description" : "Describes the contents of the node data",
        "properties" : {
          "nodeClass" : {
            "$ref" : "#/components/schemas/NodeClass"
          },
          "operations" : {
            "$ref" : "#/components/schemas/AllowedOperations"
          },
          "description" : {
            "type" : "string"
          },
          "descriptionUrl" : {
            "type" : "string"
          },
          "displayName" : {
            "type" : "string"
          },
          "displayFormat" : {
            "type" : "string"
          },
          "unit" : {
            "type" : "string"
          },
          "extensions" : {
            "items" : {
              "$ref" : "#/components/schemas/Extension"
            },
            "type" : "array"
          },
          "references" : {
            "items" : {
              "$ref" : "#/components/schemas/Reference"
            },
            "type" : "array"
          }
        },
        "required" : [ "description", "descriptionUrl", "nodeClass", "operations" ]
      },
      "NodeClass" : {
        "description" : "Classification of the node",
        "enum" : [ "Resource", "Method", "Type" ],
        "type" : "string"
      },
      "AllowedOperations" : {
        "description" : "List of available operations",
        "properties" : {
          "read" : {
            "description" : "Node can be read",
            "type" : "boolean"
          },
          "write" : {
            "description" : "Node can be written",
            "type" : "boolean"
          },
          "create" : {
            "description" : "Node can be created",
            "type" : "boolean"
          },
          "delete" : {
            "description" : "Node can be deleted",
            "type" : "boolean"
          },
          "browse" : {
            "description" : "Node can be browsed",
            "type" : "boolean"
          }
        },
        "required" : [ "browse", "create", "delete", "read", "write" ],
        "type" : "object"
      },
      "Extension" : {
        "description" : "MetaData Extension",
        "properties" : {
          "key" : {
            "type" : "string"
          },
          "value" : {
            "type" : "string"
          }
        },
        "required" : [ "key", "value" ],
        "type" : "object"
      },
      "Reference" : {
        "description" : "References to the other nodes in the datalayer tree",
        "properties" : {
          "type" : {
            "type" : "string"
          },
          "targetAddress" : {
            "type" : "string"
          }
        },
        "required" : [ "targetAddress", "type" ],
        "type" : "object"
      },
      "retainstats" : {
        "description" : "Retain Data Statitics",
        "example" : {
          "lastUsed" : 988759834,
          "total" : 343953088,
          "used" : 629561881,
          "free" : 2147483647,
          "biggestFree" : 2147483647,
          "syncCounter" : 2147483647,
          "info" : "emulated"
        },
        "properties" : {
          "total" : {
            "description" : "total size of memory in bytes",
            "format" : "int32",
            "maximum" : 4294967295,
            "minimum" : 0,
            "type" : "integer"
          },
          "free" : {
            "description" : "free size of memory in bytes",
            "format" : "int32",
            "maximum" : 4294967295,
            "minimum" : 0,
            "type" : "integer"
          },
          "used" : {
            "description" : "used size of memory in bytes",
            "format" : "int32",
            "maximum" : 4294967295,
            "minimum" : 0,
            "type" : "integer"
          },
          "biggestFree" : {
            "description" : "biggest free chunk of memory in bytes",
            "format" : "int32",
            "maximum" : 4294967295,
            "minimum" : 0,
            "type" : "integer"
          },
          "syncCounter" : {
            "description" : "now often was the nvram synced",
            "format" : "int32",
            "maximum" : 4294967295,
            "minimum" : 0,
            "type" : "integer"
          },
          "lastUsed" : {
            "description" : "last used offset",
            "format" : "int32",
            "maximum" : 4294967295,
            "minimum" : 0,
            "type" : "integer"
          },
          "info" : {
            "description" : "debug information of shared memory",
            "example" : "emulated",
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "MemoryValue" : {
        "description" : "Memory Object",
        "example" : {
          "id" : "id",
          "sizeBytes" : 343953088
        },
        "properties" : {
          "type" : {
            "$ref" : "#/components/schemas/MemoryType"
          },
          "id" : {
            "description" : "Identification of memory area",
            "type" : "string"
          },
          "sizeBytes" : {
            "description" : "Size in bytes of memory area",
            "format" : "int32",
            "maximum" : 4294967295,
            "minimum" : 0,
            "type" : "integer"
          }
        },
        "type" : "object"
      },
      "MemoryType" : {
        "description" : "Type of memory",
        "enum" : [ "Unknown", "Input", "Output", "SharedRetain", "Shared" ],
        "type" : "string"
      },
      "String" : {
        "description" : "JSON serialized string object.",
        "example" : {
          "type" : "string",
          "value" : "value"
        },
        "properties" : {
          "type" : {
            "description" : "The type of the returned value",
            "example" : "string",
            "type" : "string"
          },
          "value" : {
            "description" : "Value of the node",
            "type" : "string"
          }
        },
        "required" : [ "type", "value" ],
        "type" : "object"
      },
      "ARString" : {
        "description" : "JSON serialized string object.",
        "example" : {
          "type" : "arstring",
          "value" : [ "value", "value" ]
        },
        "properties" : {
          "type" : {
            "description" : "The type of the returned value",
            "example" : "arstring",
            "type" : "string"
          },
          "value" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        },
        "required" : [ "type", "value" ],
        "type" : "object"
      },
      "UInt32" : {
        "description" : "JSON serialized uint32 object.",
        "example" : {
          "type" : "uint32",
          "value" : 343953088
        },
        "properties" : {
          "type" : {
            "description" : "The type of the returned value",
            "example" : "uint32",
            "type" : "string"
          },
          "value" : {
            "description" : "Value of the node",
            "format" : "int32",
            "maximum" : 4294967295,
            "minimum" : 0,
            "type" : "integer"
          }
        },
        "required" : [ "type", "value" ],
        "type" : "object"
      },
      "subscriptionsettings" : {
        "description" : "Global Subscription Settings. Subscriptions",
        "example" : {
          "minimumSampleInterval" : 2147483647,
          "maximumBufferSize" : 629561881,
          "minimumErrorInterval" : 2147483647,
          "minimumPublishInterval" : 343953088
        },
        "properties" : {
          "minimumPublishInterval" : {
            "description" : "minimum publish interval in milliseconds",
            "format" : "int32",
            "maximum" : 4294967295,
            "minimum" : 0,
            "type" : "integer"
          },
          "minimumSampleInterval" : {
            "description" : "minimum sampling interval in microseconds",
            "format" : "int32",
            "maximum" : 4294967295,
            "minimum" : 0,
            "type" : "integer"
          },
          "maximumBufferSize" : {
            "description" : "maximum size of buffer",
            "format" : "int32",
            "maximum" : 4294967295,
            "minimum" : 0,
            "type" : "integer"
          },
          "minimumErrorInterval" : {
            "description" : "minimum error interval",
            "format" : "int32",
            "maximum" : 4294967295,
            "minimum" : 0,
            "type" : "integer"
          }
        },
        "type" : "object"
      },
      "comm_datalayer_SubscriptionProperties" : {
        "example" : {
          "keepaliveInterval" : 343953088,
          "rules" : [ {
            "rule" : ""
          }, {
            "rule" : ""
          } ],
          "id" : "subID",
          "publishInterval" : 2147483647,
          "errorInterval" : 629561881
        },
        "properties" : {
          "id" : {
            "description" : "User identification for subscribtion. Use it update and dispose the old subscription",
            "example" : "subID",
            "type" : "string"
          },
          "keepaliveInterval" : {
            "default" : 60000,
            "description" : "keepalive in milli seconds for subscription time in seconds the subscriptions",
            "maximum" : 4294967295,
            "minimum" : 0,
            "type" : "integer"
          },
          "publishInterval" : {
            "default" : 1000,
            "description" : "time in milli seconds for upper limit of publish messages to not get flooded with new messages",
            "maximum" : 4294967295,
            "minimum" : 0,
            "type" : "integer"
          },
          "rules" : {
            "description" : "Additional rules for subscription",
            "items" : {
              "$ref" : "#/components/schemas/comm_datalayer_Property"
            },
            "type" : "array"
          },
          "errorInterval" : {
            "default" : 10000,
            "description" : "time in milli seconds to re-read data if an error was received for a node",
            "maximum" : 4294967295,
            "minimum" : 0,
            "type" : "integer"
          }
        },
        "required" : [ "id" ],
        "type" : "object"
      },
      "comm_datalayer_Property" : {
        "additionalProperties" : false,
        "example" : {
          "rule" : ""
        },
        "properties" : {
          "rule_type" : {
            "$ref" : "#/components/schemas/comm_datalayer_Properties"
          },
          "rule" : {
            "anyOf" : [ {
              "$ref" : "#/components/schemas/comm_datalayer_Sampling"
            }, {
              "$ref" : "#/components/schemas/comm_datalayer_Queueing"
            }, {
              "$ref" : "#/components/schemas/comm_datalayer_DataChangeFilter"
            }, {
              "$ref" : "#/components/schemas/comm_datalayer_ChangeEvents"
            }, {
              "$ref" : "#/components/schemas/comm_datalayer_Counting"
            } ]
          }
        },
        "type" : "object"
      },
      "comm_datalayer_Properties" : {
        "enum" : [ "Sampling", "Queueing", "DataChangeFilter", "ChangeEvents", "Counting" ],
        "type" : "string"
      },
      "comm_datalayer_Sampling" : {
        "additionalProperties" : false,
        "properties" : {
          "samplingInterval" : {
            "default" : 1000000,
            "description" : "sample time in µ seconds for minimum sampling of data - currently only multiples of 1000 are supported",
            "maximum" : 18446744073709552000,
            "minimum" : 0,
            "type" : "integer"
          }
        },
        "type" : "object"
      },
      "comm_datalayer_Queueing" : {
        "additionalProperties" : false,
        "properties" : {
          "queueSize" : {
            "default" : 10,
            "description" : "size of buffer",
            "maximum" : 4294967295,
            "minimum" : 0,
            "type" : "integer"
          },
          "behaviour" : {
            "$ref" : "#/components/schemas/comm_datalayer_QueueBehaviour"
          }
        },
        "type" : "object"
      },
      "comm_datalayer_QueueBehaviour" : {
        "description" : "The queing strategy. Decided what data should be sent or disarded when the queue runs full before it could be sent.",
        "enum" : [ "DiscardOldest", "DiscardNewest" ],
        "type" : "string"
      },
      "comm_datalayer_DataChangeFilter" : {
        "additionalProperties" : false,
        "properties" : {
          "deadBandValue" : {
            "example" : 1.0,
            "type" : "number"
          }
        },
        "type" : "object"
      },
      "comm_datalayer_ChangeEvents" : {
        "additionalProperties" : false,
        "properties" : {
          "valueChange" : {
            "$ref" : "#/components/schemas/comm_datalayer_DataChangeTrigger"
          },
          "browselistChange" : {
            "type" : "boolean"
          },
          "metadataChange" : {
            "type" : "boolean"
          }
        },
        "type" : "object"
      },
      "comm_datalayer_DataChangeTrigger" : {
        "enum" : [ "Status", "StatusValue", "StatusValueTimestamp" ],
        "type" : "string"
      },
      "comm_datalayer_Counting" : {
        "additionalProperties" : false,
        "properties" : {
          "countSubscriptions" : {
            "type" : "boolean"
          }
        },
        "type" : "object"
      },
      "comm_datalayer_SubscriptionData" : {
        "additionalProperties" : false,
        "example" : {
          "nodes" : [ "nodes", "nodes" ],
          "properties" : {
            "keepaliveInterval" : 343953088,
            "rules" : [ {
              "rule" : ""
            }, {
              "rule" : ""
            } ],
            "id" : "subID",
            "publishInterval" : 2147483647,
            "errorInterval" : 629561881
          }
        },
        "properties" : {
          "properties" : {
            "$ref" : "#/components/schemas/comm_datalayer_SubscriptionProperties"
          },
          "nodes" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        },
        "type" : "object"
      },
      "SSE_EventData" : {
        "description" : "Event data",
        "properties" : {
          "node" : {
            "description" : "Node address of event item",
            "type" : "string"
          },
          "type" : {
            "description" : "type of value (basetype or \"object\")",
            "type" : "string"
          },
          "schema" : {
            "description" : "reference to flatbuffer type in datalayer (only if type is \"object\")",
            "type" : "string"
          },
          "value" : {
            "description" : "value of the node",
            "type" : "string"
          },
          "timestamp" : {
            "description" : "Timestamp as Filetime",
            "type" : "number"
          }
        },
        "required" : [ "event", "node", "timestamp", "value" ],
        "type" : "object",
        "x-version" : "1.0.0"
      },
      "comm_datalayer_ServerSettings" : {
        "example" : {
          "serverWaitResponseTimeout" : 2147483647,
          "serverIdlePingTimeout" : 343953088
        },
        "properties" : {
          "serverIdlePingTimeout" : {
            "default" : 30000,
            "description" : "after this time send a ping to not used provider is send to test if provider is still alive",
            "maximum" : 4294967295,
            "minimum" : 0,
            "type" : "integer"
          },
          "serverWaitResponseTimeout" : {
            "default" : 3000,
            "description" : "after this time a response from provider is expected - if there is no answer a provider is assumed to be dead --> kick provider out of routing",
            "maximum" : 4294967295,
            "type" : "integer"
          }
        },
        "type" : "object"
      },
      "reflection_Schema" : {
        "additionalProperties" : false,
        "example" : {
          "enums" : [ {
            "is_union" : true,
            "values" : [ {
              "union_type" : {
                "index" : -1803530559
              },
              "documentation" : [ "documentation", "documentation" ],
              "name" : "name",
              "value" : 2147483647,
              "object" : {
                "is_struct" : true,
                "bytesize" : 885365090,
                "documentation" : [ "documentation", "documentation" ],
                "name" : "name",
                "attributes" : [ {
                  "value" : "value",
                  "key" : "key"
                }, {
                  "value" : "value",
                  "key" : "key"
                } ],
                "fields" : [ {
                  "default_real" : 5.637376656633329,
                  "default_integer" : 2147483647,
                  "offset" : 9606,
                  "deprecated" : true,
                  "documentation" : [ "documentation", "documentation" ],
                  "name" : "name",
                  "attributes" : [ {
                    "value" : "value",
                    "key" : "key"
                  }, {
                    "value" : "value",
                    "key" : "key"
                  } ],
                  "id" : 39500,
                  "type" : {
                    "index" : -1803530559
                  },
                  "required" : true,
                  "key" : true
                }, {
                  "default_real" : 5.637376656633329,
                  "default_integer" : 2147483647,
                  "offset" : 9606,
                  "deprecated" : true,
                  "documentation" : [ "documentation", "documentation" ],
                  "name" : "name",
                  "attributes" : [ {
                    "value" : "value",
                    "key" : "key"
                  }, {
                    "value" : "value",
                    "key" : "key"
                  } ],
                  "id" : 39500,
                  "type" : {
                    "index" : -1803530559
                  },
                  "required" : true,
                  "key" : true
                } ],
                "minalign" : -1158723813
              }
            }, {
              "union_type" : {
                "index" : -1803530559
              },
              "documentation" : [ "documentation", "documentation" ],
              "name" : "name",
              "value" : 2147483647,
              "object" : {
                "is_struct" : true,
                "bytesize" : 885365090,
                "documentation" : [ "documentation", "documentation" ],
                "name" : "name",
                "attributes" : [ {
                  "value" : "value",
                  "key" : "key"
                }, {
                  "value" : "value",
                  "key" : "key"
                } ],
                "fields" : [ {
                  "default_real" : 5.637376656633329,
                  "default_integer" : 2147483647,
                  "offset" : 9606,
                  "deprecated" : true,
                  "documentation" : [ "documentation", "documentation" ],
                  "name" : "name",
                  "attributes" : [ {
                    "value" : "value",
                    "key" : "key"
                  }, {
                    "value" : "value",
                    "key" : "key"
                  } ],
                  "id" : 39500,
                  "type" : {
                    "index" : -1803530559
                  },
                  "required" : true,
                  "key" : true
                }, {
                  "default_real" : 5.637376656633329,
                  "default_integer" : 2147483647,
                  "offset" : 9606,
                  "deprecated" : true,
                  "documentation" : [ "documentation", "documentation" ],
                  "name" : "name",
                  "attributes" : [ {
                    "value" : "value",
                    "key" : "key"
                  }, {
                    "value" : "value",
                    "key" : "key"
                  } ],
                  "id" : 39500,
                  "type" : {
                    "index" : -1803530559
                  },
                  "required" : true,
                  "key" : true
                } ],
                "minalign" : -1158723813
              }
            } ],
            "documentation" : [ "documentation", "documentation" ],
            "name" : "name",
            "attributes" : [ {
              "value" : "value",
              "key" : "key"
            }, {
              "value" : "value",
              "key" : "key"
            } ],
            "underlying_type" : {
              "index" : -1803530559
            }
          }, {
            "is_union" : true,
            "values" : [ {
              "union_type" : {
                "index" : -1803530559
              },
              "documentation" : [ "documentation", "documentation" ],
              "name" : "name",
              "value" : 2147483647,
              "object" : {
                "is_struct" : true,
                "bytesize" : 885365090,
                "documentation" : [ "documentation", "documentation" ],
                "name" : "name",
                "attributes" : [ {
                  "value" : "value",
                  "key" : "key"
                }, {
                  "value" : "value",
                  "key" : "key"
                } ],
                "fields" : [ {
                  "default_real" : 5.637376656633329,
                  "default_integer" : 2147483647,
                  "offset" : 9606,
                  "deprecated" : true,
                  "documentation" : [ "documentation", "documentation" ],
                  "name" : "name",
                  "attributes" : [ {
                    "value" : "value",
                    "key" : "key"
                  }, {
                    "value" : "value",
                    "key" : "key"
                  } ],
                  "id" : 39500,
                  "type" : {
                    "index" : -1803530559
                  },
                  "required" : true,
                  "key" : true
                }, {
                  "default_real" : 5.637376656633329,
                  "default_integer" : 2147483647,
                  "offset" : 9606,
                  "deprecated" : true,
                  "documentation" : [ "documentation", "documentation" ],
                  "name" : "name",
                  "attributes" : [ {
                    "value" : "value",
                    "key" : "key"
                  }, {
                    "value" : "value",
                    "key" : "key"
                  } ],
                  "id" : 39500,
                  "type" : {
                    "index" : -1803530559
                  },
                  "required" : true,
                  "key" : true
                } ],
                "minalign" : -1158723813
              }
            }, {
              "union_type" : {
                "index" : -1803530559
              },
              "documentation" : [ "documentation", "documentation" ],
              "name" : "name",
              "value" : 2147483647,
              "object" : {
                "is_struct" : true,
                "bytesize" : 885365090,
                "documentation" : [ "documentation", "documentation" ],
                "name" : "name",
                "attributes" : [ {
                  "value" : "value",
                  "key" : "key"
                }, {
                  "value" : "value",
                  "key" : "key"
                } ],
                "fields" : [ {
                  "default_real" : 5.637376656633329,
                  "default_integer" : 2147483647,
                  "offset" : 9606,
                  "deprecated" : true,
                  "documentation" : [ "documentation", "documentation" ],
                  "name" : "name",
                  "attributes" : [ {
                    "value" : "value",
                    "key" : "key"
                  }, {
                    "value" : "value",
                    "key" : "key"
                  } ],
                  "id" : 39500,
                  "type" : {
                    "index" : -1803530559
                  },
                  "required" : true,
                  "key" : true
                }, {
                  "default_real" : 5.637376656633329,
                  "default_integer" : 2147483647,
                  "offset" : 9606,
                  "deprecated" : true,
                  "documentation" : [ "documentation", "documentation" ],
                  "name" : "name",
                  "attributes" : [ {
                    "value" : "value",
                    "key" : "key"
                  }, {
                    "value" : "value",
                    "key" : "key"
                  } ],
                  "id" : 39500,
                  "type" : {
                    "index" : -1803530559
                  },
                  "required" : true,
                  "key" : true
                } ],
                "minalign" : -1158723813
              }
            } ],
            "documentation" : [ "documentation", "documentation" ],
            "name" : "name",
            "attributes" : [ {
              "value" : "value",
              "key" : "key"
            }, {
              "value" : "value",
              "key" : "key"
            } ],
            "underlying_type" : {
              "index" : -1803530559
            }
          } ],
          "file_ext" : "file_ext",
          "root_table" : {
            "is_struct" : true,
            "bytesize" : 885365090,
            "documentation" : [ "documentation", "documentation" ],
            "name" : "name",
            "attributes" : [ {
              "value" : "value",
              "key" : "key"
            }, {
              "value" : "value",
              "key" : "key"
            } ],
            "fields" : [ {
              "default_real" : 5.637376656633329,
              "default_integer" : 2147483647,
              "offset" : 9606,
              "deprecated" : true,
              "documentation" : [ "documentation", "documentation" ],
              "name" : "name",
              "attributes" : [ {
                "value" : "value",
                "key" : "key"
              }, {
                "value" : "value",
                "key" : "key"
              } ],
              "id" : 39500,
              "type" : {
                "index" : -1803530559
              },
              "required" : true,
              "key" : true
            }, {
              "default_real" : 5.637376656633329,
              "default_integer" : 2147483647,
              "offset" : 9606,
              "deprecated" : true,
              "documentation" : [ "documentation", "documentation" ],
              "name" : "name",
              "attributes" : [ {
                "value" : "value",
                "key" : "key"
              }, {
                "value" : "value",
                "key" : "key"
              } ],
              "id" : 39500,
              "type" : {
                "index" : -1803530559
              },
              "required" : true,
              "key" : true
            } ],
            "minalign" : -1158723813
          },
          "file_ident" : "file_ident",
          "objects" : [ {
            "is_struct" : true,
            "bytesize" : 885365090,
            "documentation" : [ "documentation", "documentation" ],
            "name" : "name",
            "attributes" : [ {
              "value" : "value",
              "key" : "key"
            }, {
              "value" : "value",
              "key" : "key"
            } ],
            "fields" : [ {
              "default_real" : 5.637376656633329,
              "default_integer" : 2147483647,
              "offset" : 9606,
              "deprecated" : true,
              "documentation" : [ "documentation", "documentation" ],
              "name" : "name",
              "attributes" : [ {
                "value" : "value",
                "key" : "key"
              }, {
                "value" : "value",
                "key" : "key"
              } ],
              "id" : 39500,
              "type" : {
                "index" : -1803530559
              },
              "required" : true,
              "key" : true
            }, {
              "default_real" : 5.637376656633329,
              "default_integer" : 2147483647,
              "offset" : 9606,
              "deprecated" : true,
              "documentation" : [ "documentation", "documentation" ],
              "name" : "name",
              "attributes" : [ {
                "value" : "value",
                "key" : "key"
              }, {
                "value" : "value",
                "key" : "key"
              } ],
              "id" : 39500,
              "type" : {
                "index" : -1803530559
              },
              "required" : true,
              "key" : true
            } ],
            "minalign" : -1158723813
          }, {
            "is_struct" : true,
            "bytesize" : 885365090,
            "documentation" : [ "documentation", "documentation" ],
            "name" : "name",
            "attributes" : [ {
              "value" : "value",
              "key" : "key"
            }, {
              "value" : "value",
              "key" : "key"
            } ],
            "fields" : [ {
              "default_real" : 5.637376656633329,
              "default_integer" : 2147483647,
              "offset" : 9606,
              "deprecated" : true,
              "documentation" : [ "documentation", "documentation" ],
              "name" : "name",
              "attributes" : [ {
                "value" : "value",
                "key" : "key"
              }, {
                "value" : "value",
                "key" : "key"
              } ],
              "id" : 39500,
              "type" : {
                "index" : -1803530559
              },
              "required" : true,
              "key" : true
            }, {
              "default_real" : 5.637376656633329,
              "default_integer" : 2147483647,
              "offset" : 9606,
              "deprecated" : true,
              "documentation" : [ "documentation", "documentation" ],
              "name" : "name",
              "attributes" : [ {
                "value" : "value",
                "key" : "key"
              }, {
                "value" : "value",
                "key" : "key"
              } ],
              "id" : 39500,
              "type" : {
                "index" : -1803530559
              },
              "required" : true,
              "key" : true
            } ],
            "minalign" : -1158723813
          } ],
          "services" : [ {
            "calls" : [ {
              "request" : {
                "is_struct" : true,
                "bytesize" : 885365090,
                "documentation" : [ "documentation", "documentation" ],
                "name" : "name",
                "attributes" : [ {
                  "value" : "value",
                  "key" : "key"
                }, {
                  "value" : "value",
                  "key" : "key"
                } ],
                "fields" : [ {
                  "default_real" : 5.637376656633329,
                  "default_integer" : 2147483647,
                  "offset" : 9606,
                  "deprecated" : true,
                  "documentation" : [ "documentation", "documentation" ],
                  "name" : "name",
                  "attributes" : [ {
                    "value" : "value",
                    "key" : "key"
                  }, {
                    "value" : "value",
                    "key" : "key"
                  } ],
                  "id" : 39500,
                  "type" : {
                    "index" : -1803530559
                  },
                  "required" : true,
                  "key" : true
                }, {
                  "default_real" : 5.637376656633329,
                  "default_integer" : 2147483647,
                  "offset" : 9606,
                  "deprecated" : true,
                  "documentation" : [ "documentation", "documentation" ],
                  "name" : "name",
                  "attributes" : [ {
                    "value" : "value",
                    "key" : "key"
                  }, {
                    "value" : "value",
                    "key" : "key"
                  } ],
                  "id" : 39500,
                  "type" : {
                    "index" : -1803530559
                  },
                  "required" : true,
                  "key" : true
                } ],
                "minalign" : -1158723813
              },
              "response" : {
                "is_struct" : true,
                "bytesize" : 885365090,
                "documentation" : [ "documentation", "documentation" ],
                "name" : "name",
                "attributes" : [ {
                  "value" : "value",
                  "key" : "key"
                }, {
                  "value" : "value",
                  "key" : "key"
                } ],
                "fields" : [ {
                  "default_real" : 5.637376656633329,
                  "default_integer" : 2147483647,
                  "offset" : 9606,
                  "deprecated" : true,
                  "documentation" : [ "documentation", "documentation" ],
                  "name" : "name",
                  "attributes" : [ {
                    "value" : "value",
                    "key" : "key"
                  }, {
                    "value" : "value",
                    "key" : "key"
                  } ],
                  "id" : 39500,
                  "type" : {
                    "index" : -1803530559
                  },
                  "required" : true,
                  "key" : true
                }, {
                  "default_real" : 5.637376656633329,
                  "default_integer" : 2147483647,
                  "offset" : 9606,
                  "deprecated" : true,
                  "documentation" : [ "documentation", "documentation" ],
                  "name" : "name",
                  "attributes" : [ {
                    "value" : "value",
                    "key" : "key"
                  }, {
                    "value" : "value",
                    "key" : "key"
                  } ],
                  "id" : 39500,
                  "type" : {
                    "index" : -1803530559
                  },
                  "required" : true,
                  "key" : true
                } ],
                "minalign" : -1158723813
              },
              "documentation" : [ "documentation", "documentation" ],
              "name" : "name",
              "attributes" : [ {
                "value" : "value",
                "key" : "key"
              }, {
                "value" : "value",
                "key" : "key"
              } ]
            }, {
              "request" : {
                "is_struct" : true,
                "bytesize" : 885365090,
                "documentation" : [ "documentation", "documentation" ],
                "name" : "name",
                "attributes" : [ {
                  "value" : "value",
                  "key" : "key"
                }, {
                  "value" : "value",
                  "key" : "key"
                } ],
                "fields" : [ {
                  "default_real" : 5.637376656633329,
                  "default_integer" : 2147483647,
                  "offset" : 9606,
                  "deprecated" : true,
                  "documentation" : [ "documentation", "documentation" ],
                  "name" : "name",
                  "attributes" : [ {
                    "value" : "value",
                    "key" : "key"
                  }, {
                    "value" : "value",
                    "key" : "key"
                  } ],
                  "id" : 39500,
                  "type" : {
                    "index" : -1803530559
                  },
                  "required" : true,
                  "key" : true
                }, {
                  "default_real" : 5.637376656633329,
                  "default_integer" : 2147483647,
                  "offset" : 9606,
                  "deprecated" : true,
                  "documentation" : [ "documentation", "documentation" ],
                  "name" : "name",
                  "attributes" : [ {
                    "value" : "value",
                    "key" : "key"
                  }, {
                    "value" : "value",
                    "key" : "key"
                  } ],
                  "id" : 39500,
                  "type" : {
                    "index" : -1803530559
                  },
                  "required" : true,
                  "key" : true
                } ],
                "minalign" : -1158723813
              },
              "response" : {
                "is_struct" : true,
                "bytesize" : 885365090,
                "documentation" : [ "documentation", "documentation" ],
                "name" : "name",
                "attributes" : [ {
                  "value" : "value",
                  "key" : "key"
                }, {
                  "value" : "value",
                  "key" : "key"
                } ],
                "fields" : [ {
                  "default_real" : 5.637376656633329,
                  "default_integer" : 2147483647,
                  "offset" : 9606,
                  "deprecated" : true,
                  "documentation" : [ "documentation", "documentation" ],
                  "name" : "name",
                  "attributes" : [ {
                    "value" : "value",
                    "key" : "key"
                  }, {
                    "value" : "value",
                    "key" : "key"
                  } ],
                  "id" : 39500,
                  "type" : {
                    "index" : -1803530559
                  },
                  "required" : true,
                  "key" : true
                }, {
                  "default_real" : 5.637376656633329,
                  "default_integer" : 2147483647,
                  "offset" : 9606,
                  "deprecated" : true,
                  "documentation" : [ "documentation", "documentation" ],
                  "name" : "name",
                  "attributes" : [ {
                    "value" : "value",
                    "key" : "key"
                  }, {
                    "value" : "value",
                    "key" : "key"
                  } ],
                  "id" : 39500,
                  "type" : {
                    "index" : -1803530559
                  },
                  "required" : true,
                  "key" : true
                } ],
                "minalign" : -1158723813
              },
              "documentation" : [ "documentation", "documentation" ],
              "name" : "name",
              "attributes" : [ {
                "value" : "value",
                "key" : "key"
              }, {
                "value" : "value",
                "key" : "key"
              } ]
            } ],
            "documentation" : [ "documentation", "documentation" ],
            "name" : "name",
            "attributes" : [ {
              "value" : "value",
              "key" : "key"
            }, {
              "value" : "value",
              "key" : "key"
            } ]
          }, {
            "calls" : [ {
              "request" : {
                "is_struct" : true,
                "bytesize" : 885365090,
                "documentation" : [ "documentation", "documentation" ],
                "name" : "name",
                "attributes" : [ {
                  "value" : "value",
                  "key" : "key"
                }, {
                  "value" : "value",
                  "key" : "key"
                } ],
                "fields" : [ {
                  "default_real" : 5.637376656633329,
                  "default_integer" : 2147483647,
                  "offset" : 9606,
                  "deprecated" : true,
                  "documentation" : [ "documentation", "documentation" ],
                  "name" : "name",
                  "attributes" : [ {
                    "value" : "value",
                    "key" : "key"
                  }, {
                    "value" : "value",
                    "key" : "key"
                  } ],
                  "id" : 39500,
                  "type" : {
                    "index" : -1803530559
                  },
                  "required" : true,
                  "key" : true
                }, {
                  "default_real" : 5.637376656633329,
                  "default_integer" : 2147483647,
                  "offset" : 9606,
                  "deprecated" : true,
                  "documentation" : [ "documentation", "documentation" ],
                  "name" : "name",
                  "attributes" : [ {
                    "value" : "value",
                    "key" : "key"
                  }, {
                    "value" : "value",
                    "key" : "key"
                  } ],
                  "id" : 39500,
                  "type" : {
                    "index" : -1803530559
                  },
                  "required" : true,
                  "key" : true
                } ],
                "minalign" : -1158723813
              },
              "response" : {
                "is_struct" : true,
                "bytesize" : 885365090,
                "documentation" : [ "documentation", "documentation" ],
                "name" : "name",
                "attributes" : [ {
                  "value" : "value",
                  "key" : "key"
                }, {
                  "value" : "value",
                  "key" : "key"
                } ],
                "fields" : [ {
                  "default_real" : 5.637376656633329,
                  "default_integer" : 2147483647,
                  "offset" : 9606,
                  "deprecated" : true,
                  "documentation" : [ "documentation", "documentation" ],
                  "name" : "name",
                  "attributes" : [ {
                    "value" : "value",
                    "key" : "key"
                  }, {
                    "value" : "value",
                    "key" : "key"
                  } ],
                  "id" : 39500,
                  "type" : {
                    "index" : -1803530559
                  },
                  "required" : true,
                  "key" : true
                }, {
                  "default_real" : 5.637376656633329,
                  "default_integer" : 2147483647,
                  "offset" : 9606,
                  "deprecated" : true,
                  "documentation" : [ "documentation", "documentation" ],
                  "name" : "name",
                  "attributes" : [ {
                    "value" : "value",
                    "key" : "key"
                  }, {
                    "value" : "value",
                    "key" : "key"
                  } ],
                  "id" : 39500,
                  "type" : {
                    "index" : -1803530559
                  },
                  "required" : true,
                  "key" : true
                } ],
                "minalign" : -1158723813
              },
              "documentation" : [ "documentation", "documentation" ],
              "name" : "name",
              "attributes" : [ {
                "value" : "value",
                "key" : "key"
              }, {
                "value" : "value",
                "key" : "key"
              } ]
            }, {
              "request" : {
                "is_struct" : true,
                "bytesize" : 885365090,
                "documentation" : [ "documentation", "documentation" ],
                "name" : "name",
                "attributes" : [ {
                  "value" : "value",
                  "key" : "key"
                }, {
                  "value" : "value",
                  "key" : "key"
                } ],
                "fields" : [ {
                  "default_real" : 5.637376656633329,
                  "default_integer" : 2147483647,
                  "offset" : 9606,
                  "deprecated" : true,
                  "documentation" : [ "documentation", "documentation" ],
                  "name" : "name",
                  "attributes" : [ {
                    "value" : "value",
                    "key" : "key"
                  }, {
                    "value" : "value",
                    "key" : "key"
                  } ],
                  "id" : 39500,
                  "type" : {
                    "index" : -1803530559
                  },
                  "required" : true,
                  "key" : true
                }, {
                  "default_real" : 5.637376656633329,
                  "default_integer" : 2147483647,
                  "offset" : 9606,
                  "deprecated" : true,
                  "documentation" : [ "documentation", "documentation" ],
                  "name" : "name",
                  "attributes" : [ {
                    "value" : "value",
                    "key" : "key"
                  }, {
                    "value" : "value",
                    "key" : "key"
                  } ],
                  "id" : 39500,
                  "type" : {
                    "index" : -1803530559
                  },
                  "required" : true,
                  "key" : true
                } ],
                "minalign" : -1158723813
              },
              "response" : {
                "is_struct" : true,
                "bytesize" : 885365090,
                "documentation" : [ "documentation", "documentation" ],
                "name" : "name",
                "attributes" : [ {
                  "value" : "value",
                  "key" : "key"
                }, {
                  "value" : "value",
                  "key" : "key"
                } ],
                "fields" : [ {
                  "default_real" : 5.637376656633329,
                  "default_integer" : 2147483647,
                  "offset" : 9606,
                  "deprecated" : true,
                  "documentation" : [ "documentation", "documentation" ],
                  "name" : "name",
                  "attributes" : [ {
                    "value" : "value",
                    "key" : "key"
                  }, {
                    "value" : "value",
                    "key" : "key"
                  } ],
                  "id" : 39500,
                  "type" : {
                    "index" : -1803530559
                  },
                  "required" : true,
                  "key" : true
                }, {
                  "default_real" : 5.637376656633329,
                  "default_integer" : 2147483647,
                  "offset" : 9606,
                  "deprecated" : true,
                  "documentation" : [ "documentation", "documentation" ],
                  "name" : "name",
                  "attributes" : [ {
                    "value" : "value",
                    "key" : "key"
                  }, {
                    "value" : "value",
                    "key" : "key"
                  } ],
                  "id" : 39500,
                  "type" : {
                    "index" : -1803530559
                  },
                  "required" : true,
                  "key" : true
                } ],
                "minalign" : -1158723813
              },
              "documentation" : [ "documentation", "documentation" ],
              "name" : "name",
              "attributes" : [ {
                "value" : "value",
                "key" : "key"
              }, {
                "value" : "value",
                "key" : "key"
              } ]
            } ],
            "documentation" : [ "documentation", "documentation" ],
            "name" : "name",
            "attributes" : [ {
              "value" : "value",
              "key" : "key"
            }, {
              "value" : "value",
              "key" : "key"
            } ]
          } ]
        },
        "properties" : {
          "objects" : {
            "items" : {
              "$ref" : "#/components/schemas/reflection_Object"
            },
            "type" : "array"
          },
          "enums" : {
            "items" : {
              "$ref" : "#/components/schemas/reflection_Enum"
            },
            "type" : "array"
          },
          "file_ident" : {
            "type" : "string"
          },
          "file_ext" : {
            "type" : "string"
          },
          "root_table" : {
            "$ref" : "#/components/schemas/reflection_Object"
          },
          "services" : {
            "items" : {
              "$ref" : "#/components/schemas/reflection_Service"
            },
            "type" : "array"
          }
        },
        "required" : [ "enums", "objects" ],
        "type" : "object"
      },
      "reflection_Object" : {
        "additionalProperties" : false,
        "example" : {
          "is_struct" : true,
          "bytesize" : 885365090,
          "documentation" : [ "documentation", "documentation" ],
          "name" : "name",
          "attributes" : [ {
            "value" : "value",
            "key" : "key"
          }, {
            "value" : "value",
            "key" : "key"
          } ],
          "fields" : [ {
            "default_real" : 5.637376656633329,
            "default_integer" : 2147483647,
            "offset" : 9606,
            "deprecated" : true,
            "documentation" : [ "documentation", "documentation" ],
            "name" : "name",
            "attributes" : [ {
              "value" : "value",
              "key" : "key"
            }, {
              "value" : "value",
              "key" : "key"
            } ],
            "id" : 39500,
            "type" : {
              "index" : -1803530559
            },
            "required" : true,
            "key" : true
          }, {
            "default_real" : 5.637376656633329,
            "default_integer" : 2147483647,
            "offset" : 9606,
            "deprecated" : true,
            "documentation" : [ "documentation", "documentation" ],
            "name" : "name",
            "attributes" : [ {
              "value" : "value",
              "key" : "key"
            }, {
              "value" : "value",
              "key" : "key"
            } ],
            "id" : 39500,
            "type" : {
              "index" : -1803530559
            },
            "required" : true,
            "key" : true
          } ],
          "minalign" : -1158723813
        },
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "fields" : {
            "items" : {
              "$ref" : "#/components/schemas/reflection_Field"
            },
            "type" : "array"
          },
          "is_struct" : {
            "type" : "boolean"
          },
          "minalign" : {
            "maximum" : 2147483647,
            "minimum" : -2147483648,
            "type" : "integer"
          },
          "bytesize" : {
            "maximum" : 2147483647,
            "minimum" : -2147483648,
            "type" : "integer"
          },
          "attributes" : {
            "items" : {
              "$ref" : "#/components/schemas/reflection_KeyValue"
            },
            "type" : "array"
          },
          "documentation" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        },
        "required" : [ "fields", "name" ],
        "type" : "object"
      },
      "reflection_Field" : {
        "additionalProperties" : false,
        "example" : {
          "default_real" : 5.637376656633329,
          "default_integer" : 2147483647,
          "offset" : 9606,
          "deprecated" : true,
          "documentation" : [ "documentation", "documentation" ],
          "name" : "name",
          "attributes" : [ {
            "value" : "value",
            "key" : "key"
          }, {
            "value" : "value",
            "key" : "key"
          } ],
          "id" : 39500,
          "type" : {
            "index" : -1803530559
          },
          "required" : true,
          "key" : true
        },
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "type" : {
            "$ref" : "#/components/schemas/reflection_Type"
          },
          "id" : {
            "maximum" : 65535,
            "minimum" : 0,
            "type" : "integer"
          },
          "offset" : {
            "maximum" : 65535,
            "minimum" : 0,
            "type" : "integer"
          },
          "default_integer" : {
            "maximum" : 9223372036854776000,
            "minimum" : -9223372036854776000,
            "type" : "integer"
          },
          "default_real" : {
            "type" : "number"
          },
          "deprecated" : {
            "type" : "boolean"
          },
          "required" : {
            "type" : "boolean"
          },
          "key" : {
            "type" : "boolean"
          },
          "attributes" : {
            "items" : {
              "$ref" : "#/components/schemas/reflection_KeyValue"
            },
            "type" : "array"
          },
          "documentation" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        },
        "required" : [ "name", "type" ],
        "type" : "object"
      },
      "reflection_Type" : {
        "additionalProperties" : false,
        "example" : {
          "index" : -1803530559
        },
        "properties" : {
          "base_type" : {
            "$ref" : "#/components/schemas/reflection_BaseType"
          },
          "element" : {
            "$ref" : "#/components/schemas/reflection_BaseType"
          },
          "index" : {
            "maximum" : 2147483647,
            "minimum" : -2147483648,
            "type" : "integer"
          }
        },
        "type" : "object"
      },
      "reflection_BaseType" : {
        "enum" : [ "None", "UType", "Bool", "Byte", "UByte", "Short", "UShort", "Int", "UInt", "Long", "ULong", "Float", "Double", "String", "Vector", "Obj", "Union" ],
        "type" : "string"
      },
      "reflection_KeyValue" : {
        "additionalProperties" : false,
        "example" : {
          "value" : "value",
          "key" : "key"
        },
        "properties" : {
          "key" : {
            "type" : "string"
          },
          "value" : {
            "type" : "string"
          }
        },
        "required" : [ "key" ],
        "type" : "object"
      },
      "reflection_Enum" : {
        "additionalProperties" : false,
        "example" : {
          "is_union" : true,
          "values" : [ {
            "union_type" : {
              "index" : -1803530559
            },
            "documentation" : [ "documentation", "documentation" ],
            "name" : "name",
            "value" : 2147483647,
            "object" : {
              "is_struct" : true,
              "bytesize" : 885365090,
              "documentation" : [ "documentation", "documentation" ],
              "name" : "name",
              "attributes" : [ {
                "value" : "value",
                "key" : "key"
              }, {
                "value" : "value",
                "key" : "key"
              } ],
              "fields" : [ {
                "default_real" : 5.637376656633329,
                "default_integer" : 2147483647,
                "offset" : 9606,
                "deprecated" : true,
                "documentation" : [ "documentation", "documentation" ],
                "name" : "name",
                "attributes" : [ {
                  "value" : "value",
                  "key" : "key"
                }, {
                  "value" : "value",
                  "key" : "key"
                } ],
                "id" : 39500,
                "type" : {
                  "index" : -1803530559
                },
                "required" : true,
                "key" : true
              }, {
                "default_real" : 5.637376656633329,
                "default_integer" : 2147483647,
                "offset" : 9606,
                "deprecated" : true,
                "documentation" : [ "documentation", "documentation" ],
                "name" : "name",
                "attributes" : [ {
                  "value" : "value",
                  "key" : "key"
                }, {
                  "value" : "value",
                  "key" : "key"
                } ],
                "id" : 39500,
                "type" : {
                  "index" : -1803530559
                },
                "required" : true,
                "key" : true
              } ],
              "minalign" : -1158723813
            }
          }, {
            "union_type" : {
              "index" : -1803530559
            },
            "documentation" : [ "documentation", "documentation" ],
            "name" : "name",
            "value" : 2147483647,
            "object" : {
              "is_struct" : true,
              "bytesize" : 885365090,
              "documentation" : [ "documentation", "documentation" ],
              "name" : "name",
              "attributes" : [ {
                "value" : "value",
                "key" : "key"
              }, {
                "value" : "value",
                "key" : "key"
              } ],
              "fields" : [ {
                "default_real" : 5.637376656633329,
                "default_integer" : 2147483647,
                "offset" : 9606,
                "deprecated" : true,
                "documentation" : [ "documentation", "documentation" ],
                "name" : "name",
                "attributes" : [ {
                  "value" : "value",
                  "key" : "key"
                }, {
                  "value" : "value",
                  "key" : "key"
                } ],
                "id" : 39500,
                "type" : {
                  "index" : -1803530559
                },
                "required" : true,
                "key" : true
              }, {
                "default_real" : 5.637376656633329,
                "default_integer" : 2147483647,
                "offset" : 9606,
                "deprecated" : true,
                "documentation" : [ "documentation", "documentation" ],
                "name" : "name",
                "attributes" : [ {
                  "value" : "value",
                  "key" : "key"
                }, {
                  "value" : "value",
                  "key" : "key"
                } ],
                "id" : 39500,
                "type" : {
                  "index" : -1803530559
                },
                "required" : true,
                "key" : true
              } ],
              "minalign" : -1158723813
            }
          } ],
          "documentation" : [ "documentation", "documentation" ],
          "name" : "name",
          "attributes" : [ {
            "value" : "value",
            "key" : "key"
          }, {
            "value" : "value",
            "key" : "key"
          } ],
          "underlying_type" : {
            "index" : -1803530559
          }
        },
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "values" : {
            "items" : {
              "$ref" : "#/components/schemas/reflection_EnumVal"
            },
            "type" : "array"
          },
          "is_union" : {
            "type" : "boolean"
          },
          "underlying_type" : {
            "$ref" : "#/components/schemas/reflection_Type"
          },
          "attributes" : {
            "items" : {
              "$ref" : "#/components/schemas/reflection_KeyValue"
            },
            "type" : "array"
          },
          "documentation" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        },
        "required" : [ "name", "underlying_type", "values" ],
        "type" : "object"
      },
      "reflection_EnumVal" : {
        "additionalProperties" : false,
        "example" : {
          "union_type" : {
            "index" : -1803530559
          },
          "documentation" : [ "documentation", "documentation" ],
          "name" : "name",
          "value" : 2147483647,
          "object" : {
            "is_struct" : true,
            "bytesize" : 885365090,
            "documentation" : [ "documentation", "documentation" ],
            "name" : "name",
            "attributes" : [ {
              "value" : "value",
              "key" : "key"
            }, {
              "value" : "value",
              "key" : "key"
            } ],
            "fields" : [ {
              "default_real" : 5.637376656633329,
              "default_integer" : 2147483647,
              "offset" : 9606,
              "deprecated" : true,
              "documentation" : [ "documentation", "documentation" ],
              "name" : "name",
              "attributes" : [ {
                "value" : "value",
                "key" : "key"
              }, {
                "value" : "value",
                "key" : "key"
              } ],
              "id" : 39500,
              "type" : {
                "index" : -1803530559
              },
              "required" : true,
              "key" : true
            }, {
              "default_real" : 5.637376656633329,
              "default_integer" : 2147483647,
              "offset" : 9606,
              "deprecated" : true,
              "documentation" : [ "documentation", "documentation" ],
              "name" : "name",
              "attributes" : [ {
                "value" : "value",
                "key" : "key"
              }, {
                "value" : "value",
                "key" : "key"
              } ],
              "id" : 39500,
              "type" : {
                "index" : -1803530559
              },
              "required" : true,
              "key" : true
            } ],
            "minalign" : -1158723813
          }
        },
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "value" : {
            "maximum" : 9223372036854776000,
            "minimum" : -9223372036854776000,
            "type" : "integer"
          },
          "object" : {
            "$ref" : "#/components/schemas/reflection_Object"
          },
          "union_type" : {
            "$ref" : "#/components/schemas/reflection_Type"
          },
          "documentation" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        },
        "required" : [ "name" ],
        "type" : "object"
      },
      "reflection_Service" : {
        "additionalProperties" : false,
        "example" : {
          "calls" : [ {
            "request" : {
              "is_struct" : true,
              "bytesize" : 885365090,
              "documentation" : [ "documentation", "documentation" ],
              "name" : "name",
              "attributes" : [ {
                "value" : "value",
                "key" : "key"
              }, {
                "value" : "value",
                "key" : "key"
              } ],
              "fields" : [ {
                "default_real" : 5.637376656633329,
                "default_integer" : 2147483647,
                "offset" : 9606,
                "deprecated" : true,
                "documentation" : [ "documentation", "documentation" ],
                "name" : "name",
                "attributes" : [ {
                  "value" : "value",
                  "key" : "key"
                }, {
                  "value" : "value",
                  "key" : "key"
                } ],
                "id" : 39500,
                "type" : {
                  "index" : -1803530559
                },
                "required" : true,
                "key" : true
              }, {
                "default_real" : 5.637376656633329,
                "default_integer" : 2147483647,
                "offset" : 9606,
                "deprecated" : true,
                "documentation" : [ "documentation", "documentation" ],
                "name" : "name",
                "attributes" : [ {
                  "value" : "value",
                  "key" : "key"
                }, {
                  "value" : "value",
                  "key" : "key"
                } ],
                "id" : 39500,
                "type" : {
                  "index" : -1803530559
                },
                "required" : true,
                "key" : true
              } ],
              "minalign" : -1158723813
            },
            "response" : {
              "is_struct" : true,
              "bytesize" : 885365090,
              "documentation" : [ "documentation", "documentation" ],
              "name" : "name",
              "attributes" : [ {
                "value" : "value",
                "key" : "key"
              }, {
                "value" : "value",
                "key" : "key"
              } ],
              "fields" : [ {
                "default_real" : 5.637376656633329,
                "default_integer" : 2147483647,
                "offset" : 9606,
                "deprecated" : true,
                "documentation" : [ "documentation", "documentation" ],
                "name" : "name",
                "attributes" : [ {
                  "value" : "value",
                  "key" : "key"
                }, {
                  "value" : "value",
                  "key" : "key"
                } ],
                "id" : 39500,
                "type" : {
                  "index" : -1803530559
                },
                "required" : true,
                "key" : true
              }, {
                "default_real" : 5.637376656633329,
                "default_integer" : 2147483647,
                "offset" : 9606,
                "deprecated" : true,
                "documentation" : [ "documentation", "documentation" ],
                "name" : "name",
                "attributes" : [ {
                  "value" : "value",
                  "key" : "key"
                }, {
                  "value" : "value",
                  "key" : "key"
                } ],
                "id" : 39500,
                "type" : {
                  "index" : -1803530559
                },
                "required" : true,
                "key" : true
              } ],
              "minalign" : -1158723813
            },
            "documentation" : [ "documentation", "documentation" ],
            "name" : "name",
            "attributes" : [ {
              "value" : "value",
              "key" : "key"
            }, {
              "value" : "value",
              "key" : "key"
            } ]
          }, {
            "request" : {
              "is_struct" : true,
              "bytesize" : 885365090,
              "documentation" : [ "documentation", "documentation" ],
              "name" : "name",
              "attributes" : [ {
                "value" : "value",
                "key" : "key"
              }, {
                "value" : "value",
                "key" : "key"
              } ],
              "fields" : [ {
                "default_real" : 5.637376656633329,
                "default_integer" : 2147483647,
                "offset" : 9606,
                "deprecated" : true,
                "documentation" : [ "documentation", "documentation" ],
                "name" : "name",
                "attributes" : [ {
                  "value" : "value",
                  "key" : "key"
                }, {
                  "value" : "value",
                  "key" : "key"
                } ],
                "id" : 39500,
                "type" : {
                  "index" : -1803530559
                },
                "required" : true,
                "key" : true
              }, {
                "default_real" : 5.637376656633329,
                "default_integer" : 2147483647,
                "offset" : 9606,
                "deprecated" : true,
                "documentation" : [ "documentation", "documentation" ],
                "name" : "name",
                "attributes" : [ {
                  "value" : "value",
                  "key" : "key"
                }, {
                  "value" : "value",
                  "key" : "key"
                } ],
                "id" : 39500,
                "type" : {
                  "index" : -1803530559
                },
                "required" : true,
                "key" : true
              } ],
              "minalign" : -1158723813
            },
            "response" : {
              "is_struct" : true,
              "bytesize" : 885365090,
              "documentation" : [ "documentation", "documentation" ],
              "name" : "name",
              "attributes" : [ {
                "value" : "value",
                "key" : "key"
              }, {
                "value" : "value",
                "key" : "key"
              } ],
              "fields" : [ {
                "default_real" : 5.637376656633329,
                "default_integer" : 2147483647,
                "offset" : 9606,
                "deprecated" : true,
                "documentation" : [ "documentation", "documentation" ],
                "name" : "name",
                "attributes" : [ {
                  "value" : "value",
                  "key" : "key"
                }, {
                  "value" : "value",
                  "key" : "key"
                } ],
                "id" : 39500,
                "type" : {
                  "index" : -1803530559
                },
                "required" : true,
                "key" : true
              }, {
                "default_real" : 5.637376656633329,
                "default_integer" : 2147483647,
                "offset" : 9606,
                "deprecated" : true,
                "documentation" : [ "documentation", "documentation" ],
                "name" : "name",
                "attributes" : [ {
                  "value" : "value",
                  "key" : "key"
                }, {
                  "value" : "value",
                  "key" : "key"
                } ],
                "id" : 39500,
                "type" : {
                  "index" : -1803530559
                },
                "required" : true,
                "key" : true
              } ],
              "minalign" : -1158723813
            },
            "documentation" : [ "documentation", "documentation" ],
            "name" : "name",
            "attributes" : [ {
              "value" : "value",
              "key" : "key"
            }, {
              "value" : "value",
              "key" : "key"
            } ]
          } ],
          "documentation" : [ "documentation", "documentation" ],
          "name" : "name",
          "attributes" : [ {
            "value" : "value",
            "key" : "key"
          }, {
            "value" : "value",
            "key" : "key"
          } ]
        },
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "calls" : {
            "items" : {
              "$ref" : "#/components/schemas/reflection_RPCCall"
            },
            "type" : "array"
          },
          "attributes" : {
            "items" : {
              "$ref" : "#/components/schemas/reflection_KeyValue"
            },
            "type" : "array"
          },
          "documentation" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        },
        "required" : [ "name" ],
        "type" : "object"
      },
      "reflection_RPCCall" : {
        "additionalProperties" : false,
        "example" : {
          "request" : {
            "is_struct" : true,
            "bytesize" : 885365090,
            "documentation" : [ "documentation", "documentation" ],
            "name" : "name",
            "attributes" : [ {
              "value" : "value",
              "key" : "key"
            }, {
              "value" : "value",
              "key" : "key"
            } ],
            "fields" : [ {
              "default_real" : 5.637376656633329,
              "default_integer" : 2147483647,
              "offset" : 9606,
              "deprecated" : true,
              "documentation" : [ "documentation", "documentation" ],
              "name" : "name",
              "attributes" : [ {
                "value" : "value",
                "key" : "key"
              }, {
                "value" : "value",
                "key" : "key"
              } ],
              "id" : 39500,
              "type" : {
                "index" : -1803530559
              },
              "required" : true,
              "key" : true
            }, {
              "default_real" : 5.637376656633329,
              "default_integer" : 2147483647,
              "offset" : 9606,
              "deprecated" : true,
              "documentation" : [ "documentation", "documentation" ],
              "name" : "name",
              "attributes" : [ {
                "value" : "value",
                "key" : "key"
              }, {
                "value" : "value",
                "key" : "key"
              } ],
              "id" : 39500,
              "type" : {
                "index" : -1803530559
              },
              "required" : true,
              "key" : true
            } ],
            "minalign" : -1158723813
          },
          "response" : {
            "is_struct" : true,
            "bytesize" : 885365090,
            "documentation" : [ "documentation", "documentation" ],
            "name" : "name",
            "attributes" : [ {
              "value" : "value",
              "key" : "key"
            }, {
              "value" : "value",
              "key" : "key"
            } ],
            "fields" : [ {
              "default_real" : 5.637376656633329,
              "default_integer" : 2147483647,
              "offset" : 9606,
              "deprecated" : true,
              "documentation" : [ "documentation", "documentation" ],
              "name" : "name",
              "attributes" : [ {
                "value" : "value",
                "key" : "key"
              }, {
                "value" : "value",
                "key" : "key"
              } ],
              "id" : 39500,
              "type" : {
                "index" : -1803530559
              },
              "required" : true,
              "key" : true
            }, {
              "default_real" : 5.637376656633329,
              "default_integer" : 2147483647,
              "offset" : 9606,
              "deprecated" : true,
              "documentation" : [ "documentation", "documentation" ],
              "name" : "name",
              "attributes" : [ {
                "value" : "value",
                "key" : "key"
              }, {
                "value" : "value",
                "key" : "key"
              } ],
              "id" : 39500,
              "type" : {
                "index" : -1803530559
              },
              "required" : true,
              "key" : true
            } ],
            "minalign" : -1158723813
          },
          "documentation" : [ "documentation", "documentation" ],
          "name" : "name",
          "attributes" : [ {
            "value" : "value",
            "key" : "key"
          }, {
            "value" : "value",
            "key" : "key"
          } ]
        },
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "request" : {
            "$ref" : "#/components/schemas/reflection_Object"
          },
          "response" : {
            "$ref" : "#/components/schemas/reflection_Object"
          },
          "attributes" : {
            "items" : {
              "$ref" : "#/components/schemas/reflection_KeyValue"
            },
            "type" : "array"
          },
          "documentation" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        },
        "required" : [ "name", "request", "response" ],
        "type" : "object"
      },
      "comm_datalayer_remote_ConfigItem" : {
        "additionalProperties" : false,
        "example" : {
          "address" : "tcp://boschrexroth:boschrexroth@127.0.0.1:2069",
          "name" : "myremote"
        },
        "properties" : {
          "name" : {
            "description" : "Name of the remote",
            "example" : "myremote",
            "type" : "string"
          },
          "address" : {
            "description" : "Address of the remote",
            "example" : "tcp://boschrexroth:boschrexroth@127.0.0.1:2069",
            "type" : "string"
          }
        },
        "required" : [ "address", "name" ],
        "type" : "object"
      }
    },
    "securitySchemes" : {
      "UsernamePassword" : {
        "description" : "Enter username and password",
        "flows" : {
          "password" : {
            "scopes" : {
              "dummy" : "Dummy scope (scopes not used)"
            },
            "tokenUrl" : "/identity-manager/api/v1.0/auth/token"
          }
        },
        "type" : "oauth2"
      },
      "Bearer" : {
        "description" : "Alternatively&colon; Enter bearer token (without prefix 'Bearer')",
        "scheme" : "bearer",
        "type" : "http"
      }
    }
  }
}