{
  "openapi" : "3.0.0",
  "info" : {
    "contact" : {
      "email" : "support@boschrexroth.com",
      "name" : "Bosch Rexroth AG",
      "url" : "https://www.boschrexroth.com"
    },
    "description" : "This is an API for certificate and key management on ctrlX OS system",
    "title" : "ctrlX OS - Certificates API",
    "version" : "2.6.1"
  },
  "servers" : [ {
    "url" : "/certificate-manager/api/v2"
  }, {
    "url" : "https://{host}/certificate-manager/api/v2",
    "variables" : {
      "host" : {
        "default" : "localhost",
        "description" : "Hostname or ip address of the ctrlX OS system"
      }
    }
  } ],
  "security" : [ {
    "BearerAuth" : [ ]
  } ],
  "tags" : [ {
    "description" : "Manage certificates",
    "name" : "Certificates"
  }, {
    "description" : "Manage keys",
    "name" : "Keys"
  }, {
    "description" : "Import and export pkcs12-encoded cryptographic containers (.pfx / .p12)",
    "name" : "PKCS12 Container"
  }, {
    "description" : "Get information about all applications that provide a certificate store",
    "name" : "Applications"
  }, {
    "description" : "Create a certificate / key management related task, e.g. certificate/key copying/moving,\nkey generation or importing / exporting pkcs12-encoded containers.\n",
    "name" : "Tasks"
  }, {
    "description" : "Manage PKI (Public-Key-Infrastructure) configurations",
    "name" : "PKI Configurations"
  }, {
    "description" : "Manage certificate revocation lists",
    "name" : "Certificate Revocation List"
  }, {
    "description" : "Manage certificate signing requests",
    "name" : "Certificate Signing Requests"
  } ],
  "paths" : {
    "/applications" : {
      "get" : {
        "description" : "Returns all available applications that have a own certificate and key storage.",
        "operationId" : "getAllApplications",
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Applications"
                }
              }
            },
            "description" : "Returns all available applications that have a own certificate and key storage."
          },
          "401" : {
            "content" : {
              "application/json" : {
                "example" : {
                  "type" : "about:blank",
                  "title" : "Http client error",
                  "detail" : "Unauthorized (401)",
                  "status" : 401,
                  "instance" : "scheduler/admin",
                  "mainDiagnosisCode" : "080E0200",
                  "detailedDiagnosisCode" : "0C7A0203",
                  "severity" : "Error"
                },
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Not authorized to access this resource"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "example" : {
                  "type" : "about:blank",
                  "title" : "Http client error",
                  "detail" : "Forbidden (403)",
                  "status" : 403,
                  "instance" : "scheduler/admin/state",
                  "mainDiagnosisCode" : "080E0200",
                  "detailedDiagnosisCode" : "0C7A0204",
                  "severity" : "Error",
                  "moreInfo" : {
                    "requiredPermissions" : "rexroth-automation.datalayer.rw, rexroth-device.all.rwx"
                  }
                },
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Access forbidden for this resource"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "example" : {
                  "type" : "about:blank",
                  "title" : "Http server error",
                  "detail" : "Internal server error (500)",
                  "status" : 500,
                  "instance" : "scheduler/admin",
                  "mainDiagnosisCode" : "080F0200",
                  "detailedDiagnosisCode" : "0C7A0200",
                  "severity" : "Error",
                  "moreInfo" : {
                    "trace" : "ExampleClass.cpp#452 Null pointer exception"
                  }
                },
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Something unexpected happened on the server"
          }
        },
        "tags" : [ "Applications" ]
      }
    },
    "/applications/{applicationId}" : {
      "get" : {
        "description" : "Get information of a specific application.",
        "operationId" : "getApplication",
        "parameters" : [ {
          "description" : "The unique application Id",
          "explode" : false,
          "in" : "path",
          "name" : "applicationId",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Application"
                }
              }
            },
            "description" : "Returns all information about an application."
          },
          "401" : {
            "content" : {
              "application/json" : {
                "example" : {
                  "type" : "about:blank",
                  "title" : "Http client error",
                  "detail" : "Unauthorized (401)",
                  "status" : 401,
                  "instance" : "scheduler/admin",
                  "mainDiagnosisCode" : "080E0200",
                  "detailedDiagnosisCode" : "0C7A0203",
                  "severity" : "Error"
                },
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Not authorized to access this resource"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "example" : {
                  "type" : "about:blank",
                  "title" : "Http client error",
                  "detail" : "Forbidden (403)",
                  "status" : 403,
                  "instance" : "scheduler/admin/state",
                  "mainDiagnosisCode" : "080E0200",
                  "detailedDiagnosisCode" : "0C7A0204",
                  "severity" : "Error",
                  "moreInfo" : {
                    "requiredPermissions" : "rexroth-automation.datalayer.rw, rexroth-device.all.rwx"
                  }
                },
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Access forbidden for this resource"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "example" : {
                  "type" : "about:blank",
                  "title" : "Http client error",
                  "detail" : "Not found (404)",
                  "status" : 404,
                  "instance" : "scheduler/not-available",
                  "mainDiagnosisCode" : "080E0200",
                  "detailedDiagnosisCode" : "0C7A0205",
                  "severity" : "Error"
                },
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "The resource was not found"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "example" : {
                  "type" : "about:blank",
                  "title" : "Http server error",
                  "detail" : "Internal server error (500)",
                  "status" : 500,
                  "instance" : "scheduler/admin",
                  "mainDiagnosisCode" : "080F0200",
                  "detailedDiagnosisCode" : "0C7A0200",
                  "severity" : "Error",
                  "moreInfo" : {
                    "trace" : "ExampleClass.cpp#452 Null pointer exception"
                  }
                },
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Something unexpected happened on the server"
          }
        },
        "tags" : [ "Applications" ]
      }
    },
    "/applications/{applicationId}/certificates" : {
      "get" : {
        "description" : "Get all certificates of an specific application.",
        "operationId" : "getCertificatesOfApplication",
        "parameters" : [ {
          "description" : "The unique application Id",
          "explode" : false,
          "in" : "path",
          "name" : "applicationId",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Certificates"
                }
              }
            },
            "description" : "Array of certificates"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "example" : {
                  "type" : "about:blank",
                  "title" : "Http client error",
                  "detail" : "Unauthorized (401)",
                  "status" : 401,
                  "instance" : "scheduler/admin",
                  "mainDiagnosisCode" : "080E0200",
                  "detailedDiagnosisCode" : "0C7A0203",
                  "severity" : "Error"
                },
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Not authorized to access this resource"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "example" : {
                  "type" : "about:blank",
                  "title" : "Http client error",
                  "detail" : "Forbidden (403)",
                  "status" : 403,
                  "instance" : "scheduler/admin/state",
                  "mainDiagnosisCode" : "080E0200",
                  "detailedDiagnosisCode" : "0C7A0204",
                  "severity" : "Error",
                  "moreInfo" : {
                    "requiredPermissions" : "rexroth-automation.datalayer.rw, rexroth-device.all.rwx"
                  }
                },
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Access forbidden for this resource"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "example" : {
                  "type" : "about:blank",
                  "title" : "Http client error",
                  "detail" : "Not found (404)",
                  "status" : 404,
                  "instance" : "scheduler/not-available",
                  "mainDiagnosisCode" : "080E0200",
                  "detailedDiagnosisCode" : "0C7A0205",
                  "severity" : "Error"
                },
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "The resource was not found"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "example" : {
                  "type" : "about:blank",
                  "title" : "Http server error",
                  "detail" : "Internal server error (500)",
                  "status" : 500,
                  "instance" : "scheduler/admin",
                  "mainDiagnosisCode" : "080F0200",
                  "detailedDiagnosisCode" : "0C7A0200",
                  "severity" : "Error",
                  "moreInfo" : {
                    "trace" : "ExampleClass.cpp#452 Null pointer exception"
                  }
                },
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Something unexpected happened on the server"
          }
        },
        "tags" : [ "Certificates" ]
      },
      "post" : {
        "description" : "Add a new certificate to specific application.",
        "operationId" : "addCertificateToApplication",
        "parameters" : [ {
          "description" : "The unique application Id",
          "explode" : false,
          "in" : "path",
          "name" : "applicationId",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "requestBody" : {
          "content" : {
            "multipart/form-data" : {
              "schema" : {
                "$ref" : "#/components/schemas/UploadCert"
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Certificates"
                }
              }
            },
            "description" : "Returns array of added certificates.",
            "headers" : {
              "Location" : {
                "description" : "The location of the newly created object",
                "explode" : false,
                "schema" : {
                  "format" : "uri",
                  "type" : "string"
                },
                "style" : "simple"
              }
            }
          },
          "400" : {
            "content" : {
              "application/json" : {
                "example" : {
                  "type" : "about:blank",
                  "title" : "Loading configuration failed",
                  "status" : 400,
                  "instance" : "/solutions/configuration",
                  "mainDiagnosisCode" : "080F0400",
                  "severity" : "Warning",
                  "links" : [ "https://docs.automation.boschrexroth.com/cdphelp?tkeyword=080F0400" ],
                  "cause" : [ {
                    "type" : "about:blank",
                    "title" : "Error in system configuration",
                    "detail" : "Creation and deletion of motion objects is only allowed in CONFIGURATION state",
                    "status" : 400,
                    "instance" : "/automation/api/v2/nodes/motion/cmd/opstate",
                    "mainDiagnosisCode" : "090F2020",
                    "detailedDiagnosisCode" : "0C560203",
                    "severity" : "Warning",
                    "links" : [ "https://docs.automation.boschrexroth.com/cdphelp?tkeyword=0C560203" ]
                  }, {
                    "type" : "about:blank",
                    "title" : "Error in PLC configuration",
                    "detail" : "Loading the configuration in the “RUN” state is not permitted",
                    "status" : 400,
                    "instance" : "/automation/api/v2/nodes/plc/cmd/run",
                    "mainDiagnosisCode" : "0A0F0020",
                    "detailedDiagnosisCode" : "0C280100",
                    "severity" : "Warning",
                    "links" : [ "https://docs.automation.boschrexroth.com/cdphelp?tkeyword=0C280100" ]
                  } ]
                },
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "The request is incomplete or malformed"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "example" : {
                  "type" : "about:blank",
                  "title" : "Http client error",
                  "detail" : "Unauthorized (401)",
                  "status" : 401,
                  "instance" : "scheduler/admin",
                  "mainDiagnosisCode" : "080E0200",
                  "detailedDiagnosisCode" : "0C7A0203",
                  "severity" : "Error"
                },
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Not authorized to access this resource"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "example" : {
                  "type" : "about:blank",
                  "title" : "Http client error",
                  "detail" : "Forbidden (403)",
                  "status" : 403,
                  "instance" : "scheduler/admin/state",
                  "mainDiagnosisCode" : "080E0200",
                  "detailedDiagnosisCode" : "0C7A0204",
                  "severity" : "Error",
                  "moreInfo" : {
                    "requiredPermissions" : "rexroth-automation.datalayer.rw, rexroth-device.all.rwx"
                  }
                },
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Access forbidden for this resource"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "example" : {
                  "type" : "about:blank",
                  "title" : "Http client error",
                  "detail" : "Not found (404)",
                  "status" : 404,
                  "instance" : "scheduler/not-available",
                  "mainDiagnosisCode" : "080E0200",
                  "detailedDiagnosisCode" : "0C7A0205",
                  "severity" : "Error"
                },
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "The resource was not found"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "example" : {
                  "type" : "about:blank",
                  "title" : "Http server error",
                  "detail" : "Internal server error (500)",
                  "status" : 500,
                  "instance" : "scheduler/admin",
                  "mainDiagnosisCode" : "080F0200",
                  "detailedDiagnosisCode" : "0C7A0200",
                  "severity" : "Error",
                  "moreInfo" : {
                    "trace" : "ExampleClass.cpp#452 Null pointer exception"
                  }
                },
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Something unexpected happened on the server"
          }
        },
        "tags" : [ "Certificates" ]
      }
    },
    "/applications/{applicationId}/certificates/{certificateId}" : {
      "delete" : {
        "description" : "Deletes the specific certificate from application.",
        "operationId" : "removeCertificateFromApplication",
        "parameters" : [ {
          "description" : "The unique application Id",
          "explode" : false,
          "in" : "path",
          "name" : "applicationId",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "The unique certificate Id",
          "explode" : false,
          "in" : "path",
          "name" : "certificateId",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "204" : {
            "description" : "Deleted successfully"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "example" : {
                  "type" : "about:blank",
                  "title" : "Loading configuration failed",
                  "status" : 400,
                  "instance" : "/solutions/configuration",
                  "mainDiagnosisCode" : "080F0400",
                  "severity" : "Warning",
                  "links" : [ "https://docs.automation.boschrexroth.com/cdphelp?tkeyword=080F0400" ],
                  "cause" : [ {
                    "type" : "about:blank",
                    "title" : "Error in system configuration",
                    "detail" : "Creation and deletion of motion objects is only allowed in CONFIGURATION state",
                    "status" : 400,
                    "instance" : "/automation/api/v2/nodes/motion/cmd/opstate",
                    "mainDiagnosisCode" : "090F2020",
                    "detailedDiagnosisCode" : "0C560203",
                    "severity" : "Warning",
                    "links" : [ "https://docs.automation.boschrexroth.com/cdphelp?tkeyword=0C560203" ]
                  }, {
                    "type" : "about:blank",
                    "title" : "Error in PLC configuration",
                    "detail" : "Loading the configuration in the “RUN” state is not permitted",
                    "status" : 400,
                    "instance" : "/automation/api/v2/nodes/plc/cmd/run",
                    "mainDiagnosisCode" : "0A0F0020",
                    "detailedDiagnosisCode" : "0C280100",
                    "severity" : "Warning",
                    "links" : [ "https://docs.automation.boschrexroth.com/cdphelp?tkeyword=0C280100" ]
                  } ]
                },
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "The request is incomplete or malformed"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "example" : {
                  "type" : "about:blank",
                  "title" : "Http client error",
                  "detail" : "Unauthorized (401)",
                  "status" : 401,
                  "instance" : "scheduler/admin",
                  "mainDiagnosisCode" : "080E0200",
                  "detailedDiagnosisCode" : "0C7A0203",
                  "severity" : "Error"
                },
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Not authorized to access this resource"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "example" : {
                  "type" : "about:blank",
                  "title" : "Http client error",
                  "detail" : "Forbidden (403)",
                  "status" : 403,
                  "instance" : "scheduler/admin/state",
                  "mainDiagnosisCode" : "080E0200",
                  "detailedDiagnosisCode" : "0C7A0204",
                  "severity" : "Error",
                  "moreInfo" : {
                    "requiredPermissions" : "rexroth-automation.datalayer.rw, rexroth-device.all.rwx"
                  }
                },
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Access forbidden for this resource"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "example" : {
                  "type" : "about:blank",
                  "title" : "Http client error",
                  "detail" : "Not found (404)",
                  "status" : 404,
                  "instance" : "scheduler/not-available",
                  "mainDiagnosisCode" : "080E0200",
                  "detailedDiagnosisCode" : "0C7A0205",
                  "severity" : "Error"
                },
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "The resource was not found"
          },
          "409" : {
            "content" : {
              "application/json" : {
                "example" : {
                  "type" : "about:blank",
                  "title" : "Http client error",
                  "detail" : "Conflict (409)",
                  "status" : 409,
                  "instance" : "/solutions/tasks",
                  "mainDiagnosisCode" : "080E0200",
                  "detailedDiagnosisCode" : "0C7A0206",
                  "severity" : "Error"
                },
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Conflict with the current state of the resource"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "example" : {
                  "type" : "about:blank",
                  "title" : "Http server error",
                  "detail" : "Internal server error (500)",
                  "status" : 500,
                  "instance" : "scheduler/admin",
                  "mainDiagnosisCode" : "080F0200",
                  "detailedDiagnosisCode" : "0C7A0200",
                  "severity" : "Error",
                  "moreInfo" : {
                    "trace" : "ExampleClass.cpp#452 Null pointer exception"
                  }
                },
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Something unexpected happened on the server"
          }
        },
        "tags" : [ "Certificates" ]
      },
      "get" : {
        "description" : "Get one specific certificate.",
        "operationId" : "getCertificateOfApplication",
        "parameters" : [ {
          "description" : "The unique application Id",
          "explode" : false,
          "in" : "path",
          "name" : "applicationId",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "The unique certificate Id",
          "explode" : false,
          "in" : "path",
          "name" : "certificateId",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Certificate"
                }
              }
            },
            "description" : "Returns the certificate with the specific id."
          },
          "401" : {
            "content" : {
              "application/json" : {
                "example" : {
                  "type" : "about:blank",
                  "title" : "Http client error",
                  "detail" : "Unauthorized (401)",
                  "status" : 401,
                  "instance" : "scheduler/admin",
                  "mainDiagnosisCode" : "080E0200",
                  "detailedDiagnosisCode" : "0C7A0203",
                  "severity" : "Error"
                },
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Not authorized to access this resource"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "example" : {
                  "type" : "about:blank",
                  "title" : "Http client error",
                  "detail" : "Forbidden (403)",
                  "status" : 403,
                  "instance" : "scheduler/admin/state",
                  "mainDiagnosisCode" : "080E0200",
                  "detailedDiagnosisCode" : "0C7A0204",
                  "severity" : "Error",
                  "moreInfo" : {
                    "requiredPermissions" : "rexroth-automation.datalayer.rw, rexroth-device.all.rwx"
                  }
                },
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Access forbidden for this resource"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "example" : {
                  "type" : "about:blank",
                  "title" : "Http client error",
                  "detail" : "Not found (404)",
                  "status" : 404,
                  "instance" : "scheduler/not-available",
                  "mainDiagnosisCode" : "080E0200",
                  "detailedDiagnosisCode" : "0C7A0205",
                  "severity" : "Error"
                },
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "The resource was not found"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "example" : {
                  "type" : "about:blank",
                  "title" : "Http server error",
                  "detail" : "Internal server error (500)",
                  "status" : 500,
                  "instance" : "scheduler/admin",
                  "mainDiagnosisCode" : "080F0200",
                  "detailedDiagnosisCode" : "0C7A0200",
                  "severity" : "Error",
                  "moreInfo" : {
                    "trace" : "ExampleClass.cpp#452 Null pointer exception"
                  }
                },
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Something unexpected happened on the server"
          }
        },
        "tags" : [ "Certificates" ]
      },
      "put" : {
        "description" : "Modify a certificate of an specific application.",
        "operationId" : "setCertificateOfApplication",
        "parameters" : [ {
          "description" : "The unique application Id",
          "explode" : false,
          "in" : "path",
          "name" : "applicationId",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "The unique certificate Id",
          "explode" : false,
          "in" : "path",
          "name" : "certificateId",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ModifyCertificate"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Certificate"
                }
              }
            },
            "description" : "The modified certificate"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "example" : {
                  "type" : "about:blank",
                  "title" : "Http client error",
                  "detail" : "Unauthorized (401)",
                  "status" : 401,
                  "instance" : "scheduler/admin",
                  "mainDiagnosisCode" : "080E0200",
                  "detailedDiagnosisCode" : "0C7A0203",
                  "severity" : "Error"
                },
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Not authorized to access this resource"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "example" : {
                  "type" : "about:blank",
                  "title" : "Http client error",
                  "detail" : "Forbidden (403)",
                  "status" : 403,
                  "instance" : "scheduler/admin/state",
                  "mainDiagnosisCode" : "080E0200",
                  "detailedDiagnosisCode" : "0C7A0204",
                  "severity" : "Error",
                  "moreInfo" : {
                    "requiredPermissions" : "rexroth-automation.datalayer.rw, rexroth-device.all.rwx"
                  }
                },
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Access forbidden for this resource"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "example" : {
                  "type" : "about:blank",
                  "title" : "Http client error",
                  "detail" : "Not found (404)",
                  "status" : 404,
                  "instance" : "scheduler/not-available",
                  "mainDiagnosisCode" : "080E0200",
                  "detailedDiagnosisCode" : "0C7A0205",
                  "severity" : "Error"
                },
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "The resource was not found"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "example" : {
                  "type" : "about:blank",
                  "title" : "Http server error",
                  "detail" : "Internal server error (500)",
                  "status" : 500,
                  "instance" : "scheduler/admin",
                  "mainDiagnosisCode" : "080F0200",
                  "detailedDiagnosisCode" : "0C7A0200",
                  "severity" : "Error",
                  "moreInfo" : {
                    "trace" : "ExampleClass.cpp#452 Null pointer exception"
                  }
                },
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Something unexpected happened on the server"
          }
        },
        "tags" : [ "Certificates" ]
      }
    },
    "/applications/{applicationId}/certificates/{certificateId}/file" : {
      "get" : {
        "description" : "Returns the certificate file",
        "operationId" : "getCertificateFile",
        "parameters" : [ {
          "description" : "The unique application Id",
          "explode" : false,
          "in" : "path",
          "name" : "applicationId",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "The unique certificate Id",
          "explode" : false,
          "in" : "path",
          "name" : "certificateId",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Choose the format of the downloaded file (default = pem)",
          "explode" : true,
          "in" : "query",
          "name" : "format",
          "required" : false,
          "schema" : {
            "enum" : [ "pem", "der" ],
            "type" : "string"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/octet-stream" : {
                "schema" : {
                  "format" : "binary",
                  "type" : "string"
                }
              }
            },
            "description" : "OK (specified public certificate as file)"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "example" : {
                  "type" : "about:blank",
                  "title" : "Http client error",
                  "detail" : "Unauthorized (401)",
                  "status" : 401,
                  "instance" : "scheduler/admin",
                  "mainDiagnosisCode" : "080E0200",
                  "detailedDiagnosisCode" : "0C7A0203",
                  "severity" : "Error"
                },
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Not authorized to access this resource"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "example" : {
                  "type" : "about:blank",
                  "title" : "Http client error",
                  "detail" : "Forbidden (403)",
                  "status" : 403,
                  "instance" : "scheduler/admin/state",
                  "mainDiagnosisCode" : "080E0200",
                  "detailedDiagnosisCode" : "0C7A0204",
                  "severity" : "Error",
                  "moreInfo" : {
                    "requiredPermissions" : "rexroth-automation.datalayer.rw, rexroth-device.all.rwx"
                  }
                },
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Access forbidden for this resource"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "example" : {
                  "type" : "about:blank",
                  "title" : "Http client error",
                  "detail" : "Not found (404)",
                  "status" : 404,
                  "instance" : "scheduler/not-available",
                  "mainDiagnosisCode" : "080E0200",
                  "detailedDiagnosisCode" : "0C7A0205",
                  "severity" : "Error"
                },
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "The resource was not found"
          }
        },
        "tags" : [ "Certificates" ]
      }
    },
    "/applications/{applicationId}/keys" : {
      "get" : {
        "description" : "Returns all keys of an specific application.",
        "operationId" : "getKeysOfApplication",
        "parameters" : [ {
          "description" : "The unique application Id",
          "explode" : false,
          "in" : "path",
          "name" : "applicationId",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Keys"
                }
              }
            },
            "description" : "Returns an array of keys available on the system."
          },
          "401" : {
            "content" : {
              "application/json" : {
                "example" : {
                  "type" : "about:blank",
                  "title" : "Http client error",
                  "detail" : "Unauthorized (401)",
                  "status" : 401,
                  "instance" : "scheduler/admin",
                  "mainDiagnosisCode" : "080E0200",
                  "detailedDiagnosisCode" : "0C7A0203",
                  "severity" : "Error"
                },
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Not authorized to access this resource"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "example" : {
                  "type" : "about:blank",
                  "title" : "Http client error",
                  "detail" : "Forbidden (403)",
                  "status" : 403,
                  "instance" : "scheduler/admin/state",
                  "mainDiagnosisCode" : "080E0200",
                  "detailedDiagnosisCode" : "0C7A0204",
                  "severity" : "Error",
                  "moreInfo" : {
                    "requiredPermissions" : "rexroth-automation.datalayer.rw, rexroth-device.all.rwx"
                  }
                },
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Access forbidden for this resource"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "example" : {
                  "type" : "about:blank",
                  "title" : "Http client error",
                  "detail" : "Not found (404)",
                  "status" : 404,
                  "instance" : "scheduler/not-available",
                  "mainDiagnosisCode" : "080E0200",
                  "detailedDiagnosisCode" : "0C7A0205",
                  "severity" : "Error"
                },
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "The resource was not found"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "example" : {
                  "type" : "about:blank",
                  "title" : "Http server error",
                  "detail" : "Internal server error (500)",
                  "status" : 500,
                  "instance" : "scheduler/admin",
                  "mainDiagnosisCode" : "080F0200",
                  "detailedDiagnosisCode" : "0C7A0200",
                  "severity" : "Error",
                  "moreInfo" : {
                    "trace" : "ExampleClass.cpp#452 Null pointer exception"
                  }
                },
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Something unexpected happened on the server"
          }
        },
        "tags" : [ "Keys" ]
      },
      "post" : {
        "description" : "Add a new key to the specific application",
        "operationId" : "addKeyToApplication",
        "parameters" : [ {
          "description" : "The unique application Id",
          "explode" : false,
          "in" : "path",
          "name" : "applicationId",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "requestBody" : {
          "content" : {
            "multipart/form-data" : {
              "schema" : {
                "$ref" : "#/components/schemas/UploadKey"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Key"
                }
              }
            },
            "description" : "Returns the newly created key."
          },
          "400" : {
            "content" : {
              "application/json" : {
                "example" : {
                  "type" : "about:blank",
                  "title" : "Loading configuration failed",
                  "status" : 400,
                  "instance" : "/solutions/configuration",
                  "mainDiagnosisCode" : "080F0400",
                  "severity" : "Warning",
                  "links" : [ "https://docs.automation.boschrexroth.com/cdphelp?tkeyword=080F0400" ],
                  "cause" : [ {
                    "type" : "about:blank",
                    "title" : "Error in system configuration",
                    "detail" : "Creation and deletion of motion objects is only allowed in CONFIGURATION state",
                    "status" : 400,
                    "instance" : "/automation/api/v2/nodes/motion/cmd/opstate",
                    "mainDiagnosisCode" : "090F2020",
                    "detailedDiagnosisCode" : "0C560203",
                    "severity" : "Warning",
                    "links" : [ "https://docs.automation.boschrexroth.com/cdphelp?tkeyword=0C560203" ]
                  }, {
                    "type" : "about:blank",
                    "title" : "Error in PLC configuration",
                    "detail" : "Loading the configuration in the “RUN” state is not permitted",
                    "status" : 400,
                    "instance" : "/automation/api/v2/nodes/plc/cmd/run",
                    "mainDiagnosisCode" : "0A0F0020",
                    "detailedDiagnosisCode" : "0C280100",
                    "severity" : "Warning",
                    "links" : [ "https://docs.automation.boschrexroth.com/cdphelp?tkeyword=0C280100" ]
                  } ]
                },
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "The request is incomplete or malformed"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "example" : {
                  "type" : "about:blank",
                  "title" : "Http client error",
                  "detail" : "Unauthorized (401)",
                  "status" : 401,
                  "instance" : "scheduler/admin",
                  "mainDiagnosisCode" : "080E0200",
                  "detailedDiagnosisCode" : "0C7A0203",
                  "severity" : "Error"
                },
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Not authorized to access this resource"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "example" : {
                  "type" : "about:blank",
                  "title" : "Http client error",
                  "detail" : "Forbidden (403)",
                  "status" : 403,
                  "instance" : "scheduler/admin/state",
                  "mainDiagnosisCode" : "080E0200",
                  "detailedDiagnosisCode" : "0C7A0204",
                  "severity" : "Error",
                  "moreInfo" : {
                    "requiredPermissions" : "rexroth-automation.datalayer.rw, rexroth-device.all.rwx"
                  }
                },
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Access forbidden for this resource"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "example" : {
                  "type" : "about:blank",
                  "title" : "Http client error",
                  "detail" : "Not found (404)",
                  "status" : 404,
                  "instance" : "scheduler/not-available",
                  "mainDiagnosisCode" : "080E0200",
                  "detailedDiagnosisCode" : "0C7A0205",
                  "severity" : "Error"
                },
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "The resource was not found"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "example" : {
                  "type" : "about:blank",
                  "title" : "Http server error",
                  "detail" : "Internal server error (500)",
                  "status" : 500,
                  "instance" : "scheduler/admin",
                  "mainDiagnosisCode" : "080F0200",
                  "detailedDiagnosisCode" : "0C7A0200",
                  "severity" : "Error",
                  "moreInfo" : {
                    "trace" : "ExampleClass.cpp#452 Null pointer exception"
                  }
                },
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Something unexpected happened on the server"
          }
        },
        "tags" : [ "Keys" ]
      }
    },
    "/applications/{applicationId}/keys/{keyId}" : {
      "delete" : {
        "description" : "Deletes a specific key of an application.",
        "operationId" : "deleteKeyFromApplication",
        "parameters" : [ {
          "description" : "The unique application Id",
          "explode" : false,
          "in" : "path",
          "name" : "applicationId",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "The unique key Id",
          "explode" : false,
          "in" : "path",
          "name" : "keyId",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "204" : {
            "description" : "Deleted successfully"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "example" : {
                  "type" : "about:blank",
                  "title" : "Loading configuration failed",
                  "status" : 400,
                  "instance" : "/solutions/configuration",
                  "mainDiagnosisCode" : "080F0400",
                  "severity" : "Warning",
                  "links" : [ "https://docs.automation.boschrexroth.com/cdphelp?tkeyword=080F0400" ],
                  "cause" : [ {
                    "type" : "about:blank",
                    "title" : "Error in system configuration",
                    "detail" : "Creation and deletion of motion objects is only allowed in CONFIGURATION state",
                    "status" : 400,
                    "instance" : "/automation/api/v2/nodes/motion/cmd/opstate",
                    "mainDiagnosisCode" : "090F2020",
                    "detailedDiagnosisCode" : "0C560203",
                    "severity" : "Warning",
                    "links" : [ "https://docs.automation.boschrexroth.com/cdphelp?tkeyword=0C560203" ]
                  }, {
                    "type" : "about:blank",
                    "title" : "Error in PLC configuration",
                    "detail" : "Loading the configuration in the “RUN” state is not permitted",
                    "status" : 400,
                    "instance" : "/automation/api/v2/nodes/plc/cmd/run",
                    "mainDiagnosisCode" : "0A0F0020",
                    "detailedDiagnosisCode" : "0C280100",
                    "severity" : "Warning",
                    "links" : [ "https://docs.automation.boschrexroth.com/cdphelp?tkeyword=0C280100" ]
                  } ]
                },
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "The request is incomplete or malformed"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "example" : {
                  "type" : "about:blank",
                  "title" : "Http client error",
                  "detail" : "Unauthorized (401)",
                  "status" : 401,
                  "instance" : "scheduler/admin",
                  "mainDiagnosisCode" : "080E0200",
                  "detailedDiagnosisCode" : "0C7A0203",
                  "severity" : "Error"
                },
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Not authorized to access this resource"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "example" : {
                  "type" : "about:blank",
                  "title" : "Http client error",
                  "detail" : "Forbidden (403)",
                  "status" : 403,
                  "instance" : "scheduler/admin/state",
                  "mainDiagnosisCode" : "080E0200",
                  "detailedDiagnosisCode" : "0C7A0204",
                  "severity" : "Error",
                  "moreInfo" : {
                    "requiredPermissions" : "rexroth-automation.datalayer.rw, rexroth-device.all.rwx"
                  }
                },
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Access forbidden for this resource"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "example" : {
                  "type" : "about:blank",
                  "title" : "Http client error",
                  "detail" : "Not found (404)",
                  "status" : 404,
                  "instance" : "scheduler/not-available",
                  "mainDiagnosisCode" : "080E0200",
                  "detailedDiagnosisCode" : "0C7A0205",
                  "severity" : "Error"
                },
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "The resource was not found"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "example" : {
                  "type" : "about:blank",
                  "title" : "Http server error",
                  "detail" : "Internal server error (500)",
                  "status" : 500,
                  "instance" : "scheduler/admin",
                  "mainDiagnosisCode" : "080F0200",
                  "detailedDiagnosisCode" : "0C7A0200",
                  "severity" : "Error",
                  "moreInfo" : {
                    "trace" : "ExampleClass.cpp#452 Null pointer exception"
                  }
                },
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Something unexpected happened on the server"
          }
        },
        "tags" : [ "Keys" ]
      },
      "get" : {
        "description" : "Returns an specific key of an specific application.",
        "operationId" : "getKeyOfApplication",
        "parameters" : [ {
          "description" : "The unique application Id",
          "explode" : false,
          "in" : "path",
          "name" : "applicationId",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "The unique key Id",
          "explode" : false,
          "in" : "path",
          "name" : "keyId",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Key"
                }
              }
            },
            "description" : "Returns one specific key."
          },
          "401" : {
            "content" : {
              "application/json" : {
                "example" : {
                  "type" : "about:blank",
                  "title" : "Http client error",
                  "detail" : "Unauthorized (401)",
                  "status" : 401,
                  "instance" : "scheduler/admin",
                  "mainDiagnosisCode" : "080E0200",
                  "detailedDiagnosisCode" : "0C7A0203",
                  "severity" : "Error"
                },
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Not authorized to access this resource"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "example" : {
                  "type" : "about:blank",
                  "title" : "Http client error",
                  "detail" : "Forbidden (403)",
                  "status" : 403,
                  "instance" : "scheduler/admin/state",
                  "mainDiagnosisCode" : "080E0200",
                  "detailedDiagnosisCode" : "0C7A0204",
                  "severity" : "Error",
                  "moreInfo" : {
                    "requiredPermissions" : "rexroth-automation.datalayer.rw, rexroth-device.all.rwx"
                  }
                },
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Access forbidden for this resource"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "example" : {
                  "type" : "about:blank",
                  "title" : "Http client error",
                  "detail" : "Not found (404)",
                  "status" : 404,
                  "instance" : "scheduler/not-available",
                  "mainDiagnosisCode" : "080E0200",
                  "detailedDiagnosisCode" : "0C7A0205",
                  "severity" : "Error"
                },
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "The resource was not found"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "example" : {
                  "type" : "about:blank",
                  "title" : "Http server error",
                  "detail" : "Internal server error (500)",
                  "status" : 500,
                  "instance" : "scheduler/admin",
                  "mainDiagnosisCode" : "080F0200",
                  "detailedDiagnosisCode" : "0C7A0200",
                  "severity" : "Error",
                  "moreInfo" : {
                    "trace" : "ExampleClass.cpp#452 Null pointer exception"
                  }
                },
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Something unexpected happened on the server"
          }
        },
        "tags" : [ "Keys" ]
      },
      "put" : {
        "description" : "Modify a key of an specific application.",
        "operationId" : "setKeyOfApplication",
        "parameters" : [ {
          "description" : "The unique application Id",
          "explode" : false,
          "in" : "path",
          "name" : "applicationId",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "The unique key Id",
          "explode" : false,
          "in" : "path",
          "name" : "keyId",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "examples" : {
                "modifyKeyRequest" : {
                  "$ref" : "#/components/examples/ModifyKey"
                },
                "decryptKeyRequest" : {
                  "$ref" : "#/components/examples/DecryptKey"
                }
              },
              "schema" : {
                "$ref" : "#/components/schemas/OneOfKeyUpdate"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Key"
                }
              }
            },
            "description" : "The modified key"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "example" : {
                  "type" : "about:blank",
                  "title" : "Http client error",
                  "detail" : "Unauthorized (401)",
                  "status" : 401,
                  "instance" : "scheduler/admin",
                  "mainDiagnosisCode" : "080E0200",
                  "detailedDiagnosisCode" : "0C7A0203",
                  "severity" : "Error"
                },
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Not authorized to access this resource"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "example" : {
                  "type" : "about:blank",
                  "title" : "Http client error",
                  "detail" : "Forbidden (403)",
                  "status" : 403,
                  "instance" : "scheduler/admin/state",
                  "mainDiagnosisCode" : "080E0200",
                  "detailedDiagnosisCode" : "0C7A0204",
                  "severity" : "Error",
                  "moreInfo" : {
                    "requiredPermissions" : "rexroth-automation.datalayer.rw, rexroth-device.all.rwx"
                  }
                },
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Access forbidden for this resource"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "example" : {
                  "type" : "about:blank",
                  "title" : "Http client error",
                  "detail" : "Not found (404)",
                  "status" : 404,
                  "instance" : "scheduler/not-available",
                  "mainDiagnosisCode" : "080E0200",
                  "detailedDiagnosisCode" : "0C7A0205",
                  "severity" : "Error"
                },
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "The resource was not found"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "example" : {
                  "type" : "about:blank",
                  "title" : "Http server error",
                  "detail" : "Internal server error (500)",
                  "status" : 500,
                  "instance" : "scheduler/admin",
                  "mainDiagnosisCode" : "080F0200",
                  "detailedDiagnosisCode" : "0C7A0200",
                  "severity" : "Error",
                  "moreInfo" : {
                    "trace" : "ExampleClass.cpp#452 Null pointer exception"
                  }
                },
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Something unexpected happened on the server"
          }
        },
        "tags" : [ "Keys" ]
      }
    },
    "/applications/{applicationId}/keys/{keyId}/file" : {
      "get" : {
        "description" : "Returns the private key file",
        "operationId" : "downloadPrivateKeyFile",
        "parameters" : [ {
          "description" : "The unique application Id",
          "explode" : false,
          "in" : "path",
          "name" : "applicationId",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "The unique key Id",
          "explode" : false,
          "in" : "path",
          "name" : "keyId",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Choose the format of the downloaded file (default = pem)",
          "explode" : true,
          "in" : "query",
          "name" : "format",
          "required" : false,
          "schema" : {
            "enum" : [ "pem", "der" ],
            "type" : "string"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/octet-stream" : {
                "schema" : {
                  "format" : "binary",
                  "type" : "string"
                }
              }
            },
            "description" : "OK (specified public key as file)"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "example" : {
                  "type" : "about:blank",
                  "title" : "Http client error",
                  "detail" : "Unauthorized (401)",
                  "status" : 401,
                  "instance" : "scheduler/admin",
                  "mainDiagnosisCode" : "080E0200",
                  "detailedDiagnosisCode" : "0C7A0203",
                  "severity" : "Error"
                },
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Not authorized to access this resource"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "example" : {
                  "type" : "about:blank",
                  "title" : "Http client error",
                  "detail" : "Forbidden (403)",
                  "status" : 403,
                  "instance" : "scheduler/admin/state",
                  "mainDiagnosisCode" : "080E0200",
                  "detailedDiagnosisCode" : "0C7A0204",
                  "severity" : "Error",
                  "moreInfo" : {
                    "requiredPermissions" : "rexroth-automation.datalayer.rw, rexroth-device.all.rwx"
                  }
                },
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Access forbidden for this resource"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "example" : {
                  "type" : "about:blank",
                  "title" : "Http client error",
                  "detail" : "Not found (404)",
                  "status" : 404,
                  "instance" : "scheduler/not-available",
                  "mainDiagnosisCode" : "080E0200",
                  "detailedDiagnosisCode" : "0C7A0205",
                  "severity" : "Error"
                },
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "The resource was not found"
          }
        },
        "tags" : [ "Keys" ]
      }
    },
    "/applications/{applicationId}/keys/{keyId}/public-key" : {
      "get" : {
        "description" : "Returns information about the public key of a private key. If the choosen key is a public key it will also returned.",
        "operationId" : "getPublicKeyOfApplication",
        "parameters" : [ {
          "description" : "The unique application Id",
          "explode" : false,
          "in" : "path",
          "name" : "applicationId",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "The unique key Id",
          "explode" : false,
          "in" : "path",
          "name" : "keyId",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Key"
                }
              }
            },
            "description" : "Returns one specific key."
          },
          "401" : {
            "content" : {
              "application/json" : {
                "example" : {
                  "type" : "about:blank",
                  "title" : "Http client error",
                  "detail" : "Unauthorized (401)",
                  "status" : 401,
                  "instance" : "scheduler/admin",
                  "mainDiagnosisCode" : "080E0200",
                  "detailedDiagnosisCode" : "0C7A0203",
                  "severity" : "Error"
                },
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Not authorized to access this resource"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "example" : {
                  "type" : "about:blank",
                  "title" : "Http client error",
                  "detail" : "Forbidden (403)",
                  "status" : 403,
                  "instance" : "scheduler/admin/state",
                  "mainDiagnosisCode" : "080E0200",
                  "detailedDiagnosisCode" : "0C7A0204",
                  "severity" : "Error",
                  "moreInfo" : {
                    "requiredPermissions" : "rexroth-automation.datalayer.rw, rexroth-device.all.rwx"
                  }
                },
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Access forbidden for this resource"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "example" : {
                  "type" : "about:blank",
                  "title" : "Http client error",
                  "detail" : "Not found (404)",
                  "status" : 404,
                  "instance" : "scheduler/not-available",
                  "mainDiagnosisCode" : "080E0200",
                  "detailedDiagnosisCode" : "0C7A0205",
                  "severity" : "Error"
                },
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "The resource was not found"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "example" : {
                  "type" : "about:blank",
                  "title" : "Http server error",
                  "detail" : "Internal server error (500)",
                  "status" : 500,
                  "instance" : "scheduler/admin",
                  "mainDiagnosisCode" : "080F0200",
                  "detailedDiagnosisCode" : "0C7A0200",
                  "severity" : "Error",
                  "moreInfo" : {
                    "trace" : "ExampleClass.cpp#452 Null pointer exception"
                  }
                },
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Something unexpected happened on the server"
          }
        },
        "tags" : [ "Keys" ]
      }
    },
    "/applications/{applicationId}/keys/{keyId}/public-key/file" : {
      "get" : {
        "description" : "Returns the public key of and private key as a file. If the choosen key is a public key it will also returned.",
        "operationId" : "getKeyPublicKeyFile",
        "parameters" : [ {
          "description" : "The unique application Id",
          "explode" : false,
          "in" : "path",
          "name" : "applicationId",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "The unique key Id",
          "explode" : false,
          "in" : "path",
          "name" : "keyId",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Choose the format of the downloaded file (default = pem)",
          "explode" : true,
          "in" : "query",
          "name" : "format",
          "required" : false,
          "schema" : {
            "enum" : [ "pem", "der" ],
            "type" : "string"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/octet-stream" : {
                "schema" : {
                  "format" : "binary",
                  "type" : "string"
                }
              }
            },
            "description" : "OK (specified public key as file)"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "example" : {
                  "type" : "about:blank",
                  "title" : "Http client error",
                  "detail" : "Unauthorized (401)",
                  "status" : 401,
                  "instance" : "scheduler/admin",
                  "mainDiagnosisCode" : "080E0200",
                  "detailedDiagnosisCode" : "0C7A0203",
                  "severity" : "Error"
                },
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Not authorized to access this resource"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "example" : {
                  "type" : "about:blank",
                  "title" : "Http client error",
                  "detail" : "Forbidden (403)",
                  "status" : 403,
                  "instance" : "scheduler/admin/state",
                  "mainDiagnosisCode" : "080E0200",
                  "detailedDiagnosisCode" : "0C7A0204",
                  "severity" : "Error",
                  "moreInfo" : {
                    "requiredPermissions" : "rexroth-automation.datalayer.rw, rexroth-device.all.rwx"
                  }
                },
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Access forbidden for this resource"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "example" : {
                  "type" : "about:blank",
                  "title" : "Http client error",
                  "detail" : "Not found (404)",
                  "status" : 404,
                  "instance" : "scheduler/not-available",
                  "mainDiagnosisCode" : "080E0200",
                  "detailedDiagnosisCode" : "0C7A0205",
                  "severity" : "Error"
                },
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "The resource was not found"
          }
        },
        "tags" : [ "Keys" ]
      }
    },
    "/applications/{applicationId}/keys/{keyId}/certificate-signing-requests" : {
      "get" : {
        "description" : "Returns all signing requests based on the specific key",
        "operationId" : "getCSRsOfKey",
        "parameters" : [ {
          "description" : "The unique application Id",
          "explode" : false,
          "in" : "path",
          "name" : "applicationId",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "The unique key Id",
          "explode" : false,
          "in" : "path",
          "name" : "keyId",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CSRs"
                }
              }
            },
            "description" : "Returns an array of certificate signing requests based on a specific key."
          },
          "401" : {
            "content" : {
              "application/json" : {
                "example" : {
                  "type" : "about:blank",
                  "title" : "Http client error",
                  "detail" : "Unauthorized (401)",
                  "status" : 401,
                  "instance" : "scheduler/admin",
                  "mainDiagnosisCode" : "080E0200",
                  "detailedDiagnosisCode" : "0C7A0203",
                  "severity" : "Error"
                },
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Not authorized to access this resource"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "example" : {
                  "type" : "about:blank",
                  "title" : "Http client error",
                  "detail" : "Forbidden (403)",
                  "status" : 403,
                  "instance" : "scheduler/admin/state",
                  "mainDiagnosisCode" : "080E0200",
                  "detailedDiagnosisCode" : "0C7A0204",
                  "severity" : "Error",
                  "moreInfo" : {
                    "requiredPermissions" : "rexroth-automation.datalayer.rw, rexroth-device.all.rwx"
                  }
                },
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Access forbidden for this resource"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "example" : {
                  "type" : "about:blank",
                  "title" : "Http client error",
                  "detail" : "Not found (404)",
                  "status" : 404,
                  "instance" : "scheduler/not-available",
                  "mainDiagnosisCode" : "080E0200",
                  "detailedDiagnosisCode" : "0C7A0205",
                  "severity" : "Error"
                },
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "The resource was not found"
          }
        },
        "tags" : [ "Certificate Signing Requests" ]
      },
      "post" : {
        "description" : "Create a certificate signing request with the given values and save this csr in the backend",
        "operationId" : "createCertificateSigningRequest",
        "parameters" : [ {
          "description" : "The unique application Id",
          "explode" : false,
          "in" : "path",
          "name" : "applicationId",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "The unique key Id",
          "explode" : false,
          "in" : "path",
          "name" : "keyId",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CertificateSigningRequestCreateInfo"
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CSR"
                }
              }
            },
            "description" : "Certificate signing request created",
            "headers" : {
              "Location" : {
                "description" : "The location of the newly created object",
                "explode" : false,
                "schema" : {
                  "format" : "uri",
                  "type" : "string"
                },
                "style" : "simple"
              }
            }
          },
          "401" : {
            "content" : {
              "application/json" : {
                "example" : {
                  "type" : "about:blank",
                  "title" : "Http client error",
                  "detail" : "Unauthorized (401)",
                  "status" : 401,
                  "instance" : "scheduler/admin",
                  "mainDiagnosisCode" : "080E0200",
                  "detailedDiagnosisCode" : "0C7A0203",
                  "severity" : "Error"
                },
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Not authorized to access this resource"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "example" : {
                  "type" : "about:blank",
                  "title" : "Http client error",
                  "detail" : "Forbidden (403)",
                  "status" : 403,
                  "instance" : "scheduler/admin/state",
                  "mainDiagnosisCode" : "080E0200",
                  "detailedDiagnosisCode" : "0C7A0204",
                  "severity" : "Error",
                  "moreInfo" : {
                    "requiredPermissions" : "rexroth-automation.datalayer.rw, rexroth-device.all.rwx"
                  }
                },
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Access forbidden for this resource"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "example" : {
                  "type" : "about:blank",
                  "title" : "Http client error",
                  "detail" : "Not found (404)",
                  "status" : 404,
                  "instance" : "scheduler/not-available",
                  "mainDiagnosisCode" : "080E0200",
                  "detailedDiagnosisCode" : "0C7A0205",
                  "severity" : "Error"
                },
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "The resource was not found"
          }
        },
        "tags" : [ "Certificate Signing Requests" ]
      }
    },
    "/applications/{applicationId}/keys/{keyId}/certificate-signing-requests/{csrId}" : {
      "delete" : {
        "description" : "Delets an specific signing request",
        "operationId" : "deleteCSR",
        "parameters" : [ {
          "description" : "The unique application Id",
          "explode" : false,
          "in" : "path",
          "name" : "applicationId",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "The unique key Id",
          "explode" : false,
          "in" : "path",
          "name" : "keyId",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "The unique csr Id",
          "explode" : false,
          "in" : "path",
          "name" : "csrId",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "204" : {
            "description" : "Deleted successfully"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "example" : {
                  "type" : "about:blank",
                  "title" : "Http client error",
                  "detail" : "Unauthorized (401)",
                  "status" : 401,
                  "instance" : "scheduler/admin",
                  "mainDiagnosisCode" : "080E0200",
                  "detailedDiagnosisCode" : "0C7A0203",
                  "severity" : "Error"
                },
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Not authorized to access this resource"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "example" : {
                  "type" : "about:blank",
                  "title" : "Http client error",
                  "detail" : "Forbidden (403)",
                  "status" : 403,
                  "instance" : "scheduler/admin/state",
                  "mainDiagnosisCode" : "080E0200",
                  "detailedDiagnosisCode" : "0C7A0204",
                  "severity" : "Error",
                  "moreInfo" : {
                    "requiredPermissions" : "rexroth-automation.datalayer.rw, rexroth-device.all.rwx"
                  }
                },
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Access forbidden for this resource"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "example" : {
                  "type" : "about:blank",
                  "title" : "Http client error",
                  "detail" : "Not found (404)",
                  "status" : 404,
                  "instance" : "scheduler/not-available",
                  "mainDiagnosisCode" : "080E0200",
                  "detailedDiagnosisCode" : "0C7A0205",
                  "severity" : "Error"
                },
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "The resource was not found"
          }
        },
        "tags" : [ "Certificate Signing Requests" ]
      },
      "get" : {
        "description" : "Returns an specific signing request",
        "operationId" : "getCSR",
        "parameters" : [ {
          "description" : "The unique application Id",
          "explode" : false,
          "in" : "path",
          "name" : "applicationId",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "The unique key Id",
          "explode" : false,
          "in" : "path",
          "name" : "keyId",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "The unique csr Id",
          "explode" : false,
          "in" : "path",
          "name" : "csrId",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CSR"
                }
              }
            },
            "description" : "Returns a certificate signing requests based on a specific key."
          },
          "401" : {
            "content" : {
              "application/json" : {
                "example" : {
                  "type" : "about:blank",
                  "title" : "Http client error",
                  "detail" : "Unauthorized (401)",
                  "status" : 401,
                  "instance" : "scheduler/admin",
                  "mainDiagnosisCode" : "080E0200",
                  "detailedDiagnosisCode" : "0C7A0203",
                  "severity" : "Error"
                },
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Not authorized to access this resource"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "example" : {
                  "type" : "about:blank",
                  "title" : "Http client error",
                  "detail" : "Forbidden (403)",
                  "status" : 403,
                  "instance" : "scheduler/admin/state",
                  "mainDiagnosisCode" : "080E0200",
                  "detailedDiagnosisCode" : "0C7A0204",
                  "severity" : "Error",
                  "moreInfo" : {
                    "requiredPermissions" : "rexroth-automation.datalayer.rw, rexroth-device.all.rwx"
                  }
                },
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Access forbidden for this resource"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "example" : {
                  "type" : "about:blank",
                  "title" : "Http client error",
                  "detail" : "Not found (404)",
                  "status" : 404,
                  "instance" : "scheduler/not-available",
                  "mainDiagnosisCode" : "080E0200",
                  "detailedDiagnosisCode" : "0C7A0205",
                  "severity" : "Error"
                },
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "The resource was not found"
          }
        },
        "tags" : [ "Certificate Signing Requests" ]
      }
    },
    "/applications/{applicationId}/keys/{keyId}/certificate-signing-requests/{csrId}/file" : {
      "get" : {
        "description" : "Returns the file of an specific signing request",
        "operationId" : "getCSRFile",
        "parameters" : [ {
          "description" : "The unique application Id",
          "explode" : false,
          "in" : "path",
          "name" : "applicationId",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "The unique key Id",
          "explode" : false,
          "in" : "path",
          "name" : "keyId",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "The unique csr Id",
          "explode" : false,
          "in" : "path",
          "name" : "csrId",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Choose the format of the downloaded file (default = pem)",
          "explode" : true,
          "in" : "query",
          "name" : "format",
          "required" : false,
          "schema" : {
            "enum" : [ "pem", "der" ],
            "type" : "string"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/octet-stream" : {
                "schema" : {
                  "format" : "binary",
                  "type" : "string"
                }
              }
            },
            "description" : "OK (specified csr as file)"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "example" : {
                  "type" : "about:blank",
                  "title" : "Http client error",
                  "detail" : "Unauthorized (401)",
                  "status" : 401,
                  "instance" : "scheduler/admin",
                  "mainDiagnosisCode" : "080E0200",
                  "detailedDiagnosisCode" : "0C7A0203",
                  "severity" : "Error"
                },
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Not authorized to access this resource"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "example" : {
                  "type" : "about:blank",
                  "title" : "Http client error",
                  "detail" : "Forbidden (403)",
                  "status" : 403,
                  "instance" : "scheduler/admin/state",
                  "mainDiagnosisCode" : "080E0200",
                  "detailedDiagnosisCode" : "0C7A0204",
                  "severity" : "Error",
                  "moreInfo" : {
                    "requiredPermissions" : "rexroth-automation.datalayer.rw, rexroth-device.all.rwx"
                  }
                },
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Access forbidden for this resource"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "example" : {
                  "type" : "about:blank",
                  "title" : "Http client error",
                  "detail" : "Not found (404)",
                  "status" : 404,
                  "instance" : "scheduler/not-available",
                  "mainDiagnosisCode" : "080E0200",
                  "detailedDiagnosisCode" : "0C7A0205",
                  "severity" : "Error"
                },
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "The resource was not found"
          }
        },
        "tags" : [ "Certificate Signing Requests" ]
      }
    },
    "/applications/{applicationId}/pkcs12-containers/{pkcs12ContainerId}/file" : {
      "get" : {
        "description" : "Downloads the pkcs12 container's content encoded in the standard pkcs12 archive file format",
        "operationId" : "getPkcs12File",
        "parameters" : [ {
          "description" : "The unique application Id",
          "explode" : false,
          "in" : "path",
          "name" : "applicationId",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "The unique pkcs12 container id",
          "explode" : false,
          "in" : "path",
          "name" : "pkcs12ContainerId",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/octet-stream" : {
                "schema" : {
                  "format" : "binary",
                  "type" : "string"
                }
              }
            },
            "description" : "OK (content of specified pkcs12 container)"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "example" : {
                  "type" : "about:blank",
                  "title" : "Http client error",
                  "detail" : "Unauthorized (401)",
                  "status" : 401,
                  "instance" : "scheduler/admin",
                  "mainDiagnosisCode" : "080E0200",
                  "detailedDiagnosisCode" : "0C7A0203",
                  "severity" : "Error"
                },
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Not authorized to access this resource"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "example" : {
                  "type" : "about:blank",
                  "title" : "Http client error",
                  "detail" : "Forbidden (403)",
                  "status" : 403,
                  "instance" : "scheduler/admin/state",
                  "mainDiagnosisCode" : "080E0200",
                  "detailedDiagnosisCode" : "0C7A0204",
                  "severity" : "Error",
                  "moreInfo" : {
                    "requiredPermissions" : "rexroth-automation.datalayer.rw, rexroth-device.all.rwx"
                  }
                },
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Access forbidden for this resource"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "example" : {
                  "type" : "about:blank",
                  "title" : "Http client error",
                  "detail" : "Not found (404)",
                  "status" : 404,
                  "instance" : "scheduler/not-available",
                  "mainDiagnosisCode" : "080E0200",
                  "detailedDiagnosisCode" : "0C7A0205",
                  "severity" : "Error"
                },
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "The resource was not found"
          }
        },
        "tags" : [ "PKCS12 Container" ]
      }
    },
    "/applications/{applicationId}/pkcs12-containers/{pkcs12ContainerId}" : {
      "delete" : {
        "description" : "Deletes the pkcs12 encoded container",
        "operationId" : "deletePkcs12Container",
        "parameters" : [ {
          "description" : "The unique application Id",
          "explode" : false,
          "in" : "path",
          "name" : "applicationId",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "The unique pkcs12 container id",
          "explode" : false,
          "in" : "path",
          "name" : "pkcs12ContainerId",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "204" : {
            "description" : "OK (specified pkcs12 container) was deleted"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "example" : {
                  "type" : "about:blank",
                  "title" : "Http client error",
                  "detail" : "Unauthorized (401)",
                  "status" : 401,
                  "instance" : "scheduler/admin",
                  "mainDiagnosisCode" : "080E0200",
                  "detailedDiagnosisCode" : "0C7A0203",
                  "severity" : "Error"
                },
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Not authorized to access this resource"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "example" : {
                  "type" : "about:blank",
                  "title" : "Http client error",
                  "detail" : "Forbidden (403)",
                  "status" : 403,
                  "instance" : "scheduler/admin/state",
                  "mainDiagnosisCode" : "080E0200",
                  "detailedDiagnosisCode" : "0C7A0204",
                  "severity" : "Error",
                  "moreInfo" : {
                    "requiredPermissions" : "rexroth-automation.datalayer.rw, rexroth-device.all.rwx"
                  }
                },
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Access forbidden for this resource"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "example" : {
                  "type" : "about:blank",
                  "title" : "Http client error",
                  "detail" : "Not found (404)",
                  "status" : 404,
                  "instance" : "scheduler/not-available",
                  "mainDiagnosisCode" : "080E0200",
                  "detailedDiagnosisCode" : "0C7A0205",
                  "severity" : "Error"
                },
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "The resource was not found"
          }
        },
        "tags" : [ "PKCS12 Container" ]
      },
      "get" : {
        "description" : "Retrieve an application's specific pkcs12 container",
        "operationId" : "getPkcs12Container",
        "parameters" : [ {
          "description" : "The unique application Id",
          "explode" : false,
          "in" : "path",
          "name" : "applicationId",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "The unique pkcs12 container id",
          "explode" : false,
          "in" : "path",
          "name" : "pkcs12ContainerId",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Pkcs12Container"
                }
              }
            },
            "description" : "The specific pkcs12 container was successfully returned"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "example" : {
                  "type" : "about:blank",
                  "title" : "Http client error",
                  "detail" : "Unauthorized (401)",
                  "status" : 401,
                  "instance" : "scheduler/admin",
                  "mainDiagnosisCode" : "080E0200",
                  "detailedDiagnosisCode" : "0C7A0203",
                  "severity" : "Error"
                },
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Not authorized to access this resource"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "example" : {
                  "type" : "about:blank",
                  "title" : "Http client error",
                  "detail" : "Forbidden (403)",
                  "status" : 403,
                  "instance" : "scheduler/admin/state",
                  "mainDiagnosisCode" : "080E0200",
                  "detailedDiagnosisCode" : "0C7A0204",
                  "severity" : "Error",
                  "moreInfo" : {
                    "requiredPermissions" : "rexroth-automation.datalayer.rw, rexroth-device.all.rwx"
                  }
                },
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Access forbidden for this resource"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "example" : {
                  "type" : "about:blank",
                  "title" : "Http client error",
                  "detail" : "Not found (404)",
                  "status" : 404,
                  "instance" : "scheduler/not-available",
                  "mainDiagnosisCode" : "080E0200",
                  "detailedDiagnosisCode" : "0C7A0205",
                  "severity" : "Error"
                },
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "The resource was not found"
          }
        },
        "tags" : [ "PKCS12 Container" ]
      }
    },
    "/applications/{applicationId}/pkcs12-containers" : {
      "get" : {
        "description" : "Retrieve all pkcs12 encoded containers that are currently assigned to the given application",
        "operationId" : "getPkcs12Containers",
        "parameters" : [ {
          "description" : "The unique application Id",
          "explode" : false,
          "in" : "path",
          "name" : "applicationId",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Pkcs12Containers"
                }
              }
            },
            "description" : "All available pkcs12 containers successfully returned"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "example" : {
                  "type" : "about:blank",
                  "title" : "Loading configuration failed",
                  "status" : 400,
                  "instance" : "/solutions/configuration",
                  "mainDiagnosisCode" : "080F0400",
                  "severity" : "Warning",
                  "links" : [ "https://docs.automation.boschrexroth.com/cdphelp?tkeyword=080F0400" ],
                  "cause" : [ {
                    "type" : "about:blank",
                    "title" : "Error in system configuration",
                    "detail" : "Creation and deletion of motion objects is only allowed in CONFIGURATION state",
                    "status" : 400,
                    "instance" : "/automation/api/v2/nodes/motion/cmd/opstate",
                    "mainDiagnosisCode" : "090F2020",
                    "detailedDiagnosisCode" : "0C560203",
                    "severity" : "Warning",
                    "links" : [ "https://docs.automation.boschrexroth.com/cdphelp?tkeyword=0C560203" ]
                  }, {
                    "type" : "about:blank",
                    "title" : "Error in PLC configuration",
                    "detail" : "Loading the configuration in the “RUN” state is not permitted",
                    "status" : 400,
                    "instance" : "/automation/api/v2/nodes/plc/cmd/run",
                    "mainDiagnosisCode" : "0A0F0020",
                    "detailedDiagnosisCode" : "0C280100",
                    "severity" : "Warning",
                    "links" : [ "https://docs.automation.boschrexroth.com/cdphelp?tkeyword=0C280100" ]
                  } ]
                },
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "The request is incomplete or malformed"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "example" : {
                  "type" : "about:blank",
                  "title" : "Http client error",
                  "detail" : "Unauthorized (401)",
                  "status" : 401,
                  "instance" : "scheduler/admin",
                  "mainDiagnosisCode" : "080E0200",
                  "detailedDiagnosisCode" : "0C7A0203",
                  "severity" : "Error"
                },
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Not authorized to access this resource"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "example" : {
                  "type" : "about:blank",
                  "title" : "Http client error",
                  "detail" : "Forbidden (403)",
                  "status" : 403,
                  "instance" : "scheduler/admin/state",
                  "mainDiagnosisCode" : "080E0200",
                  "detailedDiagnosisCode" : "0C7A0204",
                  "severity" : "Error",
                  "moreInfo" : {
                    "requiredPermissions" : "rexroth-automation.datalayer.rw, rexroth-device.all.rwx"
                  }
                },
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Access forbidden for this resource"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "example" : {
                  "type" : "about:blank",
                  "title" : "Http client error",
                  "detail" : "Not found (404)",
                  "status" : 404,
                  "instance" : "scheduler/not-available",
                  "mainDiagnosisCode" : "080E0200",
                  "detailedDiagnosisCode" : "0C7A0205",
                  "severity" : "Error"
                },
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "The resource was not found"
          }
        },
        "tags" : [ "PKCS12 Container" ]
      },
      "post" : {
        "description" : "Uploads a pkcs12 file encoded in the standard pkcs12 archive file format",
        "operationId" : "uploadPkcs12File",
        "parameters" : [ {
          "description" : "The unique application Id",
          "explode" : false,
          "in" : "path",
          "name" : "applicationId",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "requestBody" : {
          "content" : {
            "multipart/form-data" : {
              "schema" : {
                "$ref" : "#/components/schemas/UploadPkcs12"
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Pkcs12Container"
                }
              }
            },
            "description" : "The pkcs12 container was successfully created",
            "headers" : {
              "Location" : {
                "description" : "The location of the newly created object",
                "explode" : false,
                "schema" : {
                  "format" : "uri",
                  "type" : "string"
                },
                "style" : "simple"
              }
            }
          },
          "400" : {
            "content" : {
              "application/json" : {
                "example" : {
                  "type" : "about:blank",
                  "title" : "Loading configuration failed",
                  "status" : 400,
                  "instance" : "/solutions/configuration",
                  "mainDiagnosisCode" : "080F0400",
                  "severity" : "Warning",
                  "links" : [ "https://docs.automation.boschrexroth.com/cdphelp?tkeyword=080F0400" ],
                  "cause" : [ {
                    "type" : "about:blank",
                    "title" : "Error in system configuration",
                    "detail" : "Creation and deletion of motion objects is only allowed in CONFIGURATION state",
                    "status" : 400,
                    "instance" : "/automation/api/v2/nodes/motion/cmd/opstate",
                    "mainDiagnosisCode" : "090F2020",
                    "detailedDiagnosisCode" : "0C560203",
                    "severity" : "Warning",
                    "links" : [ "https://docs.automation.boschrexroth.com/cdphelp?tkeyword=0C560203" ]
                  }, {
                    "type" : "about:blank",
                    "title" : "Error in PLC configuration",
                    "detail" : "Loading the configuration in the “RUN” state is not permitted",
                    "status" : 400,
                    "instance" : "/automation/api/v2/nodes/plc/cmd/run",
                    "mainDiagnosisCode" : "0A0F0020",
                    "detailedDiagnosisCode" : "0C280100",
                    "severity" : "Warning",
                    "links" : [ "https://docs.automation.boschrexroth.com/cdphelp?tkeyword=0C280100" ]
                  } ]
                },
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "The request is incomplete or malformed"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "example" : {
                  "type" : "about:blank",
                  "title" : "Http client error",
                  "detail" : "Unauthorized (401)",
                  "status" : 401,
                  "instance" : "scheduler/admin",
                  "mainDiagnosisCode" : "080E0200",
                  "detailedDiagnosisCode" : "0C7A0203",
                  "severity" : "Error"
                },
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Not authorized to access this resource"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "example" : {
                  "type" : "about:blank",
                  "title" : "Http client error",
                  "detail" : "Forbidden (403)",
                  "status" : 403,
                  "instance" : "scheduler/admin/state",
                  "mainDiagnosisCode" : "080E0200",
                  "detailedDiagnosisCode" : "0C7A0204",
                  "severity" : "Error",
                  "moreInfo" : {
                    "requiredPermissions" : "rexroth-automation.datalayer.rw, rexroth-device.all.rwx"
                  }
                },
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Access forbidden for this resource"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "example" : {
                  "type" : "about:blank",
                  "title" : "Http client error",
                  "detail" : "Not found (404)",
                  "status" : 404,
                  "instance" : "scheduler/not-available",
                  "mainDiagnosisCode" : "080E0200",
                  "detailedDiagnosisCode" : "0C7A0205",
                  "severity" : "Error"
                },
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "The resource was not found"
          }
        },
        "tags" : [ "PKCS12 Container" ]
      }
    },
    "/applications/{applicationId}/certificate-revocation-lists" : {
      "get" : {
        "description" : "Get all certificate revocation lists.",
        "operationId" : "getCertificateRevocationLists",
        "parameters" : [ {
          "description" : "The unique application Id",
          "explode" : false,
          "in" : "path",
          "name" : "applicationId",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CertificateRevocationLists"
                }
              }
            },
            "description" : "Array of certificate revocation lists"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "example" : {
                  "type" : "about:blank",
                  "title" : "Http client error",
                  "detail" : "Unauthorized (401)",
                  "status" : 401,
                  "instance" : "scheduler/admin",
                  "mainDiagnosisCode" : "080E0200",
                  "detailedDiagnosisCode" : "0C7A0203",
                  "severity" : "Error"
                },
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Not authorized to access this resource"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "example" : {
                  "type" : "about:blank",
                  "title" : "Http client error",
                  "detail" : "Forbidden (403)",
                  "status" : 403,
                  "instance" : "scheduler/admin/state",
                  "mainDiagnosisCode" : "080E0200",
                  "detailedDiagnosisCode" : "0C7A0204",
                  "severity" : "Error",
                  "moreInfo" : {
                    "requiredPermissions" : "rexroth-automation.datalayer.rw, rexroth-device.all.rwx"
                  }
                },
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Access forbidden for this resource"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "example" : {
                  "type" : "about:blank",
                  "title" : "Http client error",
                  "detail" : "Not found (404)",
                  "status" : 404,
                  "instance" : "scheduler/not-available",
                  "mainDiagnosisCode" : "080E0200",
                  "detailedDiagnosisCode" : "0C7A0205",
                  "severity" : "Error"
                },
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "The resource was not found"
          }
        },
        "tags" : [ "Certificate Revocation List" ]
      },
      "post" : {
        "description" : "Add a new certificate revocation list to a specific application.",
        "operationId" : "addCertificateRevocationList",
        "parameters" : [ {
          "description" : "The unique application Id",
          "explode" : false,
          "in" : "path",
          "name" : "applicationId",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "requestBody" : {
          "content" : {
            "multipart/form-data" : {
              "schema" : {
                "$ref" : "#/components/schemas/UploadCertificateRevocationList"
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CertificateRevocationList"
                }
              }
            },
            "description" : "Returns uploaded certificate revocation list.",
            "headers" : {
              "Location" : {
                "description" : "The location of the newly created object",
                "explode" : false,
                "schema" : {
                  "format" : "uri",
                  "type" : "string"
                },
                "style" : "simple"
              }
            }
          },
          "400" : {
            "content" : {
              "application/json" : {
                "example" : {
                  "type" : "about:blank",
                  "title" : "Loading configuration failed",
                  "status" : 400,
                  "instance" : "/solutions/configuration",
                  "mainDiagnosisCode" : "080F0400",
                  "severity" : "Warning",
                  "links" : [ "https://docs.automation.boschrexroth.com/cdphelp?tkeyword=080F0400" ],
                  "cause" : [ {
                    "type" : "about:blank",
                    "title" : "Error in system configuration",
                    "detail" : "Creation and deletion of motion objects is only allowed in CONFIGURATION state",
                    "status" : 400,
                    "instance" : "/automation/api/v2/nodes/motion/cmd/opstate",
                    "mainDiagnosisCode" : "090F2020",
                    "detailedDiagnosisCode" : "0C560203",
                    "severity" : "Warning",
                    "links" : [ "https://docs.automation.boschrexroth.com/cdphelp?tkeyword=0C560203" ]
                  }, {
                    "type" : "about:blank",
                    "title" : "Error in PLC configuration",
                    "detail" : "Loading the configuration in the “RUN” state is not permitted",
                    "status" : 400,
                    "instance" : "/automation/api/v2/nodes/plc/cmd/run",
                    "mainDiagnosisCode" : "0A0F0020",
                    "detailedDiagnosisCode" : "0C280100",
                    "severity" : "Warning",
                    "links" : [ "https://docs.automation.boschrexroth.com/cdphelp?tkeyword=0C280100" ]
                  } ]
                },
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "The request is incomplete or malformed"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "example" : {
                  "type" : "about:blank",
                  "title" : "Http client error",
                  "detail" : "Unauthorized (401)",
                  "status" : 401,
                  "instance" : "scheduler/admin",
                  "mainDiagnosisCode" : "080E0200",
                  "detailedDiagnosisCode" : "0C7A0203",
                  "severity" : "Error"
                },
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Not authorized to access this resource"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "example" : {
                  "type" : "about:blank",
                  "title" : "Http client error",
                  "detail" : "Forbidden (403)",
                  "status" : 403,
                  "instance" : "scheduler/admin/state",
                  "mainDiagnosisCode" : "080E0200",
                  "detailedDiagnosisCode" : "0C7A0204",
                  "severity" : "Error",
                  "moreInfo" : {
                    "requiredPermissions" : "rexroth-automation.datalayer.rw, rexroth-device.all.rwx"
                  }
                },
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Access forbidden for this resource"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "example" : {
                  "type" : "about:blank",
                  "title" : "Http client error",
                  "detail" : "Not found (404)",
                  "status" : 404,
                  "instance" : "scheduler/not-available",
                  "mainDiagnosisCode" : "080E0200",
                  "detailedDiagnosisCode" : "0C7A0205",
                  "severity" : "Error"
                },
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "The resource was not found"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "example" : {
                  "type" : "about:blank",
                  "title" : "Http server error",
                  "detail" : "Internal server error (500)",
                  "status" : 500,
                  "instance" : "scheduler/admin",
                  "mainDiagnosisCode" : "080F0200",
                  "detailedDiagnosisCode" : "0C7A0200",
                  "severity" : "Error",
                  "moreInfo" : {
                    "trace" : "ExampleClass.cpp#452 Null pointer exception"
                  }
                },
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Something unexpected happened on the server"
          }
        },
        "tags" : [ "Certificate Revocation List" ]
      }
    },
    "/applications/{applicationId}/certificate-revocation-lists/{certificateRevocationListId}" : {
      "delete" : {
        "description" : "Deletes the specific certificate revocation list.",
        "operationId" : "removeCertificateRevocationList",
        "parameters" : [ {
          "description" : "The unique application Id",
          "explode" : false,
          "in" : "path",
          "name" : "applicationId",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "The unique Id of certificate revocation list",
          "explode" : false,
          "in" : "path",
          "name" : "certificateRevocationListId",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "204" : {
            "description" : "Deleted successfully"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "example" : {
                  "type" : "about:blank",
                  "title" : "Loading configuration failed",
                  "status" : 400,
                  "instance" : "/solutions/configuration",
                  "mainDiagnosisCode" : "080F0400",
                  "severity" : "Warning",
                  "links" : [ "https://docs.automation.boschrexroth.com/cdphelp?tkeyword=080F0400" ],
                  "cause" : [ {
                    "type" : "about:blank",
                    "title" : "Error in system configuration",
                    "detail" : "Creation and deletion of motion objects is only allowed in CONFIGURATION state",
                    "status" : 400,
                    "instance" : "/automation/api/v2/nodes/motion/cmd/opstate",
                    "mainDiagnosisCode" : "090F2020",
                    "detailedDiagnosisCode" : "0C560203",
                    "severity" : "Warning",
                    "links" : [ "https://docs.automation.boschrexroth.com/cdphelp?tkeyword=0C560203" ]
                  }, {
                    "type" : "about:blank",
                    "title" : "Error in PLC configuration",
                    "detail" : "Loading the configuration in the “RUN” state is not permitted",
                    "status" : 400,
                    "instance" : "/automation/api/v2/nodes/plc/cmd/run",
                    "mainDiagnosisCode" : "0A0F0020",
                    "detailedDiagnosisCode" : "0C280100",
                    "severity" : "Warning",
                    "links" : [ "https://docs.automation.boschrexroth.com/cdphelp?tkeyword=0C280100" ]
                  } ]
                },
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "The request is incomplete or malformed"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "example" : {
                  "type" : "about:blank",
                  "title" : "Http client error",
                  "detail" : "Unauthorized (401)",
                  "status" : 401,
                  "instance" : "scheduler/admin",
                  "mainDiagnosisCode" : "080E0200",
                  "detailedDiagnosisCode" : "0C7A0203",
                  "severity" : "Error"
                },
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Not authorized to access this resource"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "example" : {
                  "type" : "about:blank",
                  "title" : "Http client error",
                  "detail" : "Forbidden (403)",
                  "status" : 403,
                  "instance" : "scheduler/admin/state",
                  "mainDiagnosisCode" : "080E0200",
                  "detailedDiagnosisCode" : "0C7A0204",
                  "severity" : "Error",
                  "moreInfo" : {
                    "requiredPermissions" : "rexroth-automation.datalayer.rw, rexroth-device.all.rwx"
                  }
                },
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Access forbidden for this resource"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "example" : {
                  "type" : "about:blank",
                  "title" : "Http client error",
                  "detail" : "Not found (404)",
                  "status" : 404,
                  "instance" : "scheduler/not-available",
                  "mainDiagnosisCode" : "080E0200",
                  "detailedDiagnosisCode" : "0C7A0205",
                  "severity" : "Error"
                },
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "The resource was not found"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "example" : {
                  "type" : "about:blank",
                  "title" : "Http server error",
                  "detail" : "Internal server error (500)",
                  "status" : 500,
                  "instance" : "scheduler/admin",
                  "mainDiagnosisCode" : "080F0200",
                  "detailedDiagnosisCode" : "0C7A0200",
                  "severity" : "Error",
                  "moreInfo" : {
                    "trace" : "ExampleClass.cpp#452 Null pointer exception"
                  }
                },
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Something unexpected happened on the server"
          }
        },
        "tags" : [ "Certificate Revocation List" ]
      },
      "get" : {
        "description" : "Get one specific certificate revocation list.",
        "operationId" : "getCertificateRevocationList",
        "parameters" : [ {
          "description" : "The unique application Id",
          "explode" : false,
          "in" : "path",
          "name" : "applicationId",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "The unique Id of certificate revocation list",
          "explode" : false,
          "in" : "path",
          "name" : "certificateRevocationListId",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CertificateRevocationList"
                }
              }
            },
            "description" : "Returns the certificate revocation list with the specific id."
          },
          "401" : {
            "content" : {
              "application/json" : {
                "example" : {
                  "type" : "about:blank",
                  "title" : "Http client error",
                  "detail" : "Unauthorized (401)",
                  "status" : 401,
                  "instance" : "scheduler/admin",
                  "mainDiagnosisCode" : "080E0200",
                  "detailedDiagnosisCode" : "0C7A0203",
                  "severity" : "Error"
                },
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Not authorized to access this resource"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "example" : {
                  "type" : "about:blank",
                  "title" : "Http client error",
                  "detail" : "Forbidden (403)",
                  "status" : 403,
                  "instance" : "scheduler/admin/state",
                  "mainDiagnosisCode" : "080E0200",
                  "detailedDiagnosisCode" : "0C7A0204",
                  "severity" : "Error",
                  "moreInfo" : {
                    "requiredPermissions" : "rexroth-automation.datalayer.rw, rexroth-device.all.rwx"
                  }
                },
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Access forbidden for this resource"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "example" : {
                  "type" : "about:blank",
                  "title" : "Http client error",
                  "detail" : "Not found (404)",
                  "status" : 404,
                  "instance" : "scheduler/not-available",
                  "mainDiagnosisCode" : "080E0200",
                  "detailedDiagnosisCode" : "0C7A0205",
                  "severity" : "Error"
                },
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "The resource was not found"
          }
        },
        "tags" : [ "Certificate Revocation List" ]
      }
    },
    "/applications/{applicationId}/certificate-revocation-lists/{certificateRevocationListId}/file" : {
      "get" : {
        "description" : "Returns the certificate revocation list file",
        "operationId" : "getCertificateRevocationListFile",
        "parameters" : [ {
          "description" : "The unique application Id",
          "explode" : false,
          "in" : "path",
          "name" : "applicationId",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "The unique Id of certificate revocation list",
          "explode" : false,
          "in" : "path",
          "name" : "certificateRevocationListId",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Choose the format of the downloaded file (default = pem)",
          "explode" : true,
          "in" : "query",
          "name" : "format",
          "required" : false,
          "schema" : {
            "enum" : [ "pem", "der" ],
            "type" : "string"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/octet-stream" : {
                "schema" : {
                  "format" : "binary",
                  "type" : "string"
                }
              }
            },
            "description" : "OK (specified certificate revocation list as file)"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "example" : {
                  "type" : "about:blank",
                  "title" : "Loading configuration failed",
                  "status" : 400,
                  "instance" : "/solutions/configuration",
                  "mainDiagnosisCode" : "080F0400",
                  "severity" : "Warning",
                  "links" : [ "https://docs.automation.boschrexroth.com/cdphelp?tkeyword=080F0400" ],
                  "cause" : [ {
                    "type" : "about:blank",
                    "title" : "Error in system configuration",
                    "detail" : "Creation and deletion of motion objects is only allowed in CONFIGURATION state",
                    "status" : 400,
                    "instance" : "/automation/api/v2/nodes/motion/cmd/opstate",
                    "mainDiagnosisCode" : "090F2020",
                    "detailedDiagnosisCode" : "0C560203",
                    "severity" : "Warning",
                    "links" : [ "https://docs.automation.boschrexroth.com/cdphelp?tkeyword=0C560203" ]
                  }, {
                    "type" : "about:blank",
                    "title" : "Error in PLC configuration",
                    "detail" : "Loading the configuration in the “RUN” state is not permitted",
                    "status" : 400,
                    "instance" : "/automation/api/v2/nodes/plc/cmd/run",
                    "mainDiagnosisCode" : "0A0F0020",
                    "detailedDiagnosisCode" : "0C280100",
                    "severity" : "Warning",
                    "links" : [ "https://docs.automation.boschrexroth.com/cdphelp?tkeyword=0C280100" ]
                  } ]
                },
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "The request is incomplete or malformed"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "example" : {
                  "type" : "about:blank",
                  "title" : "Http client error",
                  "detail" : "Unauthorized (401)",
                  "status" : 401,
                  "instance" : "scheduler/admin",
                  "mainDiagnosisCode" : "080E0200",
                  "detailedDiagnosisCode" : "0C7A0203",
                  "severity" : "Error"
                },
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Not authorized to access this resource"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "example" : {
                  "type" : "about:blank",
                  "title" : "Http client error",
                  "detail" : "Forbidden (403)",
                  "status" : 403,
                  "instance" : "scheduler/admin/state",
                  "mainDiagnosisCode" : "080E0200",
                  "detailedDiagnosisCode" : "0C7A0204",
                  "severity" : "Error",
                  "moreInfo" : {
                    "requiredPermissions" : "rexroth-automation.datalayer.rw, rexroth-device.all.rwx"
                  }
                },
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Access forbidden for this resource"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "example" : {
                  "type" : "about:blank",
                  "title" : "Http client error",
                  "detail" : "Not found (404)",
                  "status" : 404,
                  "instance" : "scheduler/not-available",
                  "mainDiagnosisCode" : "080E0200",
                  "detailedDiagnosisCode" : "0C7A0205",
                  "severity" : "Error"
                },
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "The resource was not found"
          }
        },
        "tags" : [ "Certificate Revocation List" ]
      }
    },
    "/pkis" : {
      "get" : {
        "description" : "Get all configured pki configurations",
        "operationId" : "getAllPKIConfigurations",
        "parameters" : [ {
          "description" : "Cipherkey to encrypt authentication secrets.",
          "explode" : true,
          "in" : "query",
          "name" : "cipherkey",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PKIConfigs"
                }
              }
            },
            "description" : "Array of PKI configs"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "example" : {
                  "type" : "about:blank",
                  "title" : "Http client error",
                  "detail" : "Unauthorized (401)",
                  "status" : 401,
                  "instance" : "scheduler/admin",
                  "mainDiagnosisCode" : "080E0200",
                  "detailedDiagnosisCode" : "0C7A0203",
                  "severity" : "Error"
                },
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Not authorized to access this resource"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "example" : {
                  "type" : "about:blank",
                  "title" : "Http client error",
                  "detail" : "Forbidden (403)",
                  "status" : 403,
                  "instance" : "scheduler/admin/state",
                  "mainDiagnosisCode" : "080E0200",
                  "detailedDiagnosisCode" : "0C7A0204",
                  "severity" : "Error",
                  "moreInfo" : {
                    "requiredPermissions" : "rexroth-automation.datalayer.rw, rexroth-device.all.rwx"
                  }
                },
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Access forbidden for this resource"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "example" : {
                  "type" : "about:blank",
                  "title" : "Http client error",
                  "detail" : "Not found (404)",
                  "status" : 404,
                  "instance" : "scheduler/not-available",
                  "mainDiagnosisCode" : "080E0200",
                  "detailedDiagnosisCode" : "0C7A0205",
                  "severity" : "Error"
                },
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "The resource was not found"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "example" : {
                  "type" : "about:blank",
                  "title" : "Http server error",
                  "detail" : "Internal server error (500)",
                  "status" : 500,
                  "instance" : "scheduler/admin",
                  "mainDiagnosisCode" : "080F0200",
                  "detailedDiagnosisCode" : "0C7A0200",
                  "severity" : "Error",
                  "moreInfo" : {
                    "trace" : "ExampleClass.cpp#452 Null pointer exception"
                  }
                },
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Something unexpected happened on the server"
          }
        },
        "tags" : [ "PKI Configurations" ]
      },
      "post" : {
        "description" : "Add a new pki configuration.",
        "operationId" : "addPKIConfiguration",
        "parameters" : [ {
          "description" : "Cipherkey to encrypt authentication secrets.",
          "explode" : true,
          "in" : "query",
          "name" : "cipherkey",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PKIConfig"
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PKIConfig"
                }
              }
            },
            "description" : "Config created",
            "headers" : {
              "Location" : {
                "explode" : false,
                "schema" : {
                  "description" : "Location of the created configuration",
                  "example" : "/certificate-manager/api/v2/pkis/123",
                  "type" : "string"
                },
                "style" : "simple"
              }
            }
          },
          "400" : {
            "content" : {
              "application/json" : {
                "example" : {
                  "type" : "about:blank",
                  "title" : "Loading configuration failed",
                  "status" : 400,
                  "instance" : "/solutions/configuration",
                  "mainDiagnosisCode" : "080F0400",
                  "severity" : "Warning",
                  "links" : [ "https://docs.automation.boschrexroth.com/cdphelp?tkeyword=080F0400" ],
                  "cause" : [ {
                    "type" : "about:blank",
                    "title" : "Error in system configuration",
                    "detail" : "Creation and deletion of motion objects is only allowed in CONFIGURATION state",
                    "status" : 400,
                    "instance" : "/automation/api/v2/nodes/motion/cmd/opstate",
                    "mainDiagnosisCode" : "090F2020",
                    "detailedDiagnosisCode" : "0C560203",
                    "severity" : "Warning",
                    "links" : [ "https://docs.automation.boschrexroth.com/cdphelp?tkeyword=0C560203" ]
                  }, {
                    "type" : "about:blank",
                    "title" : "Error in PLC configuration",
                    "detail" : "Loading the configuration in the “RUN” state is not permitted",
                    "status" : 400,
                    "instance" : "/automation/api/v2/nodes/plc/cmd/run",
                    "mainDiagnosisCode" : "0A0F0020",
                    "detailedDiagnosisCode" : "0C280100",
                    "severity" : "Warning",
                    "links" : [ "https://docs.automation.boschrexroth.com/cdphelp?tkeyword=0C280100" ]
                  } ]
                },
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "The request is incomplete or malformed"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "example" : {
                  "type" : "about:blank",
                  "title" : "Http client error",
                  "detail" : "Unauthorized (401)",
                  "status" : 401,
                  "instance" : "scheduler/admin",
                  "mainDiagnosisCode" : "080E0200",
                  "detailedDiagnosisCode" : "0C7A0203",
                  "severity" : "Error"
                },
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Not authorized to access this resource"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "example" : {
                  "type" : "about:blank",
                  "title" : "Http client error",
                  "detail" : "Forbidden (403)",
                  "status" : 403,
                  "instance" : "scheduler/admin/state",
                  "mainDiagnosisCode" : "080E0200",
                  "detailedDiagnosisCode" : "0C7A0204",
                  "severity" : "Error",
                  "moreInfo" : {
                    "requiredPermissions" : "rexroth-automation.datalayer.rw, rexroth-device.all.rwx"
                  }
                },
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Access forbidden for this resource"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "example" : {
                  "type" : "about:blank",
                  "title" : "Http client error",
                  "detail" : "Not found (404)",
                  "status" : 404,
                  "instance" : "scheduler/not-available",
                  "mainDiagnosisCode" : "080E0200",
                  "detailedDiagnosisCode" : "0C7A0205",
                  "severity" : "Error"
                },
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "The resource was not found"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "example" : {
                  "type" : "about:blank",
                  "title" : "Http server error",
                  "detail" : "Internal server error (500)",
                  "status" : 500,
                  "instance" : "scheduler/admin",
                  "mainDiagnosisCode" : "080F0200",
                  "detailedDiagnosisCode" : "0C7A0200",
                  "severity" : "Error",
                  "moreInfo" : {
                    "trace" : "ExampleClass.cpp#452 Null pointer exception"
                  }
                },
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Something unexpected happened on the server"
          }
        },
        "tags" : [ "PKI Configurations" ]
      }
    },
    "/pkis/{pkiId}" : {
      "delete" : {
        "description" : "Deletes a pki configuration",
        "operationId" : "deletePKIConfiguration",
        "parameters" : [ {
          "description" : "The unique pkiId Id",
          "explode" : false,
          "in" : "path",
          "name" : "pkiId",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "204" : {
            "description" : "Deleted successfully"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "example" : {
                  "type" : "about:blank",
                  "title" : "Loading configuration failed",
                  "status" : 400,
                  "instance" : "/solutions/configuration",
                  "mainDiagnosisCode" : "080F0400",
                  "severity" : "Warning",
                  "links" : [ "https://docs.automation.boschrexroth.com/cdphelp?tkeyword=080F0400" ],
                  "cause" : [ {
                    "type" : "about:blank",
                    "title" : "Error in system configuration",
                    "detail" : "Creation and deletion of motion objects is only allowed in CONFIGURATION state",
                    "status" : 400,
                    "instance" : "/automation/api/v2/nodes/motion/cmd/opstate",
                    "mainDiagnosisCode" : "090F2020",
                    "detailedDiagnosisCode" : "0C560203",
                    "severity" : "Warning",
                    "links" : [ "https://docs.automation.boschrexroth.com/cdphelp?tkeyword=0C560203" ]
                  }, {
                    "type" : "about:blank",
                    "title" : "Error in PLC configuration",
                    "detail" : "Loading the configuration in the “RUN” state is not permitted",
                    "status" : 400,
                    "instance" : "/automation/api/v2/nodes/plc/cmd/run",
                    "mainDiagnosisCode" : "0A0F0020",
                    "detailedDiagnosisCode" : "0C280100",
                    "severity" : "Warning",
                    "links" : [ "https://docs.automation.boschrexroth.com/cdphelp?tkeyword=0C280100" ]
                  } ]
                },
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "The request is incomplete or malformed"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "example" : {
                  "type" : "about:blank",
                  "title" : "Http client error",
                  "detail" : "Unauthorized (401)",
                  "status" : 401,
                  "instance" : "scheduler/admin",
                  "mainDiagnosisCode" : "080E0200",
                  "detailedDiagnosisCode" : "0C7A0203",
                  "severity" : "Error"
                },
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Not authorized to access this resource"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "example" : {
                  "type" : "about:blank",
                  "title" : "Http client error",
                  "detail" : "Forbidden (403)",
                  "status" : 403,
                  "instance" : "scheduler/admin/state",
                  "mainDiagnosisCode" : "080E0200",
                  "detailedDiagnosisCode" : "0C7A0204",
                  "severity" : "Error",
                  "moreInfo" : {
                    "requiredPermissions" : "rexroth-automation.datalayer.rw, rexroth-device.all.rwx"
                  }
                },
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Access forbidden for this resource"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "example" : {
                  "type" : "about:blank",
                  "title" : "Http client error",
                  "detail" : "Not found (404)",
                  "status" : 404,
                  "instance" : "scheduler/not-available",
                  "mainDiagnosisCode" : "080E0200",
                  "detailedDiagnosisCode" : "0C7A0205",
                  "severity" : "Error"
                },
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "The resource was not found"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "example" : {
                  "type" : "about:blank",
                  "title" : "Http server error",
                  "detail" : "Internal server error (500)",
                  "status" : 500,
                  "instance" : "scheduler/admin",
                  "mainDiagnosisCode" : "080F0200",
                  "detailedDiagnosisCode" : "0C7A0200",
                  "severity" : "Error",
                  "moreInfo" : {
                    "trace" : "ExampleClass.cpp#452 Null pointer exception"
                  }
                },
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Something unexpected happened on the server"
          }
        },
        "tags" : [ "PKI Configurations" ]
      },
      "get" : {
        "description" : "Get pki configuraiton",
        "operationId" : "getPkiConfig",
        "parameters" : [ {
          "description" : "The unique pkiId Id",
          "explode" : false,
          "in" : "path",
          "name" : "pkiId",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Cipherkey to encrypt authentication secrets.",
          "explode" : true,
          "in" : "query",
          "name" : "cipherkey",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PKIConfig"
                }
              }
            },
            "description" : "Returns an pki configuraiton the specific id."
          },
          "401" : {
            "content" : {
              "application/json" : {
                "example" : {
                  "type" : "about:blank",
                  "title" : "Http client error",
                  "detail" : "Unauthorized (401)",
                  "status" : 401,
                  "instance" : "scheduler/admin",
                  "mainDiagnosisCode" : "080E0200",
                  "detailedDiagnosisCode" : "0C7A0203",
                  "severity" : "Error"
                },
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Not authorized to access this resource"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "example" : {
                  "type" : "about:blank",
                  "title" : "Http client error",
                  "detail" : "Forbidden (403)",
                  "status" : 403,
                  "instance" : "scheduler/admin/state",
                  "mainDiagnosisCode" : "080E0200",
                  "detailedDiagnosisCode" : "0C7A0204",
                  "severity" : "Error",
                  "moreInfo" : {
                    "requiredPermissions" : "rexroth-automation.datalayer.rw, rexroth-device.all.rwx"
                  }
                },
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Access forbidden for this resource"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "example" : {
                  "type" : "about:blank",
                  "title" : "Http client error",
                  "detail" : "Not found (404)",
                  "status" : 404,
                  "instance" : "scheduler/not-available",
                  "mainDiagnosisCode" : "080E0200",
                  "detailedDiagnosisCode" : "0C7A0205",
                  "severity" : "Error"
                },
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "The resource was not found"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "example" : {
                  "type" : "about:blank",
                  "title" : "Http server error",
                  "detail" : "Internal server error (500)",
                  "status" : 500,
                  "instance" : "scheduler/admin",
                  "mainDiagnosisCode" : "080F0200",
                  "detailedDiagnosisCode" : "0C7A0200",
                  "severity" : "Error",
                  "moreInfo" : {
                    "trace" : "ExampleClass.cpp#452 Null pointer exception"
                  }
                },
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Something unexpected happened on the server"
          }
        },
        "tags" : [ "PKI Configurations" ]
      },
      "put" : {
        "description" : "Modify pki configuration",
        "operationId" : "setPKIConfiguration",
        "parameters" : [ {
          "description" : "The unique pkiId Id",
          "explode" : false,
          "in" : "path",
          "name" : "pkiId",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Cipherkey to encrypt authentication secrets.",
          "explode" : true,
          "in" : "query",
          "name" : "cipherkey",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PKIConfig"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PKIConfig"
                }
              }
            },
            "description" : "The modified pki configuration"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "example" : {
                  "type" : "about:blank",
                  "title" : "Loading configuration failed",
                  "status" : 400,
                  "instance" : "/solutions/configuration",
                  "mainDiagnosisCode" : "080F0400",
                  "severity" : "Warning",
                  "links" : [ "https://docs.automation.boschrexroth.com/cdphelp?tkeyword=080F0400" ],
                  "cause" : [ {
                    "type" : "about:blank",
                    "title" : "Error in system configuration",
                    "detail" : "Creation and deletion of motion objects is only allowed in CONFIGURATION state",
                    "status" : 400,
                    "instance" : "/automation/api/v2/nodes/motion/cmd/opstate",
                    "mainDiagnosisCode" : "090F2020",
                    "detailedDiagnosisCode" : "0C560203",
                    "severity" : "Warning",
                    "links" : [ "https://docs.automation.boschrexroth.com/cdphelp?tkeyword=0C560203" ]
                  }, {
                    "type" : "about:blank",
                    "title" : "Error in PLC configuration",
                    "detail" : "Loading the configuration in the “RUN” state is not permitted",
                    "status" : 400,
                    "instance" : "/automation/api/v2/nodes/plc/cmd/run",
                    "mainDiagnosisCode" : "0A0F0020",
                    "detailedDiagnosisCode" : "0C280100",
                    "severity" : "Warning",
                    "links" : [ "https://docs.automation.boschrexroth.com/cdphelp?tkeyword=0C280100" ]
                  } ]
                },
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "The request is incomplete or malformed"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "example" : {
                  "type" : "about:blank",
                  "title" : "Http client error",
                  "detail" : "Unauthorized (401)",
                  "status" : 401,
                  "instance" : "scheduler/admin",
                  "mainDiagnosisCode" : "080E0200",
                  "detailedDiagnosisCode" : "0C7A0203",
                  "severity" : "Error"
                },
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Not authorized to access this resource"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "example" : {
                  "type" : "about:blank",
                  "title" : "Http client error",
                  "detail" : "Forbidden (403)",
                  "status" : 403,
                  "instance" : "scheduler/admin/state",
                  "mainDiagnosisCode" : "080E0200",
                  "detailedDiagnosisCode" : "0C7A0204",
                  "severity" : "Error",
                  "moreInfo" : {
                    "requiredPermissions" : "rexroth-automation.datalayer.rw, rexroth-device.all.rwx"
                  }
                },
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Access forbidden for this resource"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "example" : {
                  "type" : "about:blank",
                  "title" : "Http client error",
                  "detail" : "Not found (404)",
                  "status" : 404,
                  "instance" : "scheduler/not-available",
                  "mainDiagnosisCode" : "080E0200",
                  "detailedDiagnosisCode" : "0C7A0205",
                  "severity" : "Error"
                },
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "The resource was not found"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "example" : {
                  "type" : "about:blank",
                  "title" : "Http server error",
                  "detail" : "Internal server error (500)",
                  "status" : 500,
                  "instance" : "scheduler/admin",
                  "mainDiagnosisCode" : "080F0200",
                  "detailedDiagnosisCode" : "0C7A0200",
                  "severity" : "Error",
                  "moreInfo" : {
                    "trace" : "ExampleClass.cpp#452 Null pointer exception"
                  }
                },
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Something unexpected happened on the server"
          }
        },
        "tags" : [ "PKI Configurations" ]
      }
    },
    "/pkis/{pkiId}/certificate-requests" : {
      "get" : {
        "description" : "Get certificate requests",
        "operationId" : "getCertificateRequests",
        "parameters" : [ {
          "description" : "The unique pkiId Id",
          "explode" : false,
          "in" : "path",
          "name" : "pkiId",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CertificateRequests"
                }
              }
            },
            "description" : "Array of subscriptions"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "example" : {
                  "type" : "about:blank",
                  "title" : "Http client error",
                  "detail" : "Unauthorized (401)",
                  "status" : 401,
                  "instance" : "scheduler/admin",
                  "mainDiagnosisCode" : "080E0200",
                  "detailedDiagnosisCode" : "0C7A0203",
                  "severity" : "Error"
                },
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Not authorized to access this resource"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "example" : {
                  "type" : "about:blank",
                  "title" : "Http client error",
                  "detail" : "Forbidden (403)",
                  "status" : 403,
                  "instance" : "scheduler/admin/state",
                  "mainDiagnosisCode" : "080E0200",
                  "detailedDiagnosisCode" : "0C7A0204",
                  "severity" : "Error",
                  "moreInfo" : {
                    "requiredPermissions" : "rexroth-automation.datalayer.rw, rexroth-device.all.rwx"
                  }
                },
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Access forbidden for this resource"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "example" : {
                  "type" : "about:blank",
                  "title" : "Http client error",
                  "detail" : "Not found (404)",
                  "status" : 404,
                  "instance" : "scheduler/not-available",
                  "mainDiagnosisCode" : "080E0200",
                  "detailedDiagnosisCode" : "0C7A0205",
                  "severity" : "Error"
                },
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "The resource was not found"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "example" : {
                  "type" : "about:blank",
                  "title" : "Http server error",
                  "detail" : "Internal server error (500)",
                  "status" : 500,
                  "instance" : "scheduler/admin",
                  "mainDiagnosisCode" : "080F0200",
                  "detailedDiagnosisCode" : "0C7A0200",
                  "severity" : "Error",
                  "moreInfo" : {
                    "trace" : "ExampleClass.cpp#452 Null pointer exception"
                  }
                },
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Something unexpected happened on the server"
          }
        },
        "tags" : [ "PKI Configurations" ]
      },
      "post" : {
        "description" : "Add a new certificate request.",
        "operationId" : "addCertificateRequest",
        "parameters" : [ {
          "description" : "The unique pkiId Id",
          "explode" : false,
          "in" : "path",
          "name" : "pkiId",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CertificateRequest"
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CertificateRequest"
                }
              }
            },
            "description" : "Config created",
            "headers" : {
              "Location" : {
                "explode" : false,
                "schema" : {
                  "description" : "Location of the created configuration",
                  "example" : "/certificate-manager/api/v2/pkis/123/certificate-requests/321",
                  "type" : "string"
                },
                "style" : "simple"
              }
            }
          },
          "400" : {
            "content" : {
              "application/json" : {
                "example" : {
                  "type" : "about:blank",
                  "title" : "Loading configuration failed",
                  "status" : 400,
                  "instance" : "/solutions/configuration",
                  "mainDiagnosisCode" : "080F0400",
                  "severity" : "Warning",
                  "links" : [ "https://docs.automation.boschrexroth.com/cdphelp?tkeyword=080F0400" ],
                  "cause" : [ {
                    "type" : "about:blank",
                    "title" : "Error in system configuration",
                    "detail" : "Creation and deletion of motion objects is only allowed in CONFIGURATION state",
                    "status" : 400,
                    "instance" : "/automation/api/v2/nodes/motion/cmd/opstate",
                    "mainDiagnosisCode" : "090F2020",
                    "detailedDiagnosisCode" : "0C560203",
                    "severity" : "Warning",
                    "links" : [ "https://docs.automation.boschrexroth.com/cdphelp?tkeyword=0C560203" ]
                  }, {
                    "type" : "about:blank",
                    "title" : "Error in PLC configuration",
                    "detail" : "Loading the configuration in the “RUN” state is not permitted",
                    "status" : 400,
                    "instance" : "/automation/api/v2/nodes/plc/cmd/run",
                    "mainDiagnosisCode" : "0A0F0020",
                    "detailedDiagnosisCode" : "0C280100",
                    "severity" : "Warning",
                    "links" : [ "https://docs.automation.boschrexroth.com/cdphelp?tkeyword=0C280100" ]
                  } ]
                },
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "The request is incomplete or malformed"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "example" : {
                  "type" : "about:blank",
                  "title" : "Http client error",
                  "detail" : "Unauthorized (401)",
                  "status" : 401,
                  "instance" : "scheduler/admin",
                  "mainDiagnosisCode" : "080E0200",
                  "detailedDiagnosisCode" : "0C7A0203",
                  "severity" : "Error"
                },
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Not authorized to access this resource"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "example" : {
                  "type" : "about:blank",
                  "title" : "Http client error",
                  "detail" : "Forbidden (403)",
                  "status" : 403,
                  "instance" : "scheduler/admin/state",
                  "mainDiagnosisCode" : "080E0200",
                  "detailedDiagnosisCode" : "0C7A0204",
                  "severity" : "Error",
                  "moreInfo" : {
                    "requiredPermissions" : "rexroth-automation.datalayer.rw, rexroth-device.all.rwx"
                  }
                },
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Access forbidden for this resource"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "example" : {
                  "type" : "about:blank",
                  "title" : "Http client error",
                  "detail" : "Not found (404)",
                  "status" : 404,
                  "instance" : "scheduler/not-available",
                  "mainDiagnosisCode" : "080E0200",
                  "detailedDiagnosisCode" : "0C7A0205",
                  "severity" : "Error"
                },
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "The resource was not found"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "example" : {
                  "type" : "about:blank",
                  "title" : "Http server error",
                  "detail" : "Internal server error (500)",
                  "status" : 500,
                  "instance" : "scheduler/admin",
                  "mainDiagnosisCode" : "080F0200",
                  "detailedDiagnosisCode" : "0C7A0200",
                  "severity" : "Error",
                  "moreInfo" : {
                    "trace" : "ExampleClass.cpp#452 Null pointer exception"
                  }
                },
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Something unexpected happened on the server"
          }
        },
        "tags" : [ "PKI Configurations" ]
      }
    },
    "/subscriptions" : {
      "get" : {
        "description" : "Get all certificate renewal subscriptions",
        "operationId" : "getAllSubscriptions",
        "parameters" : [ {
          "description" : "Find subscription to specific certificate id",
          "explode" : true,
          "in" : "query",
          "name" : "certificateId",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Subscriptions"
                }
              }
            },
            "description" : "Returns all subscriptions."
          },
          "401" : {
            "content" : {
              "application/json" : {
                "example" : {
                  "type" : "about:blank",
                  "title" : "Http client error",
                  "detail" : "Unauthorized (401)",
                  "status" : 401,
                  "instance" : "scheduler/admin",
                  "mainDiagnosisCode" : "080E0200",
                  "detailedDiagnosisCode" : "0C7A0203",
                  "severity" : "Error"
                },
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Not authorized to access this resource"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "example" : {
                  "type" : "about:blank",
                  "title" : "Http client error",
                  "detail" : "Forbidden (403)",
                  "status" : 403,
                  "instance" : "scheduler/admin/state",
                  "mainDiagnosisCode" : "080E0200",
                  "detailedDiagnosisCode" : "0C7A0204",
                  "severity" : "Error",
                  "moreInfo" : {
                    "requiredPermissions" : "rexroth-automation.datalayer.rw, rexroth-device.all.rwx"
                  }
                },
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Access forbidden for this resource"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "example" : {
                  "type" : "about:blank",
                  "title" : "Http client error",
                  "detail" : "Not found (404)",
                  "status" : 404,
                  "instance" : "scheduler/not-available",
                  "mainDiagnosisCode" : "080E0200",
                  "detailedDiagnosisCode" : "0C7A0205",
                  "severity" : "Error"
                },
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "The resource was not found"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "example" : {
                  "type" : "about:blank",
                  "title" : "Http server error",
                  "detail" : "Internal server error (500)",
                  "status" : 500,
                  "instance" : "scheduler/admin",
                  "mainDiagnosisCode" : "080F0200",
                  "detailedDiagnosisCode" : "0C7A0200",
                  "severity" : "Error",
                  "moreInfo" : {
                    "trace" : "ExampleClass.cpp#452 Null pointer exception"
                  }
                },
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Something unexpected happened on the server"
          }
        },
        "tags" : [ "PKI Configurations" ]
      },
      "post" : {
        "description" : "Add a new subscription.",
        "operationId" : "addSubscription",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Subscription"
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Subscription"
                }
              }
            },
            "description" : "Config created",
            "headers" : {
              "Location" : {
                "explode" : false,
                "schema" : {
                  "description" : "Location of the created configuration",
                  "example" : "/certificate-manager/api/v2/subscriptions/321",
                  "type" : "string"
                },
                "style" : "simple"
              }
            }
          },
          "400" : {
            "content" : {
              "application/json" : {
                "example" : {
                  "type" : "about:blank",
                  "title" : "Loading configuration failed",
                  "status" : 400,
                  "instance" : "/solutions/configuration",
                  "mainDiagnosisCode" : "080F0400",
                  "severity" : "Warning",
                  "links" : [ "https://docs.automation.boschrexroth.com/cdphelp?tkeyword=080F0400" ],
                  "cause" : [ {
                    "type" : "about:blank",
                    "title" : "Error in system configuration",
                    "detail" : "Creation and deletion of motion objects is only allowed in CONFIGURATION state",
                    "status" : 400,
                    "instance" : "/automation/api/v2/nodes/motion/cmd/opstate",
                    "mainDiagnosisCode" : "090F2020",
                    "detailedDiagnosisCode" : "0C560203",
                    "severity" : "Warning",
                    "links" : [ "https://docs.automation.boschrexroth.com/cdphelp?tkeyword=0C560203" ]
                  }, {
                    "type" : "about:blank",
                    "title" : "Error in PLC configuration",
                    "detail" : "Loading the configuration in the “RUN” state is not permitted",
                    "status" : 400,
                    "instance" : "/automation/api/v2/nodes/plc/cmd/run",
                    "mainDiagnosisCode" : "0A0F0020",
                    "detailedDiagnosisCode" : "0C280100",
                    "severity" : "Warning",
                    "links" : [ "https://docs.automation.boschrexroth.com/cdphelp?tkeyword=0C280100" ]
                  } ]
                },
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "The request is incomplete or malformed"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "example" : {
                  "type" : "about:blank",
                  "title" : "Http client error",
                  "detail" : "Unauthorized (401)",
                  "status" : 401,
                  "instance" : "scheduler/admin",
                  "mainDiagnosisCode" : "080E0200",
                  "detailedDiagnosisCode" : "0C7A0203",
                  "severity" : "Error"
                },
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Not authorized to access this resource"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "example" : {
                  "type" : "about:blank",
                  "title" : "Http client error",
                  "detail" : "Forbidden (403)",
                  "status" : 403,
                  "instance" : "scheduler/admin/state",
                  "mainDiagnosisCode" : "080E0200",
                  "detailedDiagnosisCode" : "0C7A0204",
                  "severity" : "Error",
                  "moreInfo" : {
                    "requiredPermissions" : "rexroth-automation.datalayer.rw, rexroth-device.all.rwx"
                  }
                },
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Access forbidden for this resource"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "example" : {
                  "type" : "about:blank",
                  "title" : "Http client error",
                  "detail" : "Not found (404)",
                  "status" : 404,
                  "instance" : "scheduler/not-available",
                  "mainDiagnosisCode" : "080E0200",
                  "detailedDiagnosisCode" : "0C7A0205",
                  "severity" : "Error"
                },
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "The resource was not found"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "example" : {
                  "type" : "about:blank",
                  "title" : "Http server error",
                  "detail" : "Internal server error (500)",
                  "status" : 500,
                  "instance" : "scheduler/admin",
                  "mainDiagnosisCode" : "080F0200",
                  "detailedDiagnosisCode" : "0C7A0200",
                  "severity" : "Error",
                  "moreInfo" : {
                    "trace" : "ExampleClass.cpp#452 Null pointer exception"
                  }
                },
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Something unexpected happened on the server"
          }
        },
        "tags" : [ "PKI Configurations" ]
      }
    },
    "/subscriptions/{subscriptionId}" : {
      "delete" : {
        "description" : "Deletes a pki subscription",
        "operationId" : "deleteSubscription",
        "parameters" : [ {
          "description" : "The unique subscriptionId Id",
          "explode" : false,
          "in" : "path",
          "name" : "subscriptionId",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "204" : {
            "description" : "Deleted successfully"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "example" : {
                  "type" : "about:blank",
                  "title" : "Loading configuration failed",
                  "status" : 400,
                  "instance" : "/solutions/configuration",
                  "mainDiagnosisCode" : "080F0400",
                  "severity" : "Warning",
                  "links" : [ "https://docs.automation.boschrexroth.com/cdphelp?tkeyword=080F0400" ],
                  "cause" : [ {
                    "type" : "about:blank",
                    "title" : "Error in system configuration",
                    "detail" : "Creation and deletion of motion objects is only allowed in CONFIGURATION state",
                    "status" : 400,
                    "instance" : "/automation/api/v2/nodes/motion/cmd/opstate",
                    "mainDiagnosisCode" : "090F2020",
                    "detailedDiagnosisCode" : "0C560203",
                    "severity" : "Warning",
                    "links" : [ "https://docs.automation.boschrexroth.com/cdphelp?tkeyword=0C560203" ]
                  }, {
                    "type" : "about:blank",
                    "title" : "Error in PLC configuration",
                    "detail" : "Loading the configuration in the “RUN” state is not permitted",
                    "status" : 400,
                    "instance" : "/automation/api/v2/nodes/plc/cmd/run",
                    "mainDiagnosisCode" : "0A0F0020",
                    "detailedDiagnosisCode" : "0C280100",
                    "severity" : "Warning",
                    "links" : [ "https://docs.automation.boschrexroth.com/cdphelp?tkeyword=0C280100" ]
                  } ]
                },
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "The request is incomplete or malformed"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "example" : {
                  "type" : "about:blank",
                  "title" : "Http client error",
                  "detail" : "Unauthorized (401)",
                  "status" : 401,
                  "instance" : "scheduler/admin",
                  "mainDiagnosisCode" : "080E0200",
                  "detailedDiagnosisCode" : "0C7A0203",
                  "severity" : "Error"
                },
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Not authorized to access this resource"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "example" : {
                  "type" : "about:blank",
                  "title" : "Http client error",
                  "detail" : "Forbidden (403)",
                  "status" : 403,
                  "instance" : "scheduler/admin/state",
                  "mainDiagnosisCode" : "080E0200",
                  "detailedDiagnosisCode" : "0C7A0204",
                  "severity" : "Error",
                  "moreInfo" : {
                    "requiredPermissions" : "rexroth-automation.datalayer.rw, rexroth-device.all.rwx"
                  }
                },
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Access forbidden for this resource"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "example" : {
                  "type" : "about:blank",
                  "title" : "Http client error",
                  "detail" : "Not found (404)",
                  "status" : 404,
                  "instance" : "scheduler/not-available",
                  "mainDiagnosisCode" : "080E0200",
                  "detailedDiagnosisCode" : "0C7A0205",
                  "severity" : "Error"
                },
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "The resource was not found"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "example" : {
                  "type" : "about:blank",
                  "title" : "Http server error",
                  "detail" : "Internal server error (500)",
                  "status" : 500,
                  "instance" : "scheduler/admin",
                  "mainDiagnosisCode" : "080F0200",
                  "detailedDiagnosisCode" : "0C7A0200",
                  "severity" : "Error",
                  "moreInfo" : {
                    "trace" : "ExampleClass.cpp#452 Null pointer exception"
                  }
                },
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Something unexpected happened on the server"
          }
        },
        "tags" : [ "PKI Configurations" ]
      },
      "get" : {
        "description" : "Get pki subscription",
        "operationId" : "getSubscription",
        "parameters" : [ {
          "description" : "The unique subscriptionId Id",
          "explode" : false,
          "in" : "path",
          "name" : "subscriptionId",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Subscription"
                }
              }
            },
            "description" : "Returns an subscription."
          },
          "401" : {
            "content" : {
              "application/json" : {
                "example" : {
                  "type" : "about:blank",
                  "title" : "Http client error",
                  "detail" : "Unauthorized (401)",
                  "status" : 401,
                  "instance" : "scheduler/admin",
                  "mainDiagnosisCode" : "080E0200",
                  "detailedDiagnosisCode" : "0C7A0203",
                  "severity" : "Error"
                },
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Not authorized to access this resource"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "example" : {
                  "type" : "about:blank",
                  "title" : "Http client error",
                  "detail" : "Forbidden (403)",
                  "status" : 403,
                  "instance" : "scheduler/admin/state",
                  "mainDiagnosisCode" : "080E0200",
                  "detailedDiagnosisCode" : "0C7A0204",
                  "severity" : "Error",
                  "moreInfo" : {
                    "requiredPermissions" : "rexroth-automation.datalayer.rw, rexroth-device.all.rwx"
                  }
                },
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Access forbidden for this resource"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "example" : {
                  "type" : "about:blank",
                  "title" : "Http client error",
                  "detail" : "Not found (404)",
                  "status" : 404,
                  "instance" : "scheduler/not-available",
                  "mainDiagnosisCode" : "080E0200",
                  "detailedDiagnosisCode" : "0C7A0205",
                  "severity" : "Error"
                },
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "The resource was not found"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "example" : {
                  "type" : "about:blank",
                  "title" : "Http server error",
                  "detail" : "Internal server error (500)",
                  "status" : 500,
                  "instance" : "scheduler/admin",
                  "mainDiagnosisCode" : "080F0200",
                  "detailedDiagnosisCode" : "0C7A0200",
                  "severity" : "Error",
                  "moreInfo" : {
                    "trace" : "ExampleClass.cpp#452 Null pointer exception"
                  }
                },
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Something unexpected happened on the server"
          }
        },
        "tags" : [ "PKI Configurations" ]
      },
      "put" : {
        "description" : "Modify pki subscription",
        "operationId" : "setSubscription",
        "parameters" : [ {
          "description" : "The unique subscriptionId Id",
          "explode" : false,
          "in" : "path",
          "name" : "subscriptionId",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Subscription"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Subscription"
                }
              }
            },
            "description" : "The modified pki subscription"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "example" : {
                  "type" : "about:blank",
                  "title" : "Http client error",
                  "detail" : "Unauthorized (401)",
                  "status" : 401,
                  "instance" : "scheduler/admin",
                  "mainDiagnosisCode" : "080E0200",
                  "detailedDiagnosisCode" : "0C7A0203",
                  "severity" : "Error"
                },
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Not authorized to access this resource"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "example" : {
                  "type" : "about:blank",
                  "title" : "Http client error",
                  "detail" : "Forbidden (403)",
                  "status" : 403,
                  "instance" : "scheduler/admin/state",
                  "mainDiagnosisCode" : "080E0200",
                  "detailedDiagnosisCode" : "0C7A0204",
                  "severity" : "Error",
                  "moreInfo" : {
                    "requiredPermissions" : "rexroth-automation.datalayer.rw, rexroth-device.all.rwx"
                  }
                },
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Access forbidden for this resource"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "example" : {
                  "type" : "about:blank",
                  "title" : "Http client error",
                  "detail" : "Not found (404)",
                  "status" : 404,
                  "instance" : "scheduler/not-available",
                  "mainDiagnosisCode" : "080E0200",
                  "detailedDiagnosisCode" : "0C7A0205",
                  "severity" : "Error"
                },
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "The resource was not found"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "example" : {
                  "type" : "about:blank",
                  "title" : "Http server error",
                  "detail" : "Internal server error (500)",
                  "status" : 500,
                  "instance" : "scheduler/admin",
                  "mainDiagnosisCode" : "080F0200",
                  "detailedDiagnosisCode" : "0C7A0200",
                  "severity" : "Error",
                  "moreInfo" : {
                    "trace" : "ExampleClass.cpp#452 Null pointer exception"
                  }
                },
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Something unexpected happened on the server"
          }
        },
        "tags" : [ "PKI Configurations" ]
      }
    },
    "/pkis/{pkiId}/enrollments" : {
      "get" : {
        "description" : "Get all certificate enrollment requests",
        "operationId" : "getEnrollments",
        "parameters" : [ {
          "description" : "The unique pkiId Id",
          "explode" : false,
          "in" : "path",
          "name" : "pkiId",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Enrollments"
                }
              }
            },
            "description" : "Array of subscriptions"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "example" : {
                  "type" : "about:blank",
                  "title" : "Http client error",
                  "detail" : "Unauthorized (401)",
                  "status" : 401,
                  "instance" : "scheduler/admin",
                  "mainDiagnosisCode" : "080E0200",
                  "detailedDiagnosisCode" : "0C7A0203",
                  "severity" : "Error"
                },
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Not authorized to access this resource"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "example" : {
                  "type" : "about:blank",
                  "title" : "Http client error",
                  "detail" : "Forbidden (403)",
                  "status" : 403,
                  "instance" : "scheduler/admin/state",
                  "mainDiagnosisCode" : "080E0200",
                  "detailedDiagnosisCode" : "0C7A0204",
                  "severity" : "Error",
                  "moreInfo" : {
                    "requiredPermissions" : "rexroth-automation.datalayer.rw, rexroth-device.all.rwx"
                  }
                },
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Access forbidden for this resource"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "example" : {
                  "type" : "about:blank",
                  "title" : "Http client error",
                  "detail" : "Not found (404)",
                  "status" : 404,
                  "instance" : "scheduler/not-available",
                  "mainDiagnosisCode" : "080E0200",
                  "detailedDiagnosisCode" : "0C7A0205",
                  "severity" : "Error"
                },
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "The resource was not found"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "example" : {
                  "type" : "about:blank",
                  "title" : "Http server error",
                  "detail" : "Internal server error (500)",
                  "status" : 500,
                  "instance" : "scheduler/admin",
                  "mainDiagnosisCode" : "080F0200",
                  "detailedDiagnosisCode" : "0C7A0200",
                  "severity" : "Error",
                  "moreInfo" : {
                    "trace" : "ExampleClass.cpp#452 Null pointer exception"
                  }
                },
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Something unexpected happened on the server"
          }
        },
        "tags" : [ "PKI Configurations" ]
      },
      "post" : {
        "description" : "Add a new initial certificate request.",
        "operationId" : "addEnrollment",
        "parameters" : [ {
          "description" : "The unique pkiId Id",
          "explode" : false,
          "in" : "path",
          "name" : "pkiId",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Enrollment"
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Enrollment"
                }
              }
            },
            "description" : "Config created",
            "headers" : {
              "Location" : {
                "explode" : false,
                "schema" : {
                  "description" : "Location of the created configuration",
                  "example" : "/certificate-manager/api/v2/pkis/123/certificate-requests/321",
                  "type" : "string"
                },
                "style" : "simple"
              }
            }
          },
          "400" : {
            "content" : {
              "application/json" : {
                "example" : {
                  "type" : "about:blank",
                  "title" : "Loading configuration failed",
                  "status" : 400,
                  "instance" : "/solutions/configuration",
                  "mainDiagnosisCode" : "080F0400",
                  "severity" : "Warning",
                  "links" : [ "https://docs.automation.boschrexroth.com/cdphelp?tkeyword=080F0400" ],
                  "cause" : [ {
                    "type" : "about:blank",
                    "title" : "Error in system configuration",
                    "detail" : "Creation and deletion of motion objects is only allowed in CONFIGURATION state",
                    "status" : 400,
                    "instance" : "/automation/api/v2/nodes/motion/cmd/opstate",
                    "mainDiagnosisCode" : "090F2020",
                    "detailedDiagnosisCode" : "0C560203",
                    "severity" : "Warning",
                    "links" : [ "https://docs.automation.boschrexroth.com/cdphelp?tkeyword=0C560203" ]
                  }, {
                    "type" : "about:blank",
                    "title" : "Error in PLC configuration",
                    "detail" : "Loading the configuration in the “RUN” state is not permitted",
                    "status" : 400,
                    "instance" : "/automation/api/v2/nodes/plc/cmd/run",
                    "mainDiagnosisCode" : "0A0F0020",
                    "detailedDiagnosisCode" : "0C280100",
                    "severity" : "Warning",
                    "links" : [ "https://docs.automation.boschrexroth.com/cdphelp?tkeyword=0C280100" ]
                  } ]
                },
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "The request is incomplete or malformed"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "example" : {
                  "type" : "about:blank",
                  "title" : "Http client error",
                  "detail" : "Unauthorized (401)",
                  "status" : 401,
                  "instance" : "scheduler/admin",
                  "mainDiagnosisCode" : "080E0200",
                  "detailedDiagnosisCode" : "0C7A0203",
                  "severity" : "Error"
                },
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Not authorized to access this resource"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "example" : {
                  "type" : "about:blank",
                  "title" : "Http client error",
                  "detail" : "Forbidden (403)",
                  "status" : 403,
                  "instance" : "scheduler/admin/state",
                  "mainDiagnosisCode" : "080E0200",
                  "detailedDiagnosisCode" : "0C7A0204",
                  "severity" : "Error",
                  "moreInfo" : {
                    "requiredPermissions" : "rexroth-automation.datalayer.rw, rexroth-device.all.rwx"
                  }
                },
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Access forbidden for this resource"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "example" : {
                  "type" : "about:blank",
                  "title" : "Http client error",
                  "detail" : "Not found (404)",
                  "status" : 404,
                  "instance" : "scheduler/not-available",
                  "mainDiagnosisCode" : "080E0200",
                  "detailedDiagnosisCode" : "0C7A0205",
                  "severity" : "Error"
                },
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "The resource was not found"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "example" : {
                  "type" : "about:blank",
                  "title" : "Http server error",
                  "detail" : "Internal server error (500)",
                  "status" : 500,
                  "instance" : "scheduler/admin",
                  "mainDiagnosisCode" : "080F0200",
                  "detailedDiagnosisCode" : "0C7A0200",
                  "severity" : "Error",
                  "moreInfo" : {
                    "trace" : "ExampleClass.cpp#452 Null pointer exception"
                  }
                },
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Something unexpected happened on the server"
          }
        },
        "tags" : [ "PKI Configurations" ]
      }
    },
    "/pkis/{pkiId}/enrollments/{enrollmentId}" : {
      "get" : {
        "description" : "Get enrollment request",
        "operationId" : "getEnrollment",
        "parameters" : [ {
          "description" : "The unique pkiId Id",
          "explode" : false,
          "in" : "path",
          "name" : "pkiId",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "The unique enrollment id",
          "explode" : false,
          "in" : "path",
          "name" : "enrollmentId",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Enrollment"
                }
              }
            },
            "description" : "Returns an pki subscription."
          },
          "401" : {
            "content" : {
              "application/json" : {
                "example" : {
                  "type" : "about:blank",
                  "title" : "Http client error",
                  "detail" : "Unauthorized (401)",
                  "status" : 401,
                  "instance" : "scheduler/admin",
                  "mainDiagnosisCode" : "080E0200",
                  "detailedDiagnosisCode" : "0C7A0203",
                  "severity" : "Error"
                },
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Not authorized to access this resource"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "example" : {
                  "type" : "about:blank",
                  "title" : "Http client error",
                  "detail" : "Forbidden (403)",
                  "status" : 403,
                  "instance" : "scheduler/admin/state",
                  "mainDiagnosisCode" : "080E0200",
                  "detailedDiagnosisCode" : "0C7A0204",
                  "severity" : "Error",
                  "moreInfo" : {
                    "requiredPermissions" : "rexroth-automation.datalayer.rw, rexroth-device.all.rwx"
                  }
                },
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Access forbidden for this resource"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "example" : {
                  "type" : "about:blank",
                  "title" : "Http client error",
                  "detail" : "Not found (404)",
                  "status" : 404,
                  "instance" : "scheduler/not-available",
                  "mainDiagnosisCode" : "080E0200",
                  "detailedDiagnosisCode" : "0C7A0205",
                  "severity" : "Error"
                },
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "The resource was not found"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "example" : {
                  "type" : "about:blank",
                  "title" : "Http server error",
                  "detail" : "Internal server error (500)",
                  "status" : 500,
                  "instance" : "scheduler/admin",
                  "mainDiagnosisCode" : "080F0200",
                  "detailedDiagnosisCode" : "0C7A0200",
                  "severity" : "Error",
                  "moreInfo" : {
                    "trace" : "ExampleClass.cpp#452 Null pointer exception"
                  }
                },
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Something unexpected happened on the server"
          }
        },
        "tags" : [ "PKI Configurations" ]
      }
    },
    "/tasks" : {
      "get" : {
        "description" : "Receive the list of created tasks",
        "operationId" : "getTasks",
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Tasks"
                }
              }
            },
            "description" : "List of Tasks"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "example" : {
                  "type" : "about:blank",
                  "title" : "Http client error",
                  "detail" : "Unauthorized (401)",
                  "status" : 401,
                  "instance" : "scheduler/admin",
                  "mainDiagnosisCode" : "080E0200",
                  "detailedDiagnosisCode" : "0C7A0203",
                  "severity" : "Error"
                },
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Not authorized to access this resource"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "example" : {
                  "type" : "about:blank",
                  "title" : "Http client error",
                  "detail" : "Forbidden (403)",
                  "status" : 403,
                  "instance" : "scheduler/admin/state",
                  "mainDiagnosisCode" : "080E0200",
                  "detailedDiagnosisCode" : "0C7A0204",
                  "severity" : "Error",
                  "moreInfo" : {
                    "requiredPermissions" : "rexroth-automation.datalayer.rw, rexroth-device.all.rwx"
                  }
                },
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Access forbidden for this resource"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "example" : {
                  "type" : "about:blank",
                  "title" : "Http server error",
                  "detail" : "Internal server error (500)",
                  "status" : 500,
                  "instance" : "scheduler/admin",
                  "mainDiagnosisCode" : "080F0200",
                  "detailedDiagnosisCode" : "0C7A0200",
                  "severity" : "Error",
                  "moreInfo" : {
                    "trace" : "ExampleClass.cpp#452 Null pointer exception"
                  }
                },
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Something unexpected happened on the server"
          }
        },
        "tags" : [ "Tasks" ]
      },
      "post" : {
        "description" : "Create a new task",
        "operationId" : "createTask",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "examples" : {
                "copyTaskRequest" : {
                  "$ref" : "#/components/examples/copyTaskRequest"
                },
                "moveTaskRequest" : {
                  "$ref" : "#/components/examples/moveTaskRequest"
                },
                "genKeyTaskRequest" : {
                  "$ref" : "#/components/examples/genKeyTaskRequest"
                },
                "importPkcs12TaskRequest" : {
                  "$ref" : "#/components/examples/importPkcs12TaskRequest"
                },
                "exportPkcs12TaskRequest" : {
                  "$ref" : "#/components/examples/exportPkcs12TaskRequest"
                },
                "extractTaskRequest" : {
                  "$ref" : "#/components/examples/extractTaskRequest"
                },
                "selfsignedCertTaskRequest" : {
                  "$ref" : "#/components/examples/selfsignedCertTaskRequest"
                }
              },
              "schema" : {
                "$ref" : "#/components/schemas/OneOfTasks"
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "content" : {
              "application/json" : {
                "examples" : {
                  "copyTaskResponse" : {
                    "$ref" : "#/components/examples/copyTaskResponse"
                  },
                  "moveTaskResponse" : {
                    "$ref" : "#/components/examples/moveTaskResponse"
                  },
                  "genKeyTaskResponse" : {
                    "$ref" : "#/components/examples/genKeyTaskResponse"
                  },
                  "importPkcs12TaskResponse" : {
                    "$ref" : "#/components/examples/importPkcs12TaskResponse"
                  },
                  "exportPkcs12TaskResponse" : {
                    "$ref" : "#/components/examples/exportPkcs12TaskResponse"
                  },
                  "extractTaskResponse" : {
                    "$ref" : "#/components/examples/extractTaskResponse"
                  },
                  "selfsignedCertTaskResponse" : {
                    "$ref" : "#/components/examples/selfsignedCertTaskResponse"
                  }
                },
                "schema" : {
                  "$ref" : "#/components/schemas/OneOfTasks"
                }
              }
            },
            "description" : "Task created",
            "headers" : {
              "Location" : {
                "explode" : false,
                "schema" : {
                  "description" : "Location of the created task",
                  "example" : "/certificate-manager/api/v2/tasks/123",
                  "type" : "string"
                },
                "style" : "simple"
              }
            }
          },
          "401" : {
            "content" : {
              "application/json" : {
                "example" : {
                  "type" : "about:blank",
                  "title" : "Http client error",
                  "detail" : "Unauthorized (401)",
                  "status" : 401,
                  "instance" : "scheduler/admin",
                  "mainDiagnosisCode" : "080E0200",
                  "detailedDiagnosisCode" : "0C7A0203",
                  "severity" : "Error"
                },
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Not authorized to access this resource"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "example" : {
                  "type" : "about:blank",
                  "title" : "Http client error",
                  "detail" : "Forbidden (403)",
                  "status" : 403,
                  "instance" : "scheduler/admin/state",
                  "mainDiagnosisCode" : "080E0200",
                  "detailedDiagnosisCode" : "0C7A0204",
                  "severity" : "Error",
                  "moreInfo" : {
                    "requiredPermissions" : "rexroth-automation.datalayer.rw, rexroth-device.all.rwx"
                  }
                },
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Access forbidden for this resource"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "example" : {
                  "type" : "about:blank",
                  "title" : "Http server error",
                  "detail" : "Internal server error (500)",
                  "status" : 500,
                  "instance" : "scheduler/admin",
                  "mainDiagnosisCode" : "080F0200",
                  "detailedDiagnosisCode" : "0C7A0200",
                  "severity" : "Error",
                  "moreInfo" : {
                    "trace" : "ExampleClass.cpp#452 Null pointer exception"
                  }
                },
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Something unexpected happened on the server"
          }
        },
        "tags" : [ "Tasks" ]
      }
    },
    "/tasks/{taskId}" : {
      "get" : {
        "description" : "Receive information about a task",
        "operationId" : "getTask",
        "parameters" : [ {
          "description" : "The unique task Id",
          "explode" : false,
          "in" : "path",
          "name" : "taskId",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "examples" : {
                  "copyTaskResponse" : {
                    "$ref" : "#/components/examples/copyTaskResponse"
                  },
                  "moveTaskResponse" : {
                    "$ref" : "#/components/examples/moveTaskResponse"
                  },
                  "genKeyTaskResponse" : {
                    "$ref" : "#/components/examples/genKeyTaskResponse"
                  },
                  "extractTaskResponse" : {
                    "$ref" : "#/components/examples/extractTaskResponse"
                  },
                  "importPkcs12TaskResponse" : {
                    "$ref" : "#/components/examples/importPkcs12TaskResponse"
                  },
                  "exportPkcs12TaskResponse" : {
                    "$ref" : "#/components/examples/exportPkcs12TaskResponse"
                  }
                },
                "schema" : {
                  "$ref" : "#/components/schemas/OneOfTasks"
                }
              }
            },
            "description" : "Done - Task information"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "example" : {
                  "type" : "about:blank",
                  "title" : "Http client error",
                  "detail" : "Unauthorized (401)",
                  "status" : 401,
                  "instance" : "scheduler/admin",
                  "mainDiagnosisCode" : "080E0200",
                  "detailedDiagnosisCode" : "0C7A0203",
                  "severity" : "Error"
                },
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Not authorized to access this resource"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "example" : {
                  "type" : "about:blank",
                  "title" : "Http client error",
                  "detail" : "Forbidden (403)",
                  "status" : 403,
                  "instance" : "scheduler/admin/state",
                  "mainDiagnosisCode" : "080E0200",
                  "detailedDiagnosisCode" : "0C7A0204",
                  "severity" : "Error",
                  "moreInfo" : {
                    "requiredPermissions" : "rexroth-automation.datalayer.rw, rexroth-device.all.rwx"
                  }
                },
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Access forbidden for this resource"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "example" : {
                  "type" : "about:blank",
                  "title" : "Http client error",
                  "detail" : "Not found (404)",
                  "status" : 404,
                  "instance" : "scheduler/not-available",
                  "mainDiagnosisCode" : "080E0200",
                  "detailedDiagnosisCode" : "0C7A0205",
                  "severity" : "Error"
                },
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "The resource was not found"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "example" : {
                  "type" : "about:blank",
                  "title" : "Http server error",
                  "detail" : "Internal server error (500)",
                  "status" : 500,
                  "instance" : "scheduler/admin",
                  "mainDiagnosisCode" : "080F0200",
                  "detailedDiagnosisCode" : "0C7A0200",
                  "severity" : "Error",
                  "moreInfo" : {
                    "trace" : "ExampleClass.cpp#452 Null pointer exception"
                  }
                },
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Something unexpected happened on the server"
          }
        },
        "tags" : [ "Tasks" ]
      }
    }
  },
  "components" : {
    "examples" : {
      "copyTaskRequest" : {
        "value" : {
          "action" : "copy",
          "parameters" : {
            "itemId" : "fe6a4075a1c326a04398e30ea7cf4c194e22e43071a764d543e69453c4db3234",
            "itemType" : "certificate",
            "srcApplicationId" : "permantent",
            "dstApplicationId" : "vpnmanager",
            "dstCategory" : "own"
          }
        }
      },
      "copyTaskResponse" : {
        "value" : {
          "id" : "123",
          "state" : "done",
          "progress" : 100,
          "eta" : "2019-01-01T12:00:27.87+00:20",
          "action" : "copy",
          "parameters" : {
            "itemId" : "fe6a4075a1c326a04398e30ea7cf4c194e22e43071a764d543e69453c4db3234",
            "itemType" : "certificate",
            "srcApplicationId" : "permantent",
            "dstApplicationId" : "vpnmanager",
            "dstCategory" : "own"
          }
        }
      },
      "moveTaskRequest" : {
        "value" : {
          "action" : "move",
          "parameters" : {
            "itemId" : "fe6a4075a1c326a04398e30ea7cf4c194e22e43071a764d543e69453c4db3234",
            "itemType" : "certificate",
            "srcApplicationId" : "opcua",
            "dstApplicationId" : "opcua",
            "dstCategory" : "rejected"
          }
        }
      },
      "moveTaskResponse" : {
        "value" : {
          "id" : "123",
          "state" : "done",
          "progress" : 100,
          "eta" : "2019-01-01T12:00:27.87+00:20",
          "action" : "move",
          "parameters" : {
            "itemId" : "fe6a4075a1c326a04398e30ea7cf4c194e22e43071a764d543e69453c4db3234",
            "itemType" : "certificate",
            "srcApplicationId" : "opcua",
            "dstApplicationId" : "opcua",
            "dstCategory" : "rejected"
          }
        }
      },
      "genKeyTaskRequest" : {
        "value" : {
          "action" : "keygen",
          "parameters" : {
            "dstApplicationId" : "vpnmanager",
            "keyLength" : "4096",
            "name" : "privateKey.pem",
            "algorithm" : "RSA",
            "hsm" : false
          }
        }
      },
      "genKeyTaskResponse" : {
        "value" : {
          "id" : "123",
          "state" : "running",
          "progress" : 30,
          "eta" : "2019-01-01T12:00:27.87+00:20",
          "action" : "keygen",
          "parameters" : {
            "dstApplicationId" : "vpnmanager",
            "keyLength" : "4096",
            "name" : "privateKey.pem",
            "algorithm" : "RSA",
            "hsm" : false
          }
        }
      },
      "importPkcs12TaskRequest" : {
        "value" : {
          "action" : "pkcs12import",
          "parameters" : {
            "dstApplicationId" : "opcua",
            "srcContainerId" : "4454a4075a1c326a04398e30ea7cf4c194e22e43071aadfd4d543e69453c4d30307",
            "namePrefix" : "vpn_ctrlX_os_ws2n",
            "passIn" : "mySecretPasswordUsedToDecryptTheContainerDuringImport"
          }
        }
      },
      "importPkcs12TaskResponse" : {
        "value" : {
          "id" : "123",
          "state" : "done",
          "progress" : 100,
          "eta" : "2019-01-01T12:00:27.87+00:20",
          "action" : "pkcs12import",
          "parameters" : {
            "dstApplicationId" : "opcua",
            "srcContainerId" : "4454a4075a1c326a04398e30ea7cf4c194e22e43071aadfd4d543e69453c4d30307",
            "namePrefix" : "vpn_ctrlX_os_ws2n",
            "passIn" : "mySecretPasswordUsedToDecryptTheContainerDuringImport"
          }
        }
      },
      "exportPkcs12TaskRequest" : {
        "value" : {
          "action" : "pkcs12export",
          "parameters" : {
            "srcApplicationId" : "opcua",
            "containerName" : "vpn_ctrlX_os_ws2n.p12",
            "passout" : "mySecretPasswordUsedToEncryptTheContainer",
            "clientCertificateIds" : [ "fe6a4075a1c326a04398e30ea7cf4c194e22e43071a764d543e69453c4db3234" ],
            "caCertificateIds" : [ ],
            "keyIds" : [ "g0006a4075a1c326a0439874527829efac37364593202769453c4db3234" ]
          }
        }
      },
      "exportPkcs12TaskResponse" : {
        "value" : {
          "id" : "123",
          "state" : "done",
          "progress" : 100,
          "eta" : "2019-01-01T12:00:27.87+00:20",
          "action" : "pkcs12export",
          "parameters" : {
            "srcApplicationId" : "opcua",
            "containerName" : "vpn_ctrlX_os_ws2n.p12",
            "passout" : "mySecretPasswordUsedToEncryptTheContainer",
            "clientCertificateIds" : [ "fe6a4075a1c326a04398e30ea7cf4c194e22e43071a764d543e69453c4db3234" ],
            "caCertificateIds" : [ ],
            "keyIds" : [ "g0006a4075a1c326a0439874527829efac37364593202769453c4db3234" ]
          }
        }
      },
      "extractTaskRequest" : {
        "value" : {
          "action" : "extract",
          "parameters" : {
            "itemId" : "fe6a4075a1c326a04398e30ea7cf4c194e22e43071a764d543e69453c4db3234",
            "srcApplicationId" : "opcua",
            "dstCategory" : "own",
            "dstFile" : "example.pem"
          }
        }
      },
      "extractTaskResponse" : {
        "value" : {
          "id" : "123",
          "state" : "done",
          "progress" : 100,
          "eta" : "2019-01-01T12:00:27.87+00:20",
          "action" : "extract",
          "parameters" : {
            "itemId" : "fe6a4075a1c326a04398e30ea7cf4c194e22e43071a764d543e69453c4db3234",
            "srcApplicationId" : "opcua",
            "dstCategory" : "own",
            "dstFile" : "example.pem"
          }
        }
      },
      "selfsignedCertTaskRequest" : {
        "value" : {
          "action" : "createSelfSignedCertificate",
          "parameters" : {
            "applicationId" : "webserver",
            "name" : "self-signed-cert.pem",
            "subject" : {
              "country" : "country",
              "commonName" : "commonName",
              "streetAddress" : "streetAddress",
              "organization" : "organization",
              "postalCode" : "postalCode",
              "locality" : "locality",
              "state" : "state",
              "organizationalUnit" : "organizationalUnit"
            },
            "validDays" : 180,
            "keyId" : "g0006a4075a1c326a0439874527829efac37364593202769453c4db3234"
          }
        }
      },
      "selfsignedCertTaskResponse" : {
        "value" : {
          "id" : "123",
          "state" : "done",
          "progress" : 100,
          "eta" : "2019-01-01T12:00:27.87+00:20",
          "action" : "createSelfSignedCertificate",
          "parameters" : {
            "applicationId" : "webserver",
            "name" : "self-signed-cert.pem",
            "subject" : {
              "country" : "country",
              "commonName" : "commonName",
              "streetAddress" : "streetAddress",
              "organization" : "organization",
              "postalCode" : "postalCode",
              "locality" : "locality",
              "state" : "state",
              "organizationalUnit" : "organizationalUnit"
            },
            "validDays" : 180,
            "keyId" : "g0006a4075a1c326a0439874527829efac37364593202769453c4db3234"
          }
        }
      },
      "ModifyKey" : {
        "value" : {
          "name" : "privateKey.pem"
        }
      },
      "DecryptKey" : {
        "value" : {
          "name" : "privateKey.pem",
          "password" : "secret"
        }
      }
    },
    "parameters" : {
      "applicationId" : {
        "description" : "The unique application Id",
        "explode" : false,
        "in" : "path",
        "name" : "applicationId",
        "required" : true,
        "schema" : {
          "type" : "string"
        },
        "style" : "simple"
      },
      "certificateId" : {
        "description" : "The unique certificate Id",
        "explode" : false,
        "in" : "path",
        "name" : "certificateId",
        "required" : true,
        "schema" : {
          "type" : "string"
        },
        "style" : "simple"
      },
      "keyId" : {
        "description" : "The unique key Id",
        "explode" : false,
        "in" : "path",
        "name" : "keyId",
        "required" : true,
        "schema" : {
          "type" : "string"
        },
        "style" : "simple"
      },
      "pkcs12ContainerId" : {
        "description" : "The unique pkcs12 container id",
        "explode" : false,
        "in" : "path",
        "name" : "pkcs12ContainerId",
        "required" : true,
        "schema" : {
          "type" : "string"
        },
        "style" : "simple"
      },
      "csrId" : {
        "description" : "The unique csr Id",
        "explode" : false,
        "in" : "path",
        "name" : "csrId",
        "required" : true,
        "schema" : {
          "type" : "string"
        },
        "style" : "simple"
      },
      "taskId" : {
        "description" : "The unique task Id",
        "explode" : false,
        "in" : "path",
        "name" : "taskId",
        "required" : true,
        "schema" : {
          "type" : "string"
        },
        "style" : "simple"
      },
      "pkiId" : {
        "description" : "The unique pkiId Id",
        "explode" : false,
        "in" : "path",
        "name" : "pkiId",
        "required" : true,
        "schema" : {
          "type" : "string"
        },
        "style" : "simple"
      },
      "subscriptionId" : {
        "description" : "The unique subscriptionId Id",
        "explode" : false,
        "in" : "path",
        "name" : "subscriptionId",
        "required" : true,
        "schema" : {
          "type" : "string"
        },
        "style" : "simple"
      },
      "certificateRevocationListId" : {
        "description" : "The unique Id of certificate revocation list",
        "explode" : false,
        "in" : "path",
        "name" : "certificateRevocationListId",
        "required" : true,
        "schema" : {
          "type" : "string"
        },
        "style" : "simple"
      },
      "enrollmentId" : {
        "description" : "The unique enrollment id",
        "explode" : false,
        "in" : "path",
        "name" : "enrollmentId",
        "required" : true,
        "schema" : {
          "type" : "string"
        },
        "style" : "simple"
      },
      "cipherkey" : {
        "description" : "Cipherkey to encrypt authentication secrets.",
        "explode" : true,
        "in" : "query",
        "name" : "cipherkey",
        "required" : false,
        "schema" : {
          "type" : "string"
        },
        "style" : "form"
      }
    },
    "schemas" : {
      "CertificateSigningRequestCreateInfo" : {
        "description" : "Contains parameters used to create a csr.",
        "example" : {
          "country" : "country",
          "commonName" : "commonName",
          "certificateExtensions" : {
            "subjectAlternativeNames" : [ [ {
              "type" : "DNSName",
              "value" : "example.com"
            }, {
              "type" : "EmailAddress",
              "value" : "my.mail@example.com"
            }, {
              "type" : "IPAddress",
              "value" : "192.168.1.1"
            }, {
              "type" : "URI",
              "value" : "https://example.com"
            } ], [ {
              "type" : "DNSName",
              "value" : "example.com"
            }, {
              "type" : "EmailAddress",
              "value" : "my.mail@example.com"
            }, {
              "type" : "IPAddress",
              "value" : "192.168.1.1"
            }, {
              "type" : "URI",
              "value" : "https://example.com"
            } ] ]
          },
          "streetAddress" : "streetAddress",
          "organization" : "organization",
          "postalCode" : "postalCode",
          "locality" : "locality",
          "state" : "state",
          "organizationalUnit" : "organizationalUnit"
        },
        "properties" : {
          "country" : {
            "description" : "Country",
            "type" : "string"
          },
          "state" : {
            "description" : "State or province",
            "type" : "string"
          },
          "locality" : {
            "description" : "City",
            "type" : "string"
          },
          "organization" : {
            "description" : "Organization or company name",
            "type" : "string"
          },
          "organizationalUnit" : {
            "description" : "Department or division name",
            "type" : "string"
          },
          "commonName" : {
            "description" : "Common name or fully qualified domain name",
            "type" : "string"
          },
          "streetAddress" : {
            "description" : "Street address",
            "type" : "string"
          },
          "postalCode" : {
            "description" : "Postal code",
            "type" : "string"
          },
          "certificateExtensions" : {
            "$ref" : "#/components/schemas/CertificateExtensions"
          }
        },
        "required" : [ "commonName" ],
        "type" : "object"
      },
      "Certificate" : {
        "example" : {
          "serialnumber" : "1640c5d45d2ec4d94c7d7c6a",
          "subject" : {
            "country" : "country",
            "commonName" : "commonName",
            "streetAddress" : "streetAddress",
            "organization" : "organization",
            "postalCode" : "postalCode",
            "locality" : "locality",
            "state" : "state",
            "organizationalUnit" : "organizationalUnit"
          },
          "publickey" : "publickey",
          "hashalgorithm" : "sha256",
          "version" : "V3",
          "issuer" : {
            "country" : "country",
            "commonName" : "commonName",
            "streetAddress" : "streetAddress",
            "organization" : "organization",
            "postalCode" : "postalCode",
            "locality" : "locality",
            "state" : "state",
            "organizationalUnit" : "organizationalUnit"
          },
          "signaturealgorithm" : "sha256RSA",
          "certificateExtensions" : {
            "subjectAlternativeNames" : [ [ {
              "type" : "DNSName",
              "value" : "example.com"
            }, {
              "type" : "EmailAddress",
              "value" : "my.mail@example.com"
            }, {
              "type" : "IPAddress",
              "value" : "192.168.1.1"
            }, {
              "type" : "URI",
              "value" : "https://example.com"
            } ], [ {
              "type" : "DNSName",
              "value" : "example.com"
            }, {
              "type" : "EmailAddress",
              "value" : "my.mail@example.com"
            }, {
              "type" : "IPAddress",
              "value" : "192.168.1.1"
            }, {
              "type" : "URI",
              "value" : "https://example.com"
            } ] ]
          },
          "publickeyparameters" : "ECDH_P256",
          "name" : "webserver.pem",
          "isCA" : true,
          "validfrom" : 1558946175,
          "id" : "id",
          "validity" : "valid",
          "category" : "ca",
          "validto" : 1645346175
        },
        "properties" : {
          "id" : {
            "description" : "Uniqe identifier of the certificate in the backend.",
            "readOnly" : true,
            "type" : "string"
          },
          "category" : {
            "enum" : [ "ca", "own", "trusted", "rejected" ],
            "type" : "string"
          },
          "name" : {
            "description" : "Filename of the certificate. Must not exceed the maximum length of 128 characters. Can't contain any of these characters '\\/:*?\"<>|' and can not begin or end with space. The names '.' and '..' are forbidden.",
            "example" : "webserver.pem",
            "maxLength" : 128,
            "minLength" : 1,
            "pattern" : "^(?!\\s)(?![\\s\\S]*\\s$)(?!(?:\\.|\\.\\.)$)[^\\\\\\/:*?\"<>|]*$",
            "type" : "string"
          },
          "version" : {
            "example" : "V3",
            "type" : "string"
          },
          "serialnumber" : {
            "example" : "1640c5d45d2ec4d94c7d7c6a",
            "type" : "string"
          },
          "signaturealgorithm" : {
            "example" : "sha256RSA",
            "type" : "string"
          },
          "hashalgorithm" : {
            "example" : "sha256",
            "type" : "string"
          },
          "issuer" : {
            "$ref" : "#/components/schemas/DistinguishedName"
          },
          "validfrom" : {
            "description" : "valid from (UNIX-Time)",
            "example" : 1558946175,
            "format" : "int64",
            "type" : "integer"
          },
          "validto" : {
            "description" : "valid to (UNIX-Time)",
            "example" : 1645346175,
            "format" : "int64",
            "type" : "integer"
          },
          "subject" : {
            "$ref" : "#/components/schemas/DistinguishedName"
          },
          "publickey" : {
            "description" : "Base64 encoded content of the public key",
            "format" : "base64",
            "type" : "string"
          },
          "publickeyparameters" : {
            "example" : "ECDH_P256",
            "type" : "string"
          },
          "isCA" : {
            "type" : "boolean"
          },
          "validity" : {
            "enum" : [ "valid", "expired", "notyetvalid" ],
            "type" : "string"
          },
          "certificateExtensions" : {
            "$ref" : "#/components/schemas/CertificateExtensions"
          }
        },
        "required" : [ "category", "id", "isCA" ],
        "type" : "object"
      },
      "ModifyCertificate" : {
        "example" : {
          "name" : "newCertificateName.pem"
        },
        "properties" : {
          "name" : {
            "description" : "New filename of the certificate (including file extension). Must not exceed the maximum length of 128 characters. Can't contain any of these characters '\\/:*?\"<>|' and can not begin or end with space. The names '.' and '..' are forbidden.",
            "example" : "newCertificateName.pem",
            "maxLength" : 128,
            "minLength" : 1,
            "pattern" : "^(?!\\s)(?![\\s\\S]*\\s$)(?!(?:\\.|\\.\\.)$)[^\\\\\\/:*?\"<>|]*$",
            "type" : "string"
          }
        },
        "required" : [ "name" ],
        "type" : "object"
      },
      "Certificates" : {
        "items" : {
          "$ref" : "#/components/schemas/Certificate"
        },
        "type" : "array"
      },
      "Key" : {
        "example" : {
          "hsm" : true,
          "length" : 4096,
          "name" : "key.pem",
          "id" : "id",
          "state" : "generating",
          "category" : "own",
          "type" : "private",
          "algorithm" : "RSA"
        },
        "properties" : {
          "id" : {
            "description" : "Uniqe identifier of the key in the backend.",
            "readOnly" : true,
            "type" : "string"
          },
          "category" : {
            "enum" : [ "own", "trusted", "rejected" ],
            "type" : "string"
          },
          "type" : {
            "enum" : [ "private", "public" ],
            "type" : "string"
          },
          "algorithm" : {
            "enum" : [ "RSA", "ED25519", "P-256", "P-384", "P-521" ],
            "type" : "string"
          },
          "length" : {
            "description" : "Key length",
            "example" : 4096,
            "type" : "integer"
          },
          "name" : {
            "description" : "Filename of the key. Must not exceed the maximum length of 128 characters. Can't contain any of these characters '\\/:*?\"<>|' and can not begin or end with space. The names '.' and '..' are forbidden.",
            "example" : "key.pem",
            "maxLength" : 128,
            "minLength" : 1,
            "pattern" : "^(?!\\s)(?![\\s\\S]*\\s$)(?!(?:\\.|\\.\\.)$)[^\\\\\\/:*?\"<>|]*$",
            "type" : "string"
          },
          "state" : {
            "enum" : [ "generating", "available", "encrypted" ],
            "type" : "string"
          },
          "hsm" : {
            "description" : "Key is stored on on-device HSM, like TPM or similar",
            "type" : "boolean"
          }
        },
        "required" : [ "category", "hsm", "id", "length", "name" ],
        "type" : "object"
      },
      "ModifyKey" : {
        "additionalProperties" : false,
        "properties" : {
          "name" : {
            "description" : "New filename of the key (including file extension). Must not exceed the maximum length of 128 characters. Can't contain any of these characters '\\/:*?\"<>|' and can not begin or end with space. The names '.' and '..' are forbidden.",
            "example" : "newKeyName.pem",
            "maxLength" : 128,
            "minLength" : 1,
            "pattern" : "^(?!\\s)(?![\\s\\S]*\\s$)(?!(?:\\.|\\.\\.)$)[^\\\\\\/:*?\"<>|]*$",
            "type" : "string"
          }
        },
        "required" : [ "name" ],
        "type" : "object"
      },
      "DecryptKey" : {
        "additionalProperties" : false,
        "properties" : {
          "name" : {
            "description" : "Filename of the decrypted key (including file extension). Must not exceed the maximum length of 128 characters. Can't contain any of these characters '\\/:*?\"<>|' and can not begin or end with space. The names '.' and '..' are forbidden.",
            "example" : "decryptedKey.pem",
            "maxLength" : 128,
            "minLength" : 1,
            "pattern" : "^(?!\\s)(?![\\s\\S]*\\s$)(?!(?:\\.|\\.\\.)$)[^\\\\\\/:*?\"<>|]*$",
            "type" : "string"
          },
          "password" : {
            "description" : "Password to decrypt a password protected private key.",
            "example" : "secret",
            "type" : "string"
          }
        },
        "required" : [ "name", "password" ],
        "type" : "object"
      },
      "OneOfKeyUpdate" : {
        "oneOf" : [ {
          "$ref" : "#/components/schemas/ModifyKey"
        }, {
          "$ref" : "#/components/schemas/DecryptKey"
        } ]
      },
      "Keys" : {
        "items" : {
          "$ref" : "#/components/schemas/Key"
        },
        "type" : "array"
      },
      "Application" : {
        "example" : {
          "name" : "OPCUA",
          "description" : "description",
          "id" : "id",
          "scopesRWX" : [ "rexroth-vpnmanager.web.all.rwx" ],
          "scopesR" : [ "rexroth-vpnmanager.web.all.r" ]
        },
        "properties" : {
          "id" : {
            "description" : "Uniqe identifier of the application in the backend.",
            "readOnly" : true,
            "type" : "string"
          },
          "name" : {
            "description" : "Name of the application.",
            "example" : "OPCUA",
            "type" : "string"
          },
          "description" : {
            "description" : "Short description of the application.",
            "type" : "string"
          },
          "scopesR" : {
            "description" : "Scopes with which a user is allowed to view the certificate store of the specific application.",
            "example" : [ "rexroth-vpnmanager.web.all.r" ],
            "items" : {
              "type" : "string"
            },
            "readOnly" : true,
            "type" : "array"
          },
          "scopesRWX" : {
            "description" : "Scopes with which a user is allowed to manage the certificate store of the specific application.",
            "example" : [ "rexroth-vpnmanager.web.all.rwx" ],
            "items" : {
              "type" : "string"
            },
            "readOnly" : true,
            "type" : "array"
          }
        },
        "type" : "object"
      },
      "Applications" : {
        "items" : {
          "$ref" : "#/components/schemas/Application"
        },
        "type" : "array"
      },
      "TaskKeyGen" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Task"
        }, {
          "$ref" : "#/components/schemas/TaskKeyGen_allOf"
        } ],
        "description" : "Generate a new private key on the device"
      },
      "TaskMove" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Task"
        }, {
          "$ref" : "#/components/schemas/TaskMove_allOf"
        } ],
        "description" : "Move a key or certificate between apps and categories."
      },
      "TaskCopy" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Task"
        }, {
          "$ref" : "#/components/schemas/TaskCopy_allOf"
        } ],
        "description" : "Copy a key or certificate between apps and categories."
      },
      "TaskPkcs12Import" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Task"
        }, {
          "$ref" : "#/components/schemas/TaskPkcs12Import_allOf"
        } ],
        "description" : "This object provides the task parameters required to import decrypt and decode a valid pkcs12 encoded container,\nand place the corresponding content files (keys, own certificates, ca certificates) into the corresponding\napplication's certificate & key store.\n"
      },
      "TaskPkcs12Export" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Task"
        }, {
          "$ref" : "#/components/schemas/TaskPkcs12Export_allOf"
        } ],
        "description" : "This object provides the task parameters to export certificate(s) and key(s) into a pkcs12 encoded container. Note that at least\none certificate and its corresponding key must be given.\n"
      },
      "TaskExtract" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Task"
        }, {
          "$ref" : "#/components/schemas/TaskExtract_allOf"
        } ],
        "description" : "Extract a certificate from certificate file, which contains multiple certificates.\nThe extracted certificate is saved in a new file. The original file no longer contains the extracted certificate.\n"
      },
      "TaskSelfsignedCertGen" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Task"
        }, {
          "$ref" : "#/components/schemas/TaskSelfsignedCertGen_allOf"
        } ],
        "description" : "Create a self-signed certificate on the device"
      },
      "OneOfTasks" : {
        "oneOf" : [ {
          "$ref" : "#/components/schemas/TaskKeyGen"
        }, {
          "$ref" : "#/components/schemas/TaskMove"
        }, {
          "$ref" : "#/components/schemas/TaskCopy"
        }, {
          "$ref" : "#/components/schemas/TaskPkcs12Import"
        }, {
          "$ref" : "#/components/schemas/TaskPkcs12Export"
        }, {
          "$ref" : "#/components/schemas/TaskExtract"
        }, {
          "$ref" : "#/components/schemas/TaskSelfsignedCertGen"
        } ]
      },
      "Tasks" : {
        "items" : {
          "$ref" : "#/components/schemas/OneOfTasks"
        },
        "type" : "array"
      },
      "CSR" : {
        "example" : {
          "certificateExtensions" : {
            "subjectAlternativeNames" : [ [ {
              "type" : "DNSName",
              "value" : "example.com"
            }, {
              "type" : "EmailAddress",
              "value" : "my.mail@example.com"
            }, {
              "type" : "IPAddress",
              "value" : "192.168.1.1"
            }, {
              "type" : "URI",
              "value" : "https://example.com"
            } ], [ {
              "type" : "DNSName",
              "value" : "example.com"
            }, {
              "type" : "EmailAddress",
              "value" : "my.mail@example.com"
            }, {
              "type" : "IPAddress",
              "value" : "192.168.1.1"
            }, {
              "type" : "URI",
              "value" : "https://example.com"
            } ] ]
          },
          "subject" : {
            "country" : "country",
            "commonName" : "commonName",
            "streetAddress" : "streetAddress",
            "organization" : "organization",
            "postalCode" : "postalCode",
            "locality" : "locality",
            "state" : "state",
            "organizationalUnit" : "organizationalUnit"
          },
          "name" : "name",
          "id" : "id",
          "creationDate" : 1645346175
        },
        "properties" : {
          "id" : {
            "description" : "Uniqe identifier of the csr in the backend.",
            "readOnly" : true,
            "type" : "string"
          },
          "name" : {
            "description" : "Filename of the certificate signing request",
            "type" : "string"
          },
          "creationDate" : {
            "description" : "valid to (UNIX-Time)",
            "example" : 1645346175,
            "format" : "int64",
            "type" : "integer"
          },
          "subject" : {
            "$ref" : "#/components/schemas/DistinguishedName"
          },
          "certificateExtensions" : {
            "$ref" : "#/components/schemas/CertificateExtensions"
          }
        },
        "required" : [ "creationDate", "id", "name", "subject" ],
        "type" : "object"
      },
      "CSRs" : {
        "items" : {
          "$ref" : "#/components/schemas/CSR"
        },
        "type" : "array"
      },
      "Pkcs12Container" : {
        "description" : "A pkcs12 encoded cryptographic object - often referred to as a pkcs12 container - consisting of a system identifier, a human readable name and its\ncontent that can consist of multiple cryptographic objects in a single file. It is commonly used to bundle a private cryptographic key with its\ncorresponding certificate (and or to bundle all the members of a chain of trust).\n",
        "example" : {
          "name" : "name",
          "id" : "id"
        },
        "properties" : {
          "id" : {
            "description" : "unique identifier of the pkcs12 container",
            "readOnly" : true,
            "type" : "string"
          },
          "name" : {
            "description" : "The (human-readable) name of the pkcs12 container. Note that when the content of a container is\nexported, all exported objects (certificates, keys) will have this name as the prefix by default,\nif no name is provided during the export operation.  Must not exceed the maximum length of 128 characters.\nCan't contain any of these characters '\\/:*?\"<>|' and can not begin or end with space. The names '.' and '..' are forbidden.\n",
            "maxLength" : 128,
            "minLength" : 1,
            "pattern" : "^(?!\\s)(?![\\s\\S]*\\s$)(?!(?:\\.|\\.\\.)$)[^\\\\\\/:*?\"<>|]*$",
            "type" : "string"
          }
        },
        "required" : [ "id", "name" ],
        "type" : "object"
      },
      "Pkcs12Containers" : {
        "items" : {
          "$ref" : "#/components/schemas/Pkcs12Container"
        },
        "type" : "array"
      },
      "PKIConfig" : {
        "example" : {
          "protocol" : "CMP",
          "uriIr" : "192.168.1.1:8080/path/to/ir/endpoint",
          "serverCertApplicationId" : "networksecurity",
          "id" : "id",
          "authenticationType" : "none",
          "uriCr" : "192.168.1.1:8080/path/to/cr/endpoint",
          "serverCertId" : "serverCertId"
        },
        "properties" : {
          "id" : {
            "description" : "Unique identifier of the PKI configuration.",
            "readOnly" : true,
            "type" : "string"
          },
          "uriCr" : {
            "description" : "Uri for renewing certificates",
            "example" : "192.168.1.1:8080/path/to/cr/endpoint",
            "type" : "string"
          },
          "uriIr" : {
            "description" : "Uri for the initial enrollment a certificate - if not set uri_cr is used",
            "example" : "192.168.1.1:8080/path/to/ir/endpoint",
            "type" : "string"
          },
          "protocol" : {
            "enum" : [ "CMP", "SCEP" ],
            "type" : "string"
          },
          "serverCertId" : {
            "description" : "Id of the server certificate used to authenticate the PKI server.",
            "type" : "string"
          },
          "serverCertApplicationId" : {
            "default" : "networksecurity",
            "description" : "Id of the application, the server certificate is availible in. If not set 'networksecurity' will be assumed as default.",
            "type" : "string"
          },
          "authenticationType" : {
            "description" : "Type of authentication. Availability of specific authentication methods depend on protocol type.",
            "enum" : [ "none", "challenge" ],
            "type" : "string"
          },
          "authentication" : {
            "$ref" : "#/components/schemas/OneOfAuthentication"
          },
          "options" : {
            "$ref" : "#/components/schemas/OneOfPkiOptions"
          }
        },
        "required" : [ "protocol", "uriCr" ],
        "type" : "object"
      },
      "PKIConfigs" : {
        "items" : {
          "$ref" : "#/components/schemas/PKIConfig"
        },
        "type" : "array"
      },
      "CertificateRequest" : {
        "example" : {
          "certificateId" : "certificateId",
          "id" : "id",
          "state" : "failed",
          "applicationId" : "applicationId",
          "privateKeyId" : "privateKeyId"
        },
        "properties" : {
          "id" : {
            "readOnly" : true,
            "type" : "string"
          },
          "applicationId" : {
            "description" : "Id of the application that contains the key and certificate.",
            "type" : "string"
          },
          "privateKeyId" : {
            "description" : "Id of the private key that belongs to certificate that will monitored.",
            "type" : "string"
          },
          "certificateId" : {
            "description" : "Id of the certificate that will be monitored and renewed.",
            "type" : "string"
          },
          "state" : {
            "description" : "State of the request",
            "enum" : [ "failed", "running", "pending", "done" ],
            "readOnly" : true,
            "type" : "string"
          },
          "options" : {
            "$ref" : "#/components/schemas/OneOfRenewalOptions"
          }
        },
        "required" : [ "applicationId", "certificateId", "privateKeyId" ],
        "type" : "object"
      },
      "CertificateRequests" : {
        "items" : {
          "$ref" : "#/components/schemas/CertificateRequest"
        },
        "type" : "array"
      },
      "Enrollment" : {
        "example" : {
          "certificateExtensions" : {
            "subjectAlternativeNames" : [ [ {
              "type" : "DNSName",
              "value" : "example.com"
            }, {
              "type" : "EmailAddress",
              "value" : "my.mail@example.com"
            }, {
              "type" : "IPAddress",
              "value" : "192.168.1.1"
            }, {
              "type" : "URI",
              "value" : "https://example.com"
            } ], [ {
              "type" : "DNSName",
              "value" : "example.com"
            }, {
              "type" : "EmailAddress",
              "value" : "my.mail@example.com"
            }, {
              "type" : "IPAddress",
              "value" : "192.168.1.1"
            }, {
              "type" : "URI",
              "value" : "https://example.com"
            } ] ]
          },
          "subject" : {
            "country" : "country",
            "commonName" : "commonName",
            "streetAddress" : "streetAddress",
            "organization" : "organization",
            "postalCode" : "postalCode",
            "locality" : "locality",
            "state" : "state",
            "organizationalUnit" : "organizationalUnit"
          },
          "id" : "id",
          "state" : "failed",
          "applicationId" : "applicationId",
          "privateKeyId" : "privateKeyId"
        },
        "properties" : {
          "id" : {
            "readOnly" : true,
            "type" : "string"
          },
          "applicationId" : {
            "description" : "Id of the application that contains the key.",
            "type" : "string"
          },
          "privateKeyId" : {
            "description" : "Id of the private key for which we want to request a certificate.",
            "type" : "string"
          },
          "subject" : {
            "$ref" : "#/components/schemas/DistinguishedName"
          },
          "certificateExtensions" : {
            "$ref" : "#/components/schemas/CertificateExtensions"
          },
          "state" : {
            "description" : "State of the request",
            "enum" : [ "failed", "running", "pending", "done" ],
            "readOnly" : true,
            "type" : "string"
          }
        },
        "required" : [ "applicationId", "id", "privateKeyId", "subject" ],
        "type" : "object"
      },
      "Enrollments" : {
        "items" : {
          "$ref" : "#/components/schemas/Enrollment"
        },
        "type" : "array"
      },
      "Subscription" : {
        "description" : "A subscription monitors the validity of a certificate and renews it within a configurable time.",
        "example" : {
          "renewalPeriod" : 0,
          "pkiId" : "pkiId",
          "certificateId" : "certificateId",
          "id" : "id",
          "applicationId" : "applicationId",
          "privateKeyId" : "privateKeyId",
          "enabled" : true
        },
        "properties" : {
          "id" : {
            "description" : "Unique identifier of the subscription.",
            "readOnly" : true,
            "type" : "string"
          },
          "applicationId" : {
            "description" : "Id of the application that contains the key and certificate.",
            "type" : "string"
          },
          "privateKeyId" : {
            "description" : "Id of the private key that belongs to certificate that will monitored.",
            "type" : "string"
          },
          "certificateId" : {
            "description" : "Id of the certificate that will be monitored and renewed.",
            "type" : "string"
          },
          "renewalPeriod" : {
            "description" : "Period in days when to start with a renewal of the certificate before experation.",
            "type" : "integer"
          },
          "pkiId" : {
            "description" : "Id of the pki the subscription belongs to",
            "type" : "string"
          },
          "enabled" : {
            "type" : "boolean"
          },
          "options" : {
            "$ref" : "#/components/schemas/OneOfRenewalOptions"
          }
        },
        "required" : [ "applicationId", "certificateId", "enabled", "pkiId", "privateKeyId", "renewalPeriod" ],
        "type" : "object"
      },
      "Subscriptions" : {
        "items" : {
          "$ref" : "#/components/schemas/Subscription"
        },
        "type" : "array"
      },
      "UploadKey" : {
        "properties" : {
          "file" : {
            "format" : "binary",
            "type" : "string"
          },
          "category" : {
            "description" : "Category the key gets stored in. If not set, \"own\" will be assumed as default.",
            "enum" : [ "own", "trusted", "rejected" ],
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "UploadCert" : {
        "properties" : {
          "file" : {
            "format" : "binary",
            "type" : "string"
          },
          "category" : {
            "description" : "Category the certificate gets stored in. If not set, \"own\" will be assumed as default.",
            "enum" : [ "own", "ca", "rejected", "trusted" ],
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "UploadPkcs12" : {
        "properties" : {
          "file" : {
            "format" : "binary",
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "CertificateRevocationList" : {
        "example" : {
          "id" : "id",
          "name" : "example.crl",
          "validity" : "valid",
          "version" : "2",
          "signatureAlgorithm" : "sha256RSA",
          "issuer" : {
            "country" : "country",
            "commonName" : "commonName",
            "streetAddress" : "streetAddress",
            "organization" : "organization",
            "postalCode" : "postalCode",
            "locality" : "locality",
            "state" : "state",
            "organizationalUnit" : "organizationalUnit"
          },
          "thisUpdate" : 0,
          "nextUpdate" : 1645346175
        },
        "properties" : {
          "id" : {
            "description" : "Uniqe identifier of the certificate revocation list in the backend.",
            "readOnly" : true,
            "type" : "string"
          },
          "name" : {
            "description" : "Filename of the certificate revocation list. Must not exceed the maximum length of 128 characters. Can't contain any of these characters '\\/:*?\"<>|' and can not begin or end with space. The names '.' and '..' are forbidden.",
            "example" : "example.crl",
            "maxLength" : 128,
            "minLength" : 1,
            "pattern" : "^(?!\\s)(?![\\s\\S]*\\s$)(?!(?:\\.|\\.\\.)$)[^\\\\\\/:*?\"<>|]*$",
            "type" : "string"
          },
          "validity" : {
            "description" : "Status of the certificate revocation list",
            "enum" : [ "valid", "expired", "notyetvalid" ],
            "type" : "string"
          },
          "version" : {
            "description" : "Version of the certificate revocation list.",
            "example" : "2",
            "type" : "string"
          },
          "signatureAlgorithm" : {
            "description" : "Algorithm identifier for the algorithm used to sign the certificate revocation list.",
            "example" : "sha256RSA",
            "type" : "string"
          },
          "issuer" : {
            "$ref" : "#/components/schemas/DistinguishedName"
          },
          "thisUpdate" : {
            "description" : "Issue date of this certificate revocation list. (UNIX-Time)",
            "example" : 0,
            "format" : "int64",
            "type" : "integer"
          },
          "nextUpdate" : {
            "description" : "The date by which the next certificate revocation list will be issued. (UNIX-Time)",
            "example" : 1645346175,
            "format" : "int64",
            "type" : "integer"
          }
        },
        "required" : [ "id", "issuer", "name", "nextUpdate", "signatureAlgorithm", "thisUpdate", "validity" ],
        "type" : "object"
      },
      "CertificateRevocationLists" : {
        "items" : {
          "$ref" : "#/components/schemas/CertificateRevocationList"
        },
        "type" : "array"
      },
      "UploadCertificateRevocationList" : {
        "properties" : {
          "file" : {
            "format" : "binary",
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "Problem" : {
        "description" : "This document defines a \"problem detail\" as a way  to carry machine-readable details of errors in a  HTTP response to avoid the need to define new error  response formats for HTTP APIs.\n",
        "properties" : {
          "type" : {
            "default" : "about:blank",
            "description" : "A URI reference [RFC3986] that identifies the problem type. \nThis specification encourages that, when dereferenced, \nit provide human-readable documentation for the problem type \n(e.g., using HTML [W3C.REC-html5-20141028]). When this member \nis not present, its value is assumed to be \"about:blank\".\n",
            "example" : "https://example.com/probs/out-of-credit",
            "format" : "uri",
            "type" : "string"
          },
          "title" : {
            "description" : "A short, human-readable summary of the problem type. \nIt SHOULD NOT change from occurrence to occurrence of the problem, \nexcept for purposes of localization (e.g., using proactive content \nnegotiation; see [RFC7231], Section 3.4).\nIf the response is a diagnostics message, it contains \nthe text associated with the mainDiagnosisCode.\n",
            "example" : "You do not have enough credit.",
            "type" : "string"
          },
          "status" : {
            "description" : "The HTTP status code ([RFC7231], Section 6) generated by the \norigin server for this occurrence of the problem.\n",
            "example" : 403,
            "format" : "int32",
            "type" : "integer"
          },
          "detail" : {
            "description" : "A human-readable explanation specific to this occurrence of the problem.\nIf the response is a diagnostics message, it contains the text associated with\nthe detailedDiagnosisCode.\n",
            "example" : "Your current balance is 30, but that costs 50.",
            "type" : "string"
          },
          "instance" : {
            "description" : "A URI reference that identifies the specific occurrence of the problem.\nIt may or may not yield further information if dereferenced.\n",
            "example" : "/account/12345/msgs/abc",
            "type" : "string"
          },
          "code" : {
            "deprecated" : true,
            "description" : "An error code issued by the system that caused the original problem.\nThis code can be used to track down the root cause of the error.\n",
            "example" : "F360001",
            "type" : "string"
          },
          "mainDiagnosisCode" : {
            "description" : "The main diagnosis code is issued by the system that caused the problem.\nThis code can be used to track down the root cause and source of the error.\nIt can be used to search in the documentation for a solution.\nIt SHOULD NOT change from occurrence to occurrence of the same problem.\n",
            "example" : "080F0100",
            "type" : "string"
          },
          "detailedDiagnosisCode" : {
            "description" : "The detailed diagnosis code issued by the system that caused the problem.\nThis code can be used to track down the detailed cause and source of the error.\nIt can be used to search in the documentation for a solution.\nThe detailed diagnosis code gives additional information about the cause of the error.\nIt SHOULD NOT change from occurrence to occurrence of the same problem.\n",
            "example" : "00666001",
            "type" : "string"
          },
          "dynamicDescription" : {
            "description" : "A dynamic description gives detailed information about the occurrence of a problem.\nIt can change between different occurrences of the same error.\n",
            "example" : "value = -4.5",
            "type" : "string"
          },
          "severity" : {
            "description" : " Severity of a problem as defined RFC5424 of the Syslog standard, see https://tools.ietf.org/html/rfc5424",
            "enum" : [ "Emergency", "Alert", "Critical", "Error", "Warning", "Notice", "Informational", "Debug" ],
            "example" : "Error",
            "type" : "string"
          },
          "links" : {
            "description" : "Collection of links to fix the problem. E.g. links to online user manual,\nto an online community (using tags) or a developer chat (e.g. Slack).\n",
            "items" : {
              "example" : "https://stackoverflow.com/questions/tagged/boschrexroth+controlx+f360001",
              "format" : "uri",
              "type" : "string"
            },
            "type" : "array"
          },
          "moreInfo" : {
            "additionalProperties" : true,
            "description" : "The moreInfo field allows you to add additional information that might be necessary to debug or trace down the cause of an error.\nIt might also contain information what is needed to resolve the problem.\nThere are loosely specified fields for specific problems that can be used in these situations, e.g.:\n- On a 403 Forbidden error: The moreInfo can contain a field \"requiredPermissions\" with the required permissions seperated by comma\n- On a 402 Payment required: The moreInfo can contain a field \"requiredLicenses\" with the required licenses seperated by comma\n",
            "example" : {
              "trace" : "ExampleClass.cpp#452 Null pointer exception",
              "class" : "ExampleClass"
            },
            "type" : "object"
          },
          "cause" : {
            "description" : "Sometimes a problem might be caused by problems that occure in other components or are the root cause of a problem. In this\ncase the related problems can be added as a cause. Since it might be possible that multiple components have problems on a single\naction, cause is an array. E.g. Loading failed because several components where not able to load the configuration.\n",
            "items" : {
              "$ref" : "#/components/schemas/Problem"
            },
            "type" : "array"
          }
        },
        "required" : [ "title", "type" ],
        "type" : "object",
        "x-version" : "1.0.0"
      },
      "CertificateSigningRequest" : {
        "example" : {
          "certificateExtensions" : {
            "subjectAlternativeNames" : [ [ {
              "type" : "DNSName",
              "value" : "example.com"
            }, {
              "type" : "EmailAddress",
              "value" : "my.mail@example.com"
            }, {
              "type" : "IPAddress",
              "value" : "192.168.1.1"
            }, {
              "type" : "URI",
              "value" : "https://example.com"
            } ], [ {
              "type" : "DNSName",
              "value" : "example.com"
            }, {
              "type" : "EmailAddress",
              "value" : "my.mail@example.com"
            }, {
              "type" : "IPAddress",
              "value" : "192.168.1.1"
            }, {
              "type" : "URI",
              "value" : "https://example.com"
            } ] ]
          },
          "subject" : {
            "country" : "country",
            "commonName" : "commonName",
            "streetAddress" : "streetAddress",
            "organization" : "organization",
            "postalCode" : "postalCode",
            "locality" : "locality",
            "state" : "state",
            "organizationalUnit" : "organizationalUnit"
          },
          "name" : "name",
          "id" : "id",
          "creationDate" : 1645346175
        },
        "properties" : {
          "id" : {
            "description" : "Uniqe identifier of the csr in the backend.",
            "readOnly" : true,
            "type" : "string"
          },
          "name" : {
            "description" : "Filename of the certificate signing request",
            "type" : "string"
          },
          "creationDate" : {
            "description" : "valid to (UNIX-Time)",
            "example" : 1645346175,
            "format" : "int64",
            "type" : "integer"
          },
          "subject" : {
            "$ref" : "#/components/schemas/DistinguishedName"
          },
          "certificateExtensions" : {
            "$ref" : "#/components/schemas/CertificateExtensions"
          }
        },
        "required" : [ "creationDate", "id", "name", "subject" ],
        "type" : "object"
      },
      "OneOfAuthentication" : {
        "oneOf" : [ {
          "$ref" : "#/components/schemas/Challenge"
        } ],
        "type" : "object"
      },
      "Challenge" : {
        "description" : "A challenge can be a password or a pre-shared key for authentication",
        "properties" : {
          "challenge" : {
            "type" : "string",
            "writeOnly" : true
          },
          "encryptedChallenge" : {
            "example" : "asd1234aSFD&LHKQSDF)(!\"§\")",
            "nullable" : true,
            "type" : "string"
          }
        },
        "required" : [ "challenge" ],
        "type" : "object"
      },
      "OneOfPkiOptions" : {
        "description" : "PkiOptions must be chosen corresponding to the selected protocol in the PKIConfig.",
        "oneOf" : [ {
          "$ref" : "#/components/schemas/PkiOptionsSCEP"
        }, {
          "$ref" : "#/components/schemas/PkiOptionsCMP"
        } ],
        "type" : "object"
      },
      "PkiOptionsSCEP" : {
        "properties" : {
          "generateNewKey" : {
            "description" : "Generate a new key for certificate renewal, instead of using old key. Default false.",
            "type" : "boolean"
          },
          "signRequestByNewKey" : {
            "description" : "Use new key to sign SCEP request on renewal. Default false.",
            "type" : "boolean"
          },
          "usePKCSReqOnRenewal" : {
            "description" : "Use PKCSReq as renewal command. Default false.",
            "type" : "boolean"
          }
        },
        "type" : "object"
      },
      "PkiOptionsCMP" : {
        "properties" : {
          "proofOfPossessionMethod" : {
            "default" : "SIGNATURE",
            "description" : "Method of proof of possession used. If not specified, SIGNATURE is used by default.",
            "enum" : [ "NONE", "RAVERIFIED", "SIGNATURE", "KEYENC" ],
            "type" : "string"
          }
        },
        "required" : [ "proofOfPossessionMethod" ],
        "type" : "object"
      },
      "OneOfRenewalOptions" : {
        "description" : "RenewalOptions must be chosen corresponding to the selected protocol in the used PKIConfig.",
        "oneOf" : [ {
          "$ref" : "#/components/schemas/RenewalOptionsCMP"
        } ],
        "type" : "object"
      },
      "RenewalOptionsCMP" : {
        "properties" : {
          "extraCertsOptions" : {
            "$ref" : "#/components/schemas/extraCertsOptions"
          },
          "caCertsOptions" : {
            "$ref" : "#/components/schemas/caCertsOptions"
          },
          "ignoreKeyUsage" : {
            "description" : "If set, the verification of the key usage extension is skipped, which allows certificate usage without restrictions.",
            "type" : "boolean"
          }
        },
        "required" : [ "caCertsOptions", "extraCertsOptions", "ignoreKeyUsage" ],
        "type" : "object"
      },
      "extraCertsOptions" : {
        "description" : "Options used to save certificates contained in the extraCerts field of the last received response.",
        "properties" : {
          "enabled" : {
            "type" : "boolean"
          },
          "extraCertsFilename" : {
            "description" : "Name of the file, the extra certificates get saved to in the category CA. Must be set if extraCertsOptions is enabled and end with '.pem'. Must not exceed the maximum length of 128 characters. Can't contain any of these characters '\\/:*?\"<>|' and can not begin or end with space.",
            "example" : "my_extra_certs.pem",
            "maxLength" : 128,
            "minLength" : 1,
            "pattern" : "^(?!\\s)(?![\\s\\S]*\\s$)(?!(?:\\.|\\.\\.)$)[^\\\\\\/:*?\"<>|]*$",
            "type" : "string"
          }
        },
        "required" : [ "enabled", "extraCertsFilename" ],
        "type" : "object"
      },
      "caCertsOptions" : {
        "description" : "Options used to save CA certificates contained in the caPubs field of the last received response.",
        "properties" : {
          "enabled" : {
            "type" : "boolean"
          },
          "caCertsFilename" : {
            "description" : "Name of the file, the CA certificates get saved to in the category CA. Must be set if caCertsOptions is enabled and end with '.pem'. Must not exceed the maximum length of 128 characters. Can't contain any of these characters '\\/:*?\"<>|' and can not begin or end with space.",
            "example" : "my_ca_certs.pem",
            "maxLength" : 128,
            "minLength" : 1,
            "pattern" : "^(?!\\s)(?![\\s\\S]*\\s$)(?!(?:\\.|\\.\\.)$)[^\\\\\\/:*?\"<>|]*$",
            "type" : "string"
          }
        },
        "required" : [ "caCertsFilename", "enabled" ],
        "type" : "object"
      },
      "CertificateExtensions" : {
        "example" : {
          "subjectAlternativeNames" : [ [ {
            "type" : "DNSName",
            "value" : "example.com"
          }, {
            "type" : "EmailAddress",
            "value" : "my.mail@example.com"
          }, {
            "type" : "IPAddress",
            "value" : "192.168.1.1"
          }, {
            "type" : "URI",
            "value" : "https://example.com"
          } ], [ {
            "type" : "DNSName",
            "value" : "example.com"
          }, {
            "type" : "EmailAddress",
            "value" : "my.mail@example.com"
          }, {
            "type" : "IPAddress",
            "value" : "192.168.1.1"
          }, {
            "type" : "URI",
            "value" : "https://example.com"
          } ] ]
        },
        "properties" : {
          "subjectAlternativeNames" : {
            "description" : "List of subject alternative names.",
            "items" : {
              "$ref" : "#/components/schemas/SubjectAlternativeName"
            },
            "type" : "array"
          }
        },
        "required" : [ "subjectAlternativeNames" ],
        "type" : "object"
      },
      "SubjectAlternativeNames" : {
        "description" : "List of subject alternative names.",
        "items" : {
          "$ref" : "#/components/schemas/SubjectAlternativeName"
        },
        "type" : "array"
      },
      "SubjectAlternativeName" : {
        "description" : "SubjectAlternativeName object contains type and value. Supported types are DNSName, EmailAddress, IPAddress and URI, corresponding values must comply with rfc5280.",
        "example" : [ {
          "type" : "DNSName",
          "value" : "example.com"
        }, {
          "type" : "EmailAddress",
          "value" : "my.mail@example.com"
        }, {
          "type" : "IPAddress",
          "value" : "192.168.1.1"
        }, {
          "type" : "URI",
          "value" : "https://example.com"
        } ],
        "properties" : {
          "type" : {
            "enum" : [ "DNSName", "EmailAddress", "IPAddress", "URI" ],
            "type" : "string"
          },
          "value" : {
            "type" : "string"
          }
        },
        "required" : [ "type", "value" ]
      },
      "DistinguishedName" : {
        "description" : "DistinguishedName represents an X.509 distinguished name",
        "example" : {
          "country" : "country",
          "commonName" : "commonName",
          "streetAddress" : "streetAddress",
          "organization" : "organization",
          "postalCode" : "postalCode",
          "locality" : "locality",
          "state" : "state",
          "organizationalUnit" : "organizationalUnit"
        },
        "properties" : {
          "country" : {
            "description" : "Country",
            "type" : "string"
          },
          "state" : {
            "description" : "State or province",
            "type" : "string"
          },
          "locality" : {
            "description" : "City",
            "type" : "string"
          },
          "organization" : {
            "description" : "Organization or company name",
            "type" : "string"
          },
          "organizationalUnit" : {
            "description" : "Department or division name",
            "type" : "string"
          },
          "commonName" : {
            "description" : "Common name or fully qualified domain name",
            "type" : "string"
          },
          "streetAddress" : {
            "description" : "Street address",
            "type" : "string"
          },
          "postalCode" : {
            "description" : "Postal code",
            "type" : "string"
          }
        },
        "required" : [ "commonName", "country", "locality", "organization", "organizationalUnit", "postalCode", "state", "streetAddress" ],
        "type" : "object"
      },
      "Task" : {
        "discriminator" : {
          "propertyName" : "action"
        },
        "properties" : {
          "id" : {
            "description" : "A server generated ID used to identify the task. This ID is unique.",
            "example" : "123",
            "readOnly" : true,
            "type" : "string"
          },
          "state" : {
            "description" : "The state of the task.",
            "enum" : [ "pending", "failed", "done", "running" ],
            "example" : "running",
            "readOnly" : true,
            "type" : "string"
          },
          "action" : {
            "description" : "The action name executed by this task. This has to be inherited and overwritten by the application.",
            "type" : "string"
          },
          "progress" : {
            "description" : "Optional progress of the task in percentage.",
            "example" : 10,
            "maximum" : 100,
            "minimum" : 0,
            "readOnly" : true,
            "type" : "integer"
          },
          "eta" : {
            "description" : "Optional ETA in RFC 3339 format.",
            "example" : "2019-01-01T12:00:27.87+00:20",
            "format" : "dateTime",
            "readOnly" : true,
            "type" : "string"
          },
          "parameters" : {
            "additionalProperties" : true,
            "description" : "Optional map of additional parameters required by the request. Should be defined when inherited by an application.",
            "type" : "object"
          },
          "result" : {
            "additionalProperties" : true,
            "description" : "Optional map reflecting the result of the task. May be empty until task completition. Should be defined when inherited by an application.",
            "readOnly" : true,
            "type" : "object"
          }
        },
        "required" : [ "action", "id", "state" ],
        "type" : "object"
      },
      "TaskKeyGen_allOf_parameters" : {
        "properties" : {
          "dstApplicationId" : {
            "example" : "webserver",
            "type" : "string"
          },
          "keyLength" : {
            "description" : "Define keylength for keys type RSA",
            "example" : "4096",
            "type" : "string"
          },
          "name" : {
            "description" : "Filename of the key.  Must not exceed the maximum length of 128 characters. Can't contain any of these characters '\\/:*?\"<>|' and can not begin or end with space. The names '.' and '..' are forbidden.",
            "example" : "rsa.pem",
            "maxLength" : 128,
            "minLength" : 1,
            "pattern" : "^(?!\\s)(?![\\s\\S]*\\s$)(?!(?:\\.|\\.\\.)$)[^\\\\\\/:*?\"<>|]*$",
            "type" : "string"
          },
          "algorithm" : {
            "enum" : [ "RSA", "ED25519", "P-256", "P-384", "P-521" ],
            "example" : "RSA",
            "type" : "string"
          },
          "hsm" : {
            "description" : "Generate key on on-device HSM, like TPM or similar",
            "type" : "boolean"
          }
        },
        "required" : [ "algorithm", "dstApplicationId", "hsm", "keyLength", "name" ]
      },
      "TaskKeyGen_allOf" : {
        "properties" : {
          "action" : {
            "enum" : [ "keygen" ],
            "type" : "string"
          },
          "parameters" : {
            "$ref" : "#/components/schemas/TaskKeyGen_allOf_parameters"
          }
        }
      },
      "TaskMove_allOf_parameters" : {
        "properties" : {
          "itemId" : {
            "example" : "fe6a4075a1c326a04398e30ea7cf4c194e22e43071a764d543e69453c4db3234",
            "type" : "string"
          },
          "itemType" : {
            "example" : "certificate",
            "type" : "string"
          },
          "srcApplicationId" : {
            "example" : "opcua",
            "type" : "string"
          },
          "dstApplicationId" : {
            "example" : "opcua",
            "type" : "string"
          },
          "dstCategory" : {
            "example" : "rejected",
            "type" : "string"
          }
        }
      },
      "TaskMove_allOf" : {
        "properties" : {
          "action" : {
            "enum" : [ "move" ],
            "type" : "string"
          },
          "parameters" : {
            "$ref" : "#/components/schemas/TaskMove_allOf_parameters"
          }
        }
      },
      "TaskCopy_allOf" : {
        "properties" : {
          "action" : {
            "enum" : [ "copy" ],
            "type" : "string"
          },
          "parameters" : {
            "$ref" : "#/components/schemas/TaskMove_allOf_parameters"
          }
        }
      },
      "TaskPkcs12Import_allOf_parameters" : {
        "properties" : {
          "dstApplicationId" : {
            "description" : "The application to which the content of the pkcs12 container shall be imported to.",
            "example" : "opcua",
            "type" : "string"
          },
          "srcContainerId" : {
            "description" : "unique identifier of the pkcs12 container to be imported",
            "type" : "string"
          },
          "namePrefix" : {
            "description" : "If provided, the imported certificates & keys will be prefixed with the given name. Otherwise the name of\nthe pkcs12 container will be taken as the default prefix. The client certificate would be placed into a\nfile called vpn_ctrlX_os_ws2n_own.pem, the ca certificate into vpn_ctrlX_os_ws2n_ca.pem and the key to\nvpn_ctrlX_os_ws2n_key.pem for the example given above. Must not exceed the maximum length of 120 characters.\nCan't contain any of these characters '\\/:*?\"<>|' and can not begin or end with space. The names '.' and '..' are forbidden.\n",
            "example" : "vpn_ctrlX_os_ws2n",
            "maxLength" : 120,
            "minLength" : 1,
            "pattern" : "^(?!\\s)(?![\\s\\S]*\\s$)(?!(?:\\.|\\.\\.)$)[^\\\\\\/:*?\"<>|]*$",
            "type" : "string"
          },
          "passIn" : {
            "description" : "The pass phrase the pkcs12 container will be decrypted with",
            "example" : "mySecretPasswordUsedToDecryptTheContainerDuringImport",
            "type" : "string"
          }
        },
        "required" : [ "dstApplicationId", "namePrefix", "passIn", "srcContainerId" ]
      },
      "TaskPkcs12Import_allOf" : {
        "properties" : {
          "action" : {
            "enum" : [ "pkcs12import" ],
            "type" : "string"
          },
          "parameters" : {
            "$ref" : "#/components/schemas/TaskPkcs12Import_allOf_parameters"
          }
        }
      },
      "TaskPkcs12Export_allOf_parameters" : {
        "properties" : {
          "srcApplicationId" : {
            "description" : "The source application for which keys / certificates shall be exported into a pkcs12 container.",
            "example" : "opcua",
            "type" : "string"
          },
          "containerName" : {
            "description" : "The name of the created pkcs12 container. Must not exceed the maximum length of 128 characters. Can't contain any of these characters '\\/:*?\"<>|' and can not begin or end with space. The names '.' and '..' are forbidden.",
            "maxLength" : 128,
            "minLength" : 1,
            "pattern" : "^(?!\\s)(?![\\s\\S]*\\s$)(?!(?:\\.|\\.\\.)$)[^\\\\\\/:*?\"<>|]*$",
            "type" : "string"
          },
          "passout" : {
            "description" : "The pass phrase the pkcs12 container will be encrypted with during export.",
            "example" : "mySecretPasswordUsedToEncryptTheContainer",
            "type" : "string"
          },
          "clientCertificateIds" : {
            "description" : "Client certificates to be exported. The first certificate provided must match to the to-be-exported\nprivate key. If no key(s) are exported the order of the given certificates does not matter. If empty,\nthe to-be-exported ca certificates must not be empty as at least one certificate is required for the\nexport operation.\n",
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "caCertificateIds" : {
            "description" : "Ca certificates to be exported. If empty, no ca certificate(s) will be exported. The order of the given\nto-be-exported objects does not matter. If no client certificates are givevn, the to-be-exported ca\ncertificates must not be empty as at least one certificate is required for the export operation.\n",
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "keyIds" : {
            "description" : "Keys to be exported. If a key is specified, it must match the first certificiate provided\nwithin the to-be-exported client certificates. Only one key can be exported at the moment.\n",
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        },
        "required" : [ "caCertificateIds", "clientCertificateIds", "containerName", "keyIds", "passout", "srcApplicationId" ]
      },
      "TaskPkcs12Export_allOf" : {
        "properties" : {
          "action" : {
            "enum" : [ "pkcs12export" ],
            "type" : "string"
          },
          "parameters" : {
            "$ref" : "#/components/schemas/TaskPkcs12Export_allOf_parameters"
          }
        }
      },
      "TaskExtract_allOf_parameters" : {
        "properties" : {
          "itemId" : {
            "description" : "id of the certificate to be extracted.",
            "example" : "fe6a4075a1c326a04398e30ea7cf4c194e22e43071a764d543e69453c4db3234",
            "type" : "string"
          },
          "srcApplicationId" : {
            "description" : "id of the application that provides the certificate store of original certificate file.",
            "example" : "opcua",
            "type" : "string"
          },
          "dstCategory" : {
            "description" : "destination category where the extracted certificate will be stored.",
            "example" : "own",
            "type" : "string"
          },
          "dstFile" : {
            "description" : "name of the destination file where the extracted certificate will be stored. Must not exceed the maximum length of 128 characters. Can't contain any of these characters '\\/:*?\"<>|' and can not begin or end with space. The names '.' and '..' are forbidden.",
            "example" : "example.pem",
            "maxLength" : 128,
            "minLength" : 1,
            "pattern" : "^(?!\\s)(?![\\s\\S]*\\s$)(?!(?:\\.|\\.\\.)$)[^\\\\\\/:*?\"<>|]*$",
            "type" : "string"
          }
        },
        "required" : [ "dstCategory", "dstFile", "itemId", "srcApplicationId" ]
      },
      "TaskExtract_allOf" : {
        "properties" : {
          "action" : {
            "enum" : [ "extract" ],
            "type" : "string"
          },
          "parameters" : {
            "$ref" : "#/components/schemas/TaskExtract_allOf_parameters"
          }
        }
      },
      "TaskSelfsignedCertGen_allOf_parameters" : {
        "properties" : {
          "applicationId" : {
            "example" : "webserver",
            "type" : "string"
          },
          "name" : {
            "description" : "Filename of the self-signed certificate on the ctrlX OS system. Must not exceed the maximum length of 128 characters. Can't contain any of these characters '\\/:*?\"<>|' and can not begin or end with space. The names '.' and '..' are forbidden.",
            "example" : "self-signed-cert.pem",
            "maxLength" : 128,
            "minLength" : 1,
            "pattern" : "^(?!\\s)(?![\\s\\S]*\\s$)(?!(?:\\.|\\.\\.)$)[^\\\\\\/:*?\"<>|]*$",
            "type" : "string"
          },
          "subject" : {
            "$ref" : "#/components/schemas/DistinguishedName"
          },
          "certificateExtensions" : {
            "$ref" : "#/components/schemas/CertificateExtensions"
          },
          "validDays" : {
            "description" : "Days until certificate is invalid, default 365",
            "example" : 180,
            "type" : "integer"
          },
          "keyId" : {
            "description" : "The ID of the private key which is used to generate the self-signed certificate.",
            "example" : "g0006a4075a1c326a0439874527829efac37364593202769453c4db3234",
            "type" : "string"
          }
        },
        "required" : [ "applicationId", "keyId", "name", "subject" ]
      },
      "TaskSelfsignedCertGen_allOf" : {
        "properties" : {
          "action" : {
            "enum" : [ "createSelfSignedCertificate" ],
            "type" : "string"
          },
          "parameters" : {
            "$ref" : "#/components/schemas/TaskSelfsignedCertGen_allOf_parameters"
          }
        }
      }
    },
    "securitySchemes" : {
      "BearerAuth" : {
        "scheme" : "bearer",
        "type" : "http"
      },
      "OAuth2AuthorizationCodeFlow" : {
        "flows" : {
          "authorizationCode" : {
            "authorizationUrl" : "https://example.com/oauth/authorize",
            "scopes" : {
              "read" : "Grants read access",
              "write" : "Grants write access",
              "admin" : "Grants access to admin operations"
            },
            "tokenUrl" : "https://example.com/oauth/token"
          }
        },
        "type" : "oauth2"
      },
      "OAuth2PasswordFlow" : {
        "flows" : {
          "password" : {
            "scopes" : {
              "dummy" : "Dummy scope (scopes not used)"
            },
            "tokenUrl" : "/identity-manager/api/v2/auth/token"
          }
        },
        "type" : "oauth2"
      }
    }
  }
}