{
  "openapi" : "3.0.0",
  "info" : {
    "contact" : {
      "email" : "support@boschrexroth.com",
      "name" : "Bosch Rexroth Support",
      "url" : "https://www.boschrexroth.com"
    },
    "description" : "This is an API for generic network configuration on Automation X Devices",
    "title" : "ctrlX CORE - Connectivity API",
    "version" : "1.6.0"
  },
  "servers" : [ {
    "description" : "Use this, if this page and the api are on the same server",
    "url" : "/network-manager/api/v1"
  }, {
    "url" : "{protocol}://{host}/network-manager/api/v1",
    "variables" : {
      "protocol" : {
        "default" : "https",
        "description" : "Protocol to access the host (http or https)",
        "enum" : [ "https", "http" ]
      },
      "host" : {
        "default" : "localhost:443",
        "description" : "Hostname (or IP) and port of the Service"
      }
    }
  } ],
  "security" : [ {
    "UsernamePassword" : [ ]
  }, {
    "Bearer" : [ ]
  } ],
  "tags" : [ {
    "description" : "Groups all interface related information",
    "name" : "Interfaces"
  }, {
    "description" : "Groups all address related information",
    "name" : "Addresses"
  }, {
    "description" : "Groups all routing related information",
    "name" : "Routing"
  }, {
    "description" : "Create, manage and delete bridges between multiple interfaces",
    "name" : "Bridges"
  }, {
    "description" : "Manage security profiles for an interface",
    "name" : "Security"
  }, {
    "description" : "Groups all name server related information",
    "name" : "Resolution"
  }, {
    "description" : "Groups all configuration change related information",
    "name" : "Changes"
  }, {
    "description" : "Groups all proxy change related information",
    "name" : "Proxy"
  }, {
    "description" : "Groups all host table related requests",
    "name" : "Hosts"
  }, {
    "description" : "Groups all tasks requests",
    "name" : "Tasks"
  } ],
  "paths" : {
    "/interfaces" : {
      "get" : {
        "description" : "Returns a list of all available interfaces",
        "operationId" : "listInterfaces",
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Interfaces"
                }
              }
            },
            "description" : "Information about interfaces"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Not authorized to access this resource"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Access forbidden for this resource"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Something unexpected happened on the server"
          }
        },
        "summary" : "Get a list of interfaces",
        "tags" : [ "Interfaces" ]
      },
      "post" : {
        "description" : "Creating an new interface",
        "operationId" : "createInterface",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Interface"
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "Interface successfully created"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "The request is incomplete or malformed"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Not authorized to access this resource"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Access forbidden for this resource"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Something unexpected happened on the server"
          }
        },
        "summary" : "Create an new interface.",
        "tags" : [ "Interfaces" ]
      }
    },
    "/interfaces/{interfaceName}" : {
      "delete" : {
        "description" : "Delete a interface",
        "operationId" : "deleteInterface",
        "parameters" : [ {
          "description" : "Name of interface",
          "explode" : false,
          "in" : "path",
          "name" : "interfaceName",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "204" : {
            "description" : "Successfully deleted"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Not authorized to access this resource"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Access forbidden for this resource"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "The resource was not found"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Something unexpected happened on the server"
          }
        },
        "summary" : "Delete a interface",
        "tags" : [ "Interfaces" ]
      },
      "get" : {
        "description" : "Returns base information of an interface defined by the given interface name",
        "operationId" : "getInterface",
        "parameters" : [ {
          "description" : "Name of interface",
          "explode" : false,
          "in" : "path",
          "name" : "interfaceName",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Interface"
                }
              }
            },
            "description" : "Interface information and IPv4/IPv6 configuration"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Not authorized to access this resource"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Access forbidden for this resource"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "The resource was not found"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Something unexpected happened on the server"
          }
        },
        "summary" : "Get base information of a specific interface",
        "tags" : [ "Interfaces" ]
      },
      "put" : {
        "description" : "Updating an existing interface",
        "operationId" : "updateInterface",
        "parameters" : [ {
          "description" : "Name of interface",
          "explode" : false,
          "in" : "path",
          "name" : "interfaceName",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Interface"
              }
            }
          }
        },
        "responses" : {
          "204" : {
            "description" : "Interface successfully updated"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Not authorized to access this resource"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Access forbidden for this resource"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Something unexpected happened on the server"
          }
        },
        "summary" : "Update an existing interface.",
        "tags" : [ "Interfaces" ]
      }
    },
    "/interfaces/{interfaceName}/bridged-interfaces" : {
      "get" : {
        "description" : "Returns names of interfaces which are part of the bridge.",
        "operationId" : "getBridgedInterfaces",
        "parameters" : [ {
          "description" : "Name of interface",
          "explode" : false,
          "in" : "path",
          "name" : "interfaceName",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/interfaceNames"
                }
              }
            },
            "description" : "Information which interfaces are bridged"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Not authorized to access this resource"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Access forbidden for this resource"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "The resource was not found"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Something unexpected happened on the server"
          }
        },
        "summary" : "Get name of bridged interfaces.",
        "tags" : [ "Bridges" ]
      },
      "put" : {
        "description" : "Change the interfaces that are bridged.",
        "operationId" : "setBridgedInterfaces",
        "parameters" : [ {
          "description" : "Name of interface",
          "explode" : false,
          "in" : "path",
          "name" : "interfaceName",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/interfaceNames"
              }
            }
          }
        },
        "responses" : {
          "204" : {
            "description" : "Successfully updated bridged interfaces"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "The request is incomplete or malformed"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Not authorized to access this resource"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Access forbidden for this resource"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "The resource was not found"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Something unexpected happened on the server"
          }
        },
        "summary" : "Update the interfaces which are part of the bridge.",
        "tags" : [ "Bridges" ]
      }
    },
    "/interfaces/{interfaceName}/state" : {
      "get" : {
        "description" : "Returns multiple network states like e.g. traffic, dns servers, transfer rate",
        "operationId" : "getInterfaceState",
        "parameters" : [ {
          "description" : "Name of interface",
          "explode" : false,
          "in" : "path",
          "name" : "interfaceName",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/State"
                }
              }
            },
            "description" : "Network state"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Not authorized to access this resource"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Access forbidden for this resource"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "The resource was not found"
          }
        },
        "summary" : "Get interface state",
        "tags" : [ "Interfaces" ]
      }
    },
    "/addresses" : {
      "get" : {
        "description" : "Returns a map of interfaces to their active addresses",
        "operationId" : "listAddresses",
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "additionalProperties" : {
                    "$ref" : "#/components/schemas/IpAddresses"
                  },
                  "example" : {
                    "eth0" : [ {
                      "address" : "192.168.1.1/16",
                      "kind" : "static"
                    }, {
                      "address" : "fe80::dcad:beff:fe00:0001/64",
                      "kind" : "fix"
                    }, {
                      "address" : "192.168.178.20/24",
                      "kind" : "dynamic"
                    } ]
                  },
                  "type" : "object"
                }
              }
            },
            "description" : "Map of interfaces to their active addresses"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Not authorized to access this resource"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Access forbidden for this resource"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Something unexpected happened on the server"
          }
        },
        "summary" : "Get a list of all addresses",
        "tags" : [ "Addresses" ]
      }
    },
    "/interfaces/{interfaceName}/addresses" : {
      "get" : {
        "description" : "Get the list of active ip addresses of the interface",
        "operationId" : "listInterfaceAddresses",
        "parameters" : [ {
          "description" : "Name of interface",
          "explode" : false,
          "in" : "path",
          "name" : "interfaceName",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/IpAddresses"
                }
              }
            },
            "description" : "List of addresses"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Not authorized to access this resource"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Access forbidden for this resource"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "The resource was not found"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Something unexpected happened on the server"
          }
        },
        "summary" : "Get the list of active ip addresses of the interface",
        "tags" : [ "Interfaces" ]
      }
    },
    "/interfaces/{interfaceName}/configuration" : {
      "get" : {
        "description" : "Get the configuration of an specific interface",
        "operationId" : "getInterfaceConfiguration",
        "parameters" : [ {
          "description" : "Name of interface",
          "explode" : false,
          "in" : "path",
          "name" : "interfaceName",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InterfaceConfiguration"
                }
              }
            },
            "description" : "Configuration of the interface"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Not authorized to access this resource"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Access forbidden for this resource"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "The resource was not found"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Something unexpected happened on the server"
          }
        },
        "summary" : "Get the configuration of an specific interface",
        "tags" : [ "Interfaces" ]
      },
      "put" : {
        "description" : "Change the interface configuration",
        "operationId" : "updateInterfaceConfiguration",
        "parameters" : [ {
          "description" : "Name of interface",
          "explode" : false,
          "in" : "path",
          "name" : "interfaceName",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/InterfaceConfiguration"
              }
            }
          }
        },
        "responses" : {
          "204" : {
            "description" : "Successfully updated interface"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "The request is incomplete or malformed"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Not authorized to access this resource"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Access forbidden for this resource"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "The resource was not found"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Something unexpected happened on the server"
          }
        },
        "summary" : "Update the interface configuration",
        "tags" : [ "Interfaces" ]
      }
    },
    "/interfaces/{interfaceName}/routes" : {
      "get" : {
        "description" : "Returns a list of all set routes",
        "operationId" : "listRoutes",
        "parameters" : [ {
          "description" : "Name of interface",
          "explode" : false,
          "in" : "path",
          "name" : "interfaceName",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/IpRoutes"
                }
              }
            },
            "description" : "Routing Table"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Not authorized to access this resource"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Access forbidden for this resource"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "The resource was not found"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Something unexpected happened on the server"
          }
        },
        "summary" : "Get the routing table",
        "tags" : [ "Routing" ]
      },
      "post" : {
        "description" : "Creating a new route",
        "operationId" : "addRoute",
        "parameters" : [ {
          "description" : "Name of interface",
          "explode" : false,
          "in" : "path",
          "name" : "interfaceName",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/IpRoute"
              }
            }
          },
          "description" : "The new route"
        },
        "responses" : {
          "201" : {
            "description" : "Route successfully created"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "The request is incomplete or malformed"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Not authorized to access this resource"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Access forbidden for this resource"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "The resource was not found"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Something unexpected happened on the server"
          }
        },
        "summary" : "Create a new route",
        "tags" : [ "Routing" ]
      }
    },
    "/interfaces/{interfaceName}/routes/{index}" : {
      "delete" : {
        "description" : "Delete a specific route",
        "operationId" : "deleteRoute",
        "parameters" : [ {
          "description" : "Name of interface",
          "explode" : false,
          "in" : "path",
          "name" : "interfaceName",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "The index of an array",
          "explode" : false,
          "in" : "path",
          "name" : "index",
          "required" : true,
          "schema" : {
            "type" : "integer"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "204" : {
            "description" : "Successfully deleted"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Not authorized to access this resource"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Access forbidden for this resource"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "The resource was not found"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Something unexpected happened on the server"
          }
        },
        "summary" : "Delete a specific route",
        "tags" : [ "Routing" ]
      },
      "get" : {
        "description" : "Get a specific route",
        "operationId" : "getRoute",
        "parameters" : [ {
          "description" : "Name of interface",
          "explode" : false,
          "in" : "path",
          "name" : "interfaceName",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "The index of an array",
          "explode" : false,
          "in" : "path",
          "name" : "index",
          "required" : true,
          "schema" : {
            "type" : "integer"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/IpRoute"
                }
              }
            },
            "description" : "The specific route"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Not authorized to access this resource"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Access forbidden for this resource"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "The resource was not found"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Something unexpected happened on the server"
          }
        },
        "summary" : "Get a specific route",
        "tags" : [ "Routing" ]
      },
      "put" : {
        "description" : "Update a specific route",
        "operationId" : "updateRoute",
        "parameters" : [ {
          "description" : "Name of interface",
          "explode" : false,
          "in" : "path",
          "name" : "interfaceName",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "The index of an array",
          "explode" : false,
          "in" : "path",
          "name" : "index",
          "required" : true,
          "schema" : {
            "type" : "integer"
          },
          "style" : "simple"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/IpRoute"
              }
            }
          },
          "description" : "Route information"
        },
        "responses" : {
          "204" : {
            "description" : "Successfully updated"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "The request is incomplete or malformed"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Not authorized to access this resource"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Access forbidden for this resource"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "The resource was not found"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Something unexpected happened on the server"
          }
        },
        "summary" : "Update a specific route",
        "tags" : [ "Routing" ]
      }
    },
    "/nameservers" : {
      "get" : {
        "description" : "List of all name servers",
        "operationId" : "listNameServers",
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "additionalProperties" : {
                    "$ref" : "#/components/schemas/NameServer"
                  },
                  "example" : {
                    "eth0" : {
                      "addresses" : [ "8.8.8.8" ],
                      "search" : [ "de.bosch.com" ]
                    }
                  },
                  "type" : "object"
                }
              }
            },
            "description" : "List of all name servers"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Not authorized to access this resource"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Access forbidden for this resource"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Something unexpected happened on the server"
          }
        },
        "summary" : "List of all name servers",
        "tags" : [ "Resolution" ]
      }
    },
    "/interfaces/{interfaceName}/nameservers" : {
      "get" : {
        "description" : "List of name servers of specific interface",
        "operationId" : "getNameServer",
        "parameters" : [ {
          "description" : "Name of interface",
          "explode" : false,
          "in" : "path",
          "name" : "interfaceName",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NameServer"
                }
              }
            },
            "description" : "List of name servers of specific interface"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Not authorized to access this resource"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Access forbidden for this resource"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "The resource was not found"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Something unexpected happened on the server"
          }
        },
        "summary" : "List of name servers of specific interface",
        "tags" : [ "Resolution" ]
      },
      "put" : {
        "description" : "Update the nameservers of specific interface",
        "operationId" : "updateNameServer",
        "parameters" : [ {
          "description" : "Name of interface",
          "explode" : false,
          "in" : "path",
          "name" : "interfaceName",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/NameServer"
              }
            }
          }
        },
        "responses" : {
          "204" : {
            "description" : "Successfully updated name server"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "The request is incomplete or malformed"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Not authorized to access this resource"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Access forbidden for this resource"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "The resource was not found"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Something unexpected happened on the server"
          }
        },
        "summary" : "Update the nameservers of specific interface",
        "tags" : [ "Resolution" ]
      }
    },
    "/changes" : {
      "get" : {
        "deprecated" : true,
        "description" : "Gets information if network configuration has been changed.",
        "operationId" : "getChange",
        "responses" : {
          "501" : {
            "description" : "This api is deprecated! There will be no implementation!"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Not authorized to access this resource"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Access forbidden for this resource"
          }
        },
        "summary" : "Gets information if network configuration has been changed.",
        "tags" : [ "Changes" ]
      },
      "put" : {
        "description" : "Apply or Discard changes done before, that are not yet applied",
        "operationId" : "updateChanges",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Changes"
              }
            }
          }
        },
        "responses" : {
          "204" : {
            "description" : "Changes modified successfully"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Not authorized to access this resource"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Access forbidden for this resource"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Something unexpected happened on the server"
          }
        },
        "summary" : "Apply or Discard changes done before, that are not yet applied",
        "tags" : [ "Changes" ]
      }
    },
    "/interfaces/{wiredInterfaceName}/security" : {
      "get" : {
        "description" : "Returns security configuration of wired network interface",
        "operationId" : "getWiredSecurityConfig",
        "parameters" : [ {
          "description" : "Name of wired interface",
          "example" : "eth0",
          "explode" : false,
          "in" : "path",
          "name" : "wiredInterfaceName",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SecurityConfig"
                }
              }
            },
            "description" : "Operation successful."
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Not authorized to access this resource"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Access forbidden for this resource"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "The resource was not found"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Something unexpected happened on the server"
          }
        },
        "summary" : "Returns security configuration of wired network interface",
        "tags" : [ "Security" ]
      },
      "put" : {
        "description" : "Updates security configuration of wired network interface",
        "operationId" : "updateWiredSecurityConfig",
        "parameters" : [ {
          "description" : "Name of wired interface",
          "example" : "eth0",
          "explode" : false,
          "in" : "path",
          "name" : "wiredInterfaceName",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/SecurityConfig"
              }
            }
          },
          "description" : "Security configutaion to be updated",
          "required" : true
        },
        "responses" : {
          "204" : {
            "description" : "Operation successful."
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "The request is incomplete or malformed"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Not authorized to access this resource"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Access forbidden for this resource"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "The resource was not found"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Something unexpected happened on the server"
          }
        },
        "summary" : "Updates security configuration of wired network interface",
        "tags" : [ "Security" ]
      }
    },
    "/interfaces/{wirelessInterfaceName}/access-point" : {
      "get" : {
        "description" : "Returns accesspoint configuration of wireless network interface",
        "operationId" : "getInterfaceAccessPoint",
        "parameters" : [ {
          "description" : "Name of wireless interface",
          "example" : "wlan0",
          "explode" : false,
          "in" : "path",
          "name" : "wirelessInterfaceName",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AccessPoint"
                }
              }
            },
            "description" : "Operation successful."
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Not authorized to access this resource"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Access forbidden for this resource"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "The resource was not found"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Something unexpected happened on the server"
          }
        },
        "summary" : "Returns accesspoint configuration of wireless network interface",
        "tags" : [ "Security" ]
      },
      "put" : {
        "description" : "Updates wireless access point of wireless network interface",
        "operationId" : "updateInterfaceAccessPoint",
        "parameters" : [ {
          "description" : "Name of wireless interface",
          "example" : "wlan0",
          "explode" : false,
          "in" : "path",
          "name" : "wirelessInterfaceName",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AccessPoint"
              }
            }
          },
          "description" : "Updated accesspoint configutaion",
          "required" : true
        },
        "responses" : {
          "204" : {
            "description" : "Operation successful."
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "The request is incomplete or malformed"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Not authorized to access this resource"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Access forbidden for this resource"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "The resource was not found"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Something unexpected happened on the server"
          }
        },
        "summary" : "Updates wireless access point of wireless network interface",
        "tags" : [ "Security" ]
      }
    },
    "/interfaces/{wirelessInterfaceName}/access-point/security" : {
      "get" : {
        "description" : "Returns accesspoint security configuration of wireless network interface",
        "operationId" : "getInterfaceAccessPointSecurity",
        "parameters" : [ {
          "description" : "Name of wireless interface",
          "example" : "wlan0",
          "explode" : false,
          "in" : "path",
          "name" : "wirelessInterfaceName",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SecurityConfig"
                }
              }
            },
            "description" : "Operation successful."
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Not authorized to access this resource"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Access forbidden for this resource"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "The resource was not found"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Something unexpected happened on the server"
          }
        },
        "summary" : "Returns accesspoint security configuration of wireless network interface",
        "tags" : [ "Security" ]
      },
      "put" : {
        "description" : "Updates accesspoint security configuration of wireless network interface",
        "operationId" : "updateInterfaceAccessPointSecurity",
        "parameters" : [ {
          "description" : "Name of wireless interface",
          "example" : "wlan0",
          "explode" : false,
          "in" : "path",
          "name" : "wirelessInterfaceName",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/SecurityConfig"
              }
            }
          },
          "description" : "Security configutaion to be updated",
          "required" : true
        },
        "responses" : {
          "204" : {
            "description" : "Operation successful."
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "The request is incomplete or malformed"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Not authorized to access this resource"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Access forbidden for this resource"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "The resource was not found"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Something unexpected happened on the server"
          }
        },
        "summary" : "Updates accesspoint security configuration of wireless network interface",
        "tags" : [ "Security" ]
      }
    },
    "/interfaces/{wirelessInterfaceName}/ssids" : {
      "get" : {
        "description" : "Get the ssids of the interface",
        "operationId" : "getInterfaceSSIDs",
        "parameters" : [ {
          "description" : "Name of wireless interface",
          "example" : "wlan0",
          "explode" : false,
          "in" : "path",
          "name" : "wirelessInterfaceName",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SSIDs"
                }
              }
            },
            "description" : "List of ssids of interface"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Not authorized to access this resource"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Access forbidden for this resource"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "The resource was not found"
          }
        },
        "summary" : "Get the ssids of the interface",
        "tags" : [ "Security" ]
      },
      "post" : {
        "description" : "Add ssid for the interface",
        "operationId" : "createInterfaceSSID",
        "parameters" : [ {
          "description" : "Name of wireless interface",
          "example" : "wlan0",
          "explode" : false,
          "in" : "path",
          "name" : "wirelessInterfaceName",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/SSID"
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "SSID for interface created"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "The request is incomplete or malformed"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Not authorized to access this resource"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Access forbidden for this resource"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "The resource was not found"
          }
        },
        "summary" : "Add ssid for the interface",
        "tags" : [ "Security" ]
      }
    },
    "/interfaces/{wirelessInterfaceName}/ssids/{ssid}" : {
      "delete" : {
        "description" : "Remove ssid from the interface",
        "operationId" : "RemoveInterfaceSSID",
        "parameters" : [ {
          "description" : "Name of wireless interface",
          "example" : "wlan0",
          "explode" : false,
          "in" : "path",
          "name" : "wirelessInterfaceName",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "SSID of interface",
          "example" : "mySSID",
          "explode" : false,
          "in" : "path",
          "name" : "ssid",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "204" : {
            "description" : "SSID removed"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Not authorized to access this resource"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Access forbidden for this resource"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "The resource was not found"
          }
        },
        "summary" : "Remove ssid from the interface",
        "tags" : [ "Security" ]
      },
      "get" : {
        "description" : "Get the ssid of the interface",
        "operationId" : "getInterfaceSSID",
        "parameters" : [ {
          "description" : "Name of wireless interface",
          "example" : "wlan0",
          "explode" : false,
          "in" : "path",
          "name" : "wirelessInterfaceName",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "SSID of interface",
          "example" : "mySSID",
          "explode" : false,
          "in" : "path",
          "name" : "ssid",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SSID"
                }
              }
            },
            "description" : "Ssid information of interface"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Not authorized to access this resource"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Access forbidden for this resource"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "The resource was not found"
          }
        },
        "summary" : "Get the ssid of the interface",
        "tags" : [ "Security" ]
      },
      "put" : {
        "description" : "Update settings for ssid from the interface",
        "operationId" : "UpdateInterfaceSSID",
        "parameters" : [ {
          "description" : "Name of wireless interface",
          "example" : "wlan0",
          "explode" : false,
          "in" : "path",
          "name" : "wirelessInterfaceName",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "SSID of interface",
          "example" : "mySSID",
          "explode" : false,
          "in" : "path",
          "name" : "ssid",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/SSIDProperties"
              }
            }
          }
        },
        "responses" : {
          "204" : {
            "description" : "Ssid settings of interface updated"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Not authorized to access this resource"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Access forbidden for this resource"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "The resource was not found"
          }
        },
        "summary" : "Update settings for ssid from the interface",
        "tags" : [ "Security" ]
      }
    },
    "/interfaces/{wirelessInterfaceName}/ssids/{ssid}/security" : {
      "get" : {
        "description" : "Get the ssid security settings of the interface",
        "operationId" : "getInterfaceSSIDSecurity",
        "parameters" : [ {
          "description" : "Name of wireless interface",
          "example" : "wlan0",
          "explode" : false,
          "in" : "path",
          "name" : "wirelessInterfaceName",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "SSID of interface",
          "example" : "mySSID",
          "explode" : false,
          "in" : "path",
          "name" : "ssid",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SecurityConfig"
                }
              }
            },
            "description" : "Security settings for ssid of interface"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Not authorized to access this resource"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Access forbidden for this resource"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "The resource was not found"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Something unexpected happened on the server"
          }
        },
        "summary" : "Get the ssid security settings of the interface",
        "tags" : [ "Security" ]
      },
      "put" : {
        "description" : "Update the ssid security settings of the interface",
        "operationId" : "updateInterfaceSSIDSecurity",
        "parameters" : [ {
          "description" : "Name of wireless interface",
          "example" : "wlan0",
          "explode" : false,
          "in" : "path",
          "name" : "wirelessInterfaceName",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "SSID of interface",
          "example" : "mySSID",
          "explode" : false,
          "in" : "path",
          "name" : "ssid",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/SecurityConfig"
              }
            }
          }
        },
        "responses" : {
          "204" : {
            "description" : "Security settings for ssid of interface updated"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Not authorized to access this resource"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Access forbidden for this resource"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "The resource was not found"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Something unexpected happened on the server"
          }
        },
        "summary" : "Update the ssid security settings of the interface",
        "tags" : [ "Security" ]
      }
    },
    "/interfaces/{interfaceName}/security-capabilities" : {
      "get" : {
        "description" : "Returns details of all supported security protocols",
        "operationId" : "getSupportedSecurityProtocols",
        "parameters" : [ {
          "description" : "Name of interface",
          "explode" : false,
          "in" : "path",
          "name" : "interfaceName",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SecurityProtocols"
                }
              }
            },
            "description" : "Operation successful"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "The request is incomplete or malformed"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Not authorized to access this resource"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Access forbidden for this resource"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "The resource was not found"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Something unexpected happened on the server"
          }
        },
        "summary" : "Returns details of all supported security protocols",
        "tags" : [ "Security" ]
      }
    },
    "/proxy" : {
      "get" : {
        "description" : "Retrieve all proxy related information",
        "operationId" : "getProxies",
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Proxy"
                }
              }
            },
            "description" : "OK"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Not authorized to access this resource"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Access forbidden for this resource"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "The resource was not found"
          }
        },
        "summary" : "Get all the proxy related entries.",
        "tags" : [ "Proxy" ]
      },
      "put" : {
        "description" : "Sends all proxy related informations",
        "operationId" : "putProxies",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Proxy"
              }
            }
          }
        },
        "responses" : {
          "204" : {
            "description" : "OK."
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "The request is incomplete or malformed"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Not authorized to access this resource"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Access forbidden for this resource"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "The resource was not found"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Something unexpected happened on the server"
          }
        },
        "summary" : "Update the proxy entries.",
        "tags" : [ "Proxy" ]
      }
    },
    "/hosts" : {
      "get" : {
        "description" : "Get the hosts table entries",
        "operationId" : "getHosts",
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/HostEntries"
                }
              }
            },
            "description" : "OK"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Not authorized to access this resource"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Access forbidden for this resource"
          }
        },
        "summary" : "Get the hosts table entries",
        "tags" : [ "Hosts" ]
      },
      "put" : {
        "description" : "Sends all proxy related informations",
        "operationId" : "putHosts",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/HostEntries"
              }
            }
          }
        },
        "responses" : {
          "204" : {
            "description" : "OK."
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "The request is incomplete or malformed"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Not authorized to access this resource"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Access forbidden for this resource"
          }
        },
        "summary" : "Update the hosts table entries",
        "tags" : [ "Hosts" ]
      }
    },
    "/services" : {
      "get" : {
        "description" : "Receives the current state of the network discovery services",
        "operationId" : "getServices",
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Services"
                }
              }
            },
            "description" : "OK."
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Not authorized to access this resource"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Access forbidden for this resource"
          }
        },
        "summary" : "Get the state of the network discovery services",
        "tags" : [ "Services" ]
      }
    },
    "/services/{serviceName}" : {
      "get" : {
        "description" : "Receives the current state of the network discovery services",
        "operationId" : "getService",
        "parameters" : [ {
          "description" : "Name of service",
          "explode" : false,
          "in" : "path",
          "name" : "serviceName",
          "required" : true,
          "schema" : {
            "enum" : [ "msdn", "llmnr", "upnp" ],
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Service"
                }
              }
            },
            "description" : "OK."
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Not authorized to access this resource"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Access forbidden for this resource"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "The resource was not found"
          }
        },
        "summary" : "Get the state of the network discovery services",
        "tags" : [ "Services" ]
      },
      "put" : {
        "description" : "Activate and deactivate service",
        "operationId" : "setService",
        "parameters" : [ {
          "description" : "Name of service",
          "explode" : false,
          "in" : "path",
          "name" : "serviceName",
          "required" : true,
          "schema" : {
            "enum" : [ "msdn", "llmnr", "upnp" ],
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Service"
              }
            }
          }
        },
        "responses" : {
          "204" : {
            "description" : "Successfully updated"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "The request is incomplete or malformed"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Not authorized to access this resource"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Access forbidden for this resource"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "The resource was not found"
          }
        },
        "summary" : "Activate and deactivate service",
        "tags" : [ "Services" ]
      }
    },
    "/tasks" : {
      "get" : {
        "description" : "Get a list of all tasks",
        "operationId" : "getTasks",
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OneOfTasks"
                }
              }
            },
            "description" : "Tasks get successfully"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Not authorized to access this resource"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Access forbidden for this resource"
          }
        },
        "summary" : "Get a list of all tasks",
        "tags" : [ "Tasks" ]
      },
      "post" : {
        "description" : "Creating a new task",
        "operationId" : "createTask",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/OneOfTask"
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "Interface successfully created"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "The request is incomplete or malformed"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Not authorized to access this resource"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Access forbidden for this resource"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Something unexpected happened on the server"
          }
        },
        "summary" : "Create a new task",
        "tags" : [ "Tasks" ]
      }
    },
    "/tasks/{taskId}" : {
      "delete" : {
        "description" : "Remove a specific task",
        "operationId" : "removeTask",
        "parameters" : [ {
          "description" : "The task id",
          "explode" : false,
          "in" : "path",
          "name" : "taskId",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "204" : {
            "description" : "Task deleted successfully"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Not authorized to access this resource"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Access forbidden for this resource"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "The resource was not found"
          }
        },
        "summary" : "Remove a specific task",
        "tags" : [ "Tasks" ]
      },
      "get" : {
        "description" : "Get a specific task",
        "operationId" : "getTask",
        "parameters" : [ {
          "description" : "The task id",
          "explode" : false,
          "in" : "path",
          "name" : "taskId",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OneOfTask"
                }
              }
            },
            "description" : "Task get successfully"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Not authorized to access this resource"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Access forbidden for this resource"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "The resource was not found"
          }
        },
        "summary" : "Get a specific task",
        "tags" : [ "Tasks" ]
      }
    }
  },
  "components" : {
    "parameters" : {
      "interfaceName" : {
        "description" : "Name of interface",
        "explode" : false,
        "in" : "path",
        "name" : "interfaceName",
        "required" : true,
        "schema" : {
          "type" : "string"
        },
        "style" : "simple"
      },
      "serviceName" : {
        "description" : "Name of service",
        "explode" : false,
        "in" : "path",
        "name" : "serviceName",
        "required" : true,
        "schema" : {
          "enum" : [ "msdn", "llmnr", "upnp" ],
          "type" : "string"
        },
        "style" : "simple"
      },
      "wiredInterfaceName" : {
        "description" : "Name of wired interface",
        "example" : "eth0",
        "explode" : false,
        "in" : "path",
        "name" : "wiredInterfaceName",
        "required" : true,
        "schema" : {
          "type" : "string"
        },
        "style" : "simple"
      },
      "wirelessInterfaceName" : {
        "description" : "Name of wireless interface",
        "example" : "wlan0",
        "explode" : false,
        "in" : "path",
        "name" : "wirelessInterfaceName",
        "required" : true,
        "schema" : {
          "type" : "string"
        },
        "style" : "simple"
      },
      "accessPointName" : {
        "description" : "Name of access point",
        "explode" : false,
        "in" : "path",
        "name" : "accessPointName",
        "required" : true,
        "schema" : {
          "type" : "string"
        },
        "style" : "simple"
      },
      "ssid" : {
        "description" : "SSID of interface",
        "example" : "mySSID",
        "explode" : false,
        "in" : "path",
        "name" : "ssid",
        "required" : true,
        "schema" : {
          "type" : "string"
        },
        "style" : "simple"
      },
      "index" : {
        "description" : "The index of an array",
        "explode" : false,
        "in" : "path",
        "name" : "index",
        "required" : true,
        "schema" : {
          "type" : "integer"
        },
        "style" : "simple"
      },
      "id" : {
        "description" : "The ID of a resource",
        "explode" : false,
        "in" : "path",
        "name" : "id",
        "required" : true,
        "schema" : {
          "type" : "integer"
        },
        "style" : "simple"
      },
      "taskId" : {
        "description" : "The task id",
        "explode" : false,
        "in" : "path",
        "name" : "taskId",
        "required" : true,
        "schema" : {
          "type" : "string"
        },
        "style" : "simple"
      }
    },
    "responses" : {
      "BadRequest" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/Problem"
            }
          }
        },
        "description" : "The request is incomplete or malformed"
      },
      "Unauthorized" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/Problem"
            }
          }
        },
        "description" : "Not authorized to access this resource"
      },
      "Forbidden" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/Problem"
            }
          }
        },
        "description" : "Access forbidden for this resource"
      },
      "NotFound" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/Problem"
            }
          }
        },
        "description" : "The resource was not found"
      },
      "InternalServerError" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/Problem"
            }
          }
        },
        "description" : "Something unexpected happened on the server"
      }
    },
    "schemas" : {
      "AccessPoint" : {
        "description" : "Accesspoint configuration",
        "example" : {
          "ssid" : "ctrlX-AP"
        },
        "properties" : {
          "ssid" : {
            "description" : "ssid provided by accesspoint",
            "example" : "ctrlX-AP",
            "type" : "string"
          }
        },
        "required" : [ "ssid" ],
        "type" : "object"
      },
      "SSIDProperties" : {
        "description" : "Additional configuration parameters for SSID",
        "example" : {
          "connected" : true,
          "autoconnect" : true,
          "state" : "wifi password wrong"
        },
        "properties" : {
          "autoconnect" : {
            "description" : "if true, autoconnect for this ssid is enabled",
            "example" : true,
            "type" : "boolean"
          },
          "connected" : {
            "description" : "show connected ssid",
            "example" : true,
            "readOnly" : true,
            "type" : "boolean"
          },
          "state" : {
            "description" : "Show the current state for the ssid, e.g. wrong password, general problem, ...",
            "example" : "wifi password wrong",
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "SSID" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/SSIDProperties"
        }, {
          "$ref" : "#/components/schemas/SSID_allOf"
        } ]
      },
      "SSIDs" : {
        "items" : {
          "$ref" : "#/components/schemas/SSID"
        },
        "type" : "array"
      },
      "Interface" : {
        "description" : "Static properties and status information of an interface",
        "example" : {
          "mode" : "wired",
          "hardwareAddress" : "AA:BB:CC:DD:EE:FF",
          "kind" : "ethernet",
          "ipForwarding" : false,
          "name" : "lan01",
          "link" : true,
          "disabled" : true
        },
        "properties" : {
          "name" : {
            "description" : "The name of the interface",
            "example" : "lan01",
            "readOnly" : false,
            "type" : "string"
          },
          "hardwareAddress" : {
            "description" : "The hardware address of the interface. For ethernet based networks, the hardware address may be referred to as the mac address.",
            "example" : "AA:BB:CC:DD:EE:FF",
            "readOnly" : true,
            "type" : "string"
          },
          "link" : {
            "description" : "Boolean that describes the current link status of an interface",
            "example" : true,
            "readOnly" : true,
            "type" : "boolean"
          },
          "disabled" : {
            "description" : "Boolean that determines the current status of an interface",
            "example" : true,
            "type" : "boolean"
          },
          "kind" : {
            "$ref" : "#/components/schemas/Kinds"
          },
          "mode" : {
            "$ref" : "#/components/schemas/Modes"
          },
          "ipForwarding" : {
            "default" : false,
            "description" : "Enables ip forwarding for network interface",
            "type" : "boolean"
          }
        },
        "required" : [ "name" ],
        "type" : "object"
      },
      "Interfaces" : {
        "items" : {
          "$ref" : "#/components/schemas/Interface"
        },
        "type" : "array"
      },
      "Kinds" : {
        "description" : "Enum to differentiate between numerous network interfaces.",
        "enum" : [ "ethernet", "wifi", "bridge" ],
        "example" : "ethernet",
        "type" : "string"
      },
      "InterfaceConfiguration" : {
        "description" : "Presents the configuration of an interface",
        "example" : {
          "dhcp4" : true,
          "dhcp6" : true,
          "ipv6Address" : [ "fec0::dedc:abcd/64" ],
          "managed" : false,
          "linkLocalIpv4" : true,
          "ipv4Address" : [ "192.168.1.1/16" ],
          "dhcpOptions" : {
            "dhcpIdentifier" : "mac"
          },
          "disabled" : false,
          "gateway6" : "fec0::dedc:1",
          "dhcpOverrides" : {
            "ipv4" : {
              "routeMetric" : 100,
              "useDns" : true,
              "useNtp" : true,
              "useMtu" : true
            },
            "ipv6" : {
              "routeMetric" : 100,
              "useDns" : true,
              "useNtp" : true,
              "useMtu" : true
            }
          },
          "gateway4" : "192.168.1.254",
          "mtu" : 1500
        },
        "properties" : {
          "disabled" : {
            "deprecated" : true,
            "description" : "Boolean that describes if the interface should be disabled",
            "example" : false,
            "type" : "boolean"
          },
          "dhcp4" : {
            "description" : "Boolean that describes if IPv4 DHCP client should be enabled (not supported in mode 'accessPoint' )",
            "example" : true,
            "type" : "boolean"
          },
          "dhcp6" : {
            "description" : "Boolean that describes if IPv6 DHCP client should be enabled (not supported in mode 'accessPoint' )",
            "example" : true,
            "type" : "boolean"
          },
          "ipv4Address" : {
            "description" : "A list of static ipv4 addresses in CIDR notation",
            "example" : [ "192.168.1.1/16" ],
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "ipv6Address" : {
            "description" : "A list of static ipv6 addresses in CIDR notation",
            "example" : [ "fec0::dedc:abcd/64" ],
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "gateway4" : {
            "description" : "Gateway to access the network over IPv4 (not supported in mode 'accessPoint' )",
            "example" : "192.168.1.254",
            "type" : "string"
          },
          "gateway6" : {
            "description" : "Gateway to access the network over IPv6 (not supported in mode 'accessPoint' )",
            "example" : "fec0::dedc:1",
            "type" : "string"
          },
          "managed" : {
            "description" : "Describes whether a network interfaces is managed or not. By default every network interface is not managed.",
            "example" : false,
            "type" : "boolean"
          },
          "dhcpOptions" : {
            "$ref" : "#/components/schemas/DhcpOptions"
          },
          "dhcpOverrides" : {
            "$ref" : "#/components/schemas/InterfaceConfiguration_dhcpOverrides"
          },
          "linkLocalIpv4" : {
            "description" : "Set the link local configuration for ipv4 of the interface.\nWith linkLocalIpv4=true, the interface gets an additional ip address in the range 169.254.0.0/16\n",
            "type" : "boolean"
          },
          "mtu" : {
            "description" : "Set the mtu size of the interface, changing mtu size requires reboot!\nValue is only valid, if no mtu is received from dhcp.\nIf mtu should be changed when mtu value is provided by dhcp, dhcp override useMtu has to be set to false\n",
            "example" : 1500,
            "type" : "integer"
          }
        },
        "type" : "object"
      },
      "DhcpOptions" : {
        "example" : {
          "dhcpIdentifier" : "mac"
        },
        "properties" : {
          "dhcpIdentifier" : {
            "$ref" : "#/components/schemas/DhcpIdentifiers"
          }
        },
        "type" : "object"
      },
      "DhcpOverrides" : {
        "example" : {
          "routeMetric" : 100,
          "useDns" : true,
          "useNtp" : true,
          "useMtu" : true
        },
        "properties" : {
          "useDns" : {
            "default" : true,
            "description" : "Receive dns servers from dhcp server",
            "example" : true,
            "type" : "boolean"
          },
          "useNtp" : {
            "default" : false,
            "description" : "Receive ntp servers from dhcp server",
            "example" : true,
            "type" : "boolean"
          },
          "useMtu" : {
            "default" : true,
            "description" : "MTU received from the DHCP server will be set as the MTU of the network interface. If user defined mtu should be used, this value has to be false",
            "example" : true,
            "type" : "boolean"
          },
          "routeMetric" : {
            "description" : "Use this value for default metric for automatically-added routes. Use this to prioritize routes for devices by setting a lower metric on a preferred interface",
            "example" : 100,
            "type" : "integer"
          }
        },
        "type" : "object"
      },
      "DhcpIdentifiers" : {
        "description" : "Select dhcp identifier from rfc4361 or mac address. \"mac\" is required for windows dhcp servers with ipv4 address reservation",
        "enum" : [ "mac", "rfc4361" ],
        "example" : "mac",
        "type" : "string"
      },
      "IpAddress" : {
        "description" : "Can be either a Ipv4 or Ipv6 Address containing information about static, dynamic or fixed ip addresses",
        "example" : {
          "kind" : "fix",
          "address" : "fe80::dcad:beff:fe00:0001/64"
        },
        "properties" : {
          "kind" : {
            "$ref" : "#/components/schemas/IpAddressKinds"
          },
          "address" : {
            "example" : "192.168.1.1/16 or fec0::dedc:abcd/64",
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "IpAddresses" : {
        "items" : {
          "$ref" : "#/components/schemas/IpAddress"
        },
        "type" : "array"
      },
      "IpAddressKinds" : {
        "description" : "Enum to differentiate between numerous kinds of IpAddresses",
        "enum" : [ "static", "dynamic", "fix", "link-local" ],
        "type" : "string"
      },
      "IpRoute" : {
        "description" : "Presents an IP route rule",
        "example" : {
          "metric" : 10,
          "destination" : "192.168.0.0/24",
          "gateway" : "192.168.0.1"
        },
        "properties" : {
          "destination" : {
            "description" : "Destination address or address space (CIDR Notation) for which this route is used. Default route is written as 0.0.0.0/0",
            "example" : "192.168.0.0/24",
            "type" : "string"
          },
          "gateway" : {
            "description" : "Gateway which will be used to connect to the target network",
            "example" : "192.168.0.1",
            "type" : "string"
          },
          "metric" : {
            "description" : "(optional) Metric indicates the associated cost of using the indicated route",
            "example" : 10,
            "type" : "integer"
          }
        },
        "required" : [ "destination", "gateway" ],
        "type" : "object"
      },
      "IpRoutes" : {
        "items" : {
          "$ref" : "#/components/schemas/IpRoute"
        },
        "type" : "array"
      },
      "NameServer" : {
        "description" : "Presents name server configuration",
        "example" : {
          "addresses" : [ "8.8.8.8", "8.8.8.8" ],
          "search" : [ "de.bosch.com", "de.bosch.com" ]
        },
        "properties" : {
          "addresses" : {
            "items" : {
              "description" : "The address of the name server",
              "example" : "8.8.8.8",
              "type" : "string"
            },
            "type" : "array"
          },
          "search" : {
            "items" : {
              "example" : "de.bosch.com",
              "type" : "string"
            },
            "nullable" : true,
            "type" : "array"
          }
        },
        "type" : "object"
      },
      "Changes" : {
        "example" : {
          "discarded" : false,
          "applied" : false,
          "diff" : "9c9\n<       \"192.168.1.1/24\"\n---\n>       \"192.168..80.1/24\"\n"
        },
        "properties" : {
          "applied" : {
            "example" : false,
            "type" : "boolean"
          },
          "discarded" : {
            "example" : false,
            "type" : "boolean"
          },
          "diff" : {
            "example" : "9c9\n<       \"192.168.1.1/24\"\n---\n>       \"192.168..80.1/24\"\n",
            "nullable" : true,
            "readOnly" : true,
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "TaskPing" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Task"
        }, {
          "$ref" : "#/components/schemas/TaskPing_allOf"
        } ],
        "description" : "Execute a ping from the server"
      },
      "OneOfTask" : {
        "oneOf" : [ {
          "$ref" : "#/components/schemas/TaskPing"
        } ]
      },
      "OneOfTasks" : {
        "items" : {
          "$ref" : "#/components/schemas/OneOfTask"
        },
        "type" : "array"
      },
      "Proxy" : {
        "example" : {
          "bypass" : "localhost, .local, 127.0.0.1, .example.com, fec0::1, 192.168.0.0/16, 2::/64",
          "http" : {
            "protocol" : "http",
            "password" : "password",
            "port" : 3128,
            "host" : "proxy.intranet.company.com",
            "authentication" : true,
            "username" : "admin"
          },
          "https" : {
            "protocol" : "http",
            "password" : "password",
            "port" : 3128,
            "host" : "proxy.intranet.company.com",
            "authentication" : true,
            "username" : "admin"
          },
          "enabled" : true
        },
        "properties" : {
          "http" : {
            "$ref" : "#/components/schemas/ProxyServer"
          },
          "https" : {
            "$ref" : "#/components/schemas/ProxyServer"
          },
          "enabled" : {
            "description" : "Enable/disable proxy usage",
            "example" : true,
            "type" : "boolean"
          },
          "bypass" : {
            "description" : "Comma separated list of hosts to bypass proxy settings",
            "example" : "localhost, .local, 127.0.0.1, .example.com, fec0::1, 192.168.0.0/16, 2::/64",
            "type" : "string"
          }
        },
        "required" : [ "enabled", "http", "https" ],
        "type" : "object"
      },
      "ProxyServer" : {
        "example" : {
          "protocol" : "http",
          "password" : "password",
          "port" : 3128,
          "host" : "proxy.intranet.company.com",
          "authentication" : true,
          "username" : "admin"
        },
        "properties" : {
          "protocol" : {
            "description" : "http or https",
            "example" : "http",
            "type" : "string"
          },
          "host" : {
            "description" : "Proxy hyperlink or ip address",
            "example" : "proxy.intranet.company.com",
            "type" : "string"
          },
          "port" : {
            "description" : "Proxy port",
            "example" : 3128,
            "type" : "integer"
          },
          "authentication" : {
            "description" : "Enable/disable proxy authentication",
            "example" : true,
            "type" : "boolean"
          },
          "username" : {
            "description" : "Proxy authentication user's name or login",
            "example" : "admin",
            "type" : "string"
          },
          "password" : {
            "description" : "Proxy authentication password",
            "example" : "password",
            "nullable" : true,
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "interfaceName" : {
        "description" : "Name of interface",
        "example" : "eth0",
        "type" : "string"
      },
      "interfaceNames" : {
        "description" : "Array of interface names",
        "example" : [ "eth0", "eth1" ],
        "items" : {
          "$ref" : "#/components/schemas/interfaceName"
        },
        "type" : "array"
      },
      "SecurityProtocols" : {
        "description" : "supported security protocols",
        "example" : {
          "protocols" : [ {
            "id" : "ieee8021x",
            "name" : "Port-based network access control (IEEE802.1X)",
            "authMethods" : [ "eap-tls", "eap-ttls", "EAP-MSCHAPv2" ]
          }, {
            "id" : "wpa2",
            "name" : "Wi-Fi Protected Access",
            "authMethods" : [ "psk", "eap-tls", "eap-ttls", "eap-peap" ]
          } ]
        },
        "properties" : {
          "protocols" : {
            "items" : {
              "$ref" : "#/components/schemas/SecurityProtocol"
            },
            "type" : "array"
          }
        },
        "required" : [ "protocols" ],
        "type" : "object"
      },
      "SecurityProtocol" : {
        "description" : "security protocol",
        "example" : {
          "id" : "ieee8021x",
          "name" : "port-based network access control (IEEE802.1X)",
          "authMethods" : [ "eap-tls" ]
        },
        "properties" : {
          "id" : {
            "description" : "protocol id",
            "type" : "string"
          },
          "name" : {
            "description" : "display name of protocol",
            "type" : "string"
          },
          "authMethods" : {
            "description" : "supported authentication methods",
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        },
        "required" : [ "authMethods", "id", "name" ],
        "type" : "object"
      },
      "ConfigurationBase" : {
        "discriminator" : {
          "propertyName" : "configType"
        },
        "properties" : {
          "configType" : {
            "$ref" : "#/components/schemas/AuthMethodConfigurationTypes"
          }
        },
        "type" : "object"
      },
      "OneOfConfigurations" : {
        "oneOf" : [ {
          "$ref" : "#/components/schemas/EAPTLSConfig"
        }, {
          "$ref" : "#/components/schemas/PSKConfig"
        }, {
          "$ref" : "#/components/schemas/OpenWifiConfig"
        } ]
      },
      "SecurityConfig" : {
        "description" : "security configuration",
        "example" : {
          "enabled" : true,
          "protocol" : "ieee8021x",
          "authMethod" : "eap-tls",
          "configuration" : {
            "configType" : "eaptls",
            "identity" : "client",
            "ca" : "ca.crt",
            "cert" : "client.crt",
            "privateKey" : "client.key",
            "privateKeyPassword" : "password"
          }
        },
        "properties" : {
          "enabled" : {
            "description" : "if true, security configuration is enabled.",
            "type" : "boolean"
          },
          "protocol" : {
            "description" : "security protocol",
            "type" : "string"
          },
          "authMethod" : {
            "description" : "authentication method",
            "type" : "string"
          },
          "configuration" : {
            "$ref" : "#/components/schemas/OneOfConfigurations"
          }
        },
        "required" : [ "authMethod", "configuration", "enabled", "protocol" ],
        "type" : "object"
      },
      "EAPTLSConfig" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/ConfigurationBase"
        }, {
          "$ref" : "#/components/schemas/EAPTLSConfig_allOf"
        } ],
        "description" : "configuration of authentication method eap-tls",
        "example" : {
          "configType" : "eaptls",
          "identity" : "client",
          "ca" : "path/to/ca",
          "cert" : "path/to/cert",
          "privateKey" : "path/to/privatekey",
          "privateKeyPassword" : "password"
        }
      },
      "PSKConfig" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/ConfigurationBase"
        }, {
          "$ref" : "#/components/schemas/PSKConfig_allOf"
        } ],
        "description" : "configuration of authentication method psk",
        "example" : {
          "configType" : "psk",
          "password" : "xxxx"
        }
      },
      "HostEntry" : {
        "description" : "Host table entry",
        "example" : {
          "hostname" : "localhost",
          "address" : "127.0.0.1",
          "aliases" : [ "local" ]
        },
        "properties" : {
          "address" : {
            "description" : "Ipv4 or ipv6 address",
            "example" : "127.0.0.1",
            "type" : "string"
          },
          "hostname" : {
            "description" : "Host names may contain only alphanumeric characters, minus signs ('-'), and periods ('.'). They must begin with an alphabetic character and end with an alphanumeric character.",
            "example" : "localhost",
            "type" : "string"
          },
          "aliases" : {
            "description" : "Optional aliases provide for name changes, alternate spellings, shorter hostnames, or generic hostnames (for example, localhost)",
            "example" : [ "local" ],
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        },
        "required" : [ "address", "hostname" ],
        "type" : "object"
      },
      "HostEntries" : {
        "description" : "Array of host table entries.",
        "example" : [ {
          "name" : "localhost",
          "address" : "127.0.0.1",
          "alias" : [ "local" ]
        }, {
          "name" : "localhostV6",
          "address" : "::1",
          "alias" : [ "localV6" ]
        } ],
        "items" : {
          "$ref" : "#/components/schemas/HostEntry"
        },
        "type" : "array"
      },
      "Service" : {
        "description" : "The state of the service",
        "example" : {
          "name" : "mdns",
          "active" : true,
          "enabled" : false
        },
        "properties" : {
          "name" : {
            "description" : "The name of the service",
            "enum" : [ "mdns", "llmnr", "upnp" ],
            "example" : "mdns",
            "type" : "string"
          },
          "enabled" : {
            "default" : true,
            "description" : "Service is enabled",
            "example" : false,
            "type" : "boolean"
          },
          "active" : {
            "description" : "Service is active",
            "readOnly" : true,
            "type" : "boolean"
          }
        },
        "type" : "object"
      },
      "Services" : {
        "description" : "A list of all network discovery Services",
        "example" : [ {
          "name" : "mdns",
          "enabled" : true
        }, {
          "name" : "llmnr",
          "enabled" : true
        }, {
          "name" : "upnp",
          "enabled" : true
        } ],
        "items" : {
          "$ref" : "#/components/schemas/Service"
        },
        "type" : "array"
      },
      "Problem" : {
        "description" : "This document defines a \"problem detail\" as a way  to carry machine-readable details of errors in a  HTTP response to avoid the need to define new error  response formats for HTTP APIs.\n",
        "properties" : {
          "type" : {
            "default" : "about:blank",
            "description" : "A URI reference [RFC3986] that identifies the problem type. \nThis specification encourages that, when dereferenced, \nit provide human-readable documentation for the problem type \n(e.g., using HTML [W3C.REC-html5-20141028]). When this member \nis not present, its value is assumed to be \"about:blank\".\n",
            "example" : "https://example.com/probs/out-of-credit",
            "format" : "uri",
            "type" : "string"
          },
          "title" : {
            "description" : "A short, human-readable summary of the problem type. \nIt SHOULD NOT change from occurrence to occurrence of the problem, \nexcept for purposes of localization (e.g., using proactive content \nnegotiation; see [RFC7231], Section 3.4).\n",
            "example" : "You do not have enough credit.",
            "type" : "string"
          },
          "status" : {
            "description" : "The HTTP status code ([RFC7231], Section 6) generated by the \norigin server for this occurrence of the problem.\n",
            "example" : 403,
            "format" : "int32",
            "type" : "integer"
          },
          "detail" : {
            "description" : "A human-readable explanation specific to this occurrence of the problem.\n",
            "example" : "Your current balance is 30, but that costs 50.",
            "type" : "string"
          },
          "instance" : {
            "description" : "A URI reference that identifies the specific occurrence of the problem.\nIt may or may not yield further information if dereferenced.\n",
            "example" : "/account/12345/msgs/abc",
            "type" : "string"
          },
          "code" : {
            "deprecated" : true,
            "description" : "An error code issued by the system that caused the original problem.\nThis code can be used to track down the root cause of the error.\n",
            "example" : "F360001",
            "type" : "string"
          },
          "mainDiagnosisCode" : {
            "description" : "The main diagnosis code is issued by the system that caused the problem.\nThis code can be used to track down the root cause and source of the error.\nIt can be used to search in the documentation for a solution.\nIt SHOULD NOT change from occurrence to occurrence of the same problem.\n",
            "example" : "080F0100",
            "type" : "string"
          },
          "detailedDiagnosisCode" : {
            "description" : "The detailed diagnosis code issued by the system that caused the problem.\nThis code can be used to track down the detailed cause and source of the error.\nIt can be used to search in the documentation for a solution.\nThe detailed diagnosis code gives additional information about the cause of the error.\nIt SHOULD NOT change from occurrence to occurrence of the same problem.\n",
            "example" : "00666001",
            "type" : "string"
          },
          "dynamicDescription" : {
            "description" : "A dynamic description gives detailed information about the occurrence of a problem.\nIt can change between different occurrences of the same error.\n",
            "example" : "value = -4.5",
            "type" : "string"
          },
          "severity" : {
            "description" : " Severity of a problem as defined RFC5424 of the Syslog standard, see https://tools.ietf.org/html/rfc5424",
            "enum" : [ "Emergency", "Alert", "Critical", "Error", "Warning", "Notice", "Informational", "Debug" ],
            "example" : "Error",
            "type" : "string"
          },
          "links" : {
            "description" : "Collection of links to fix the problem. E.g. links to online user manual,\nto an online community (using tags) or a developer chat (e.g. Slack).\n",
            "items" : {
              "example" : "https://stackoverflow.com/questions/tagged/boschrexroth+controlx+f360001",
              "format" : "uri",
              "type" : "string"
            },
            "type" : "array"
          },
          "moreInfo" : {
            "additionalProperties" : true,
            "example" : {
              "trace" : "ExampleClass.cpp#452 Null pointer exception",
              "class" : "ExampleClass"
            },
            "type" : "object"
          }
        },
        "required" : [ "title", "type" ],
        "type" : "object",
        "x-version" : "1.0.0"
      },
      "State" : {
        "description" : "Network state",
        "example" : {
          "routes" : [ {
            "prefsrc" : "10.0.0.1",
            "protocol" : "dhcp",
            "metric" : 100,
            "scope" : "link",
            "destination" : "192.168.0.0/24",
            "flags" : [ "onlink" ],
            "gateway" : "192.168.0.254"
          }, {
            "prefsrc" : "10.0.0.1",
            "protocol" : "dhcp",
            "metric" : 100,
            "scope" : "link",
            "destination" : "192.168.0.0/24",
            "flags" : [ "onlink" ],
            "gateway" : "192.168.0.254"
          } ],
          "link" : false,
          "dnsServers" : [ "10.0.0.1", "192.168.1.1" ],
          "gateway6" : "fec0::1",
          "transmissionSpeed" : 1000,
          "gateway4" : "192.168.1.1",
          "traffic" : {
            "received" : 1234,
            "sent" : 5678
          },
          "mtu" : {
            "current" : 1500,
            "min" : 92,
            "max" : 65535
          }
        },
        "properties" : {
          "traffic" : {
            "$ref" : "#/components/schemas/Traffic"
          },
          "dnsServers" : {
            "description" : "List of dns servers",
            "example" : [ "10.0.0.1", "192.168.1.1" ],
            "items" : {
              "type" : "string"
            },
            "readOnly" : true,
            "type" : "array"
          },
          "gateway4" : {
            "description" : "Gateway for ipv4",
            "example" : "192.168.1.1",
            "readOnly" : true,
            "type" : "string"
          },
          "gateway6" : {
            "description" : "Gateway for ipv6",
            "example" : "fec0::1",
            "readOnly" : true,
            "type" : "string"
          },
          "routes" : {
            "description" : "Configured routes",
            "items" : {
              "$ref" : "#/components/schemas/Route"
            },
            "readOnly" : true,
            "type" : "array"
          },
          "mtu" : {
            "$ref" : "#/components/schemas/MTU"
          },
          "link" : {
            "description" : "Device is up or down",
            "example" : false,
            "readOnly" : true,
            "type" : "boolean"
          },
          "transmissionSpeed" : {
            "description" : "Negotiated transfer rate of network interface in MBit",
            "example" : 1000,
            "readOnly" : true,
            "type" : "integer"
          }
        },
        "type" : "object"
      },
      "Modes" : {
        "description" : "Enum of interface mode. The modes 'client' and 'accesspoint' are only available for wireless interfaces. Changing\nbetween client and accessPoint leeds to deleting of the existing configuration.\n",
        "enum" : [ "wired", "client", "accessPoint" ],
        "example" : "wired",
        "type" : "string"
      },
      "AuthMethodConfigurationTypes" : {
        "description" : "Enum to authentication methods configuration types",
        "enum" : [ "eaptls", "psk", "open" ],
        "type" : "string"
      },
      "OpenWifiConfig" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/ConfigurationBase"
        }, {
          "$ref" : "#/components/schemas/OpenWifiConfig_allOf"
        } ],
        "description" : "configuration of authentication method psk",
        "example" : {
          "configType" : "open"
        }
      },
      "Traffic" : {
        "description" : "Received and send bytes",
        "example" : {
          "received" : 1234,
          "sent" : 5678
        },
        "properties" : {
          "received" : {
            "description" : "Recieved bytes",
            "example" : 1234,
            "type" : "integer"
          },
          "sent" : {
            "description" : "Sent bytes",
            "example" : 5678,
            "type" : "integer"
          }
        },
        "readOnly" : true,
        "type" : "object"
      },
      "Route" : {
        "description" : "Ip route",
        "example" : {
          "prefsrc" : "10.0.0.1",
          "protocol" : "dhcp",
          "metric" : 100,
          "scope" : "link",
          "destination" : "192.168.0.0/24",
          "flags" : [ "onlink" ],
          "gateway" : "192.168.0.254"
        },
        "properties" : {
          "destination" : {
            "description" : "Destination of route",
            "example" : "192.168.0.0/24",
            "type" : "string"
          },
          "gateway" : {
            "description" : "Gateway of route",
            "example" : "192.168.0.254",
            "type" : "string"
          },
          "protocol" : {
            "description" : "Protocol of route, e.g. dhcp, static, kernel",
            "example" : "dhcp",
            "type" : "string"
          },
          "scope" : {
            "example" : "link",
            "type" : "string"
          },
          "prefsrc" : {
            "example" : "10.0.0.1",
            "type" : "string"
          },
          "metric" : {
            "description" : "Metric of route",
            "example" : 100,
            "type" : "integer"
          },
          "flags" : {
            "description" : "Flags of the route",
            "example" : [ "onlink" ],
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        },
        "readOnly" : true,
        "type" : "object"
      },
      "MTU" : {
        "description" : "Mtu settings of devices",
        "example" : {
          "current" : 1500,
          "min" : 92,
          "max" : 65535
        },
        "properties" : {
          "min" : {
            "description" : "Minimum mtu value",
            "example" : 92,
            "type" : "integer"
          },
          "max" : {
            "description" : "Maximum mtu value",
            "example" : 65535,
            "type" : "integer"
          },
          "current" : {
            "description" : "Current mtu value",
            "example" : 1500,
            "type" : "integer"
          }
        },
        "readOnly" : true,
        "type" : "object"
      },
      "Task" : {
        "discriminator" : {
          "propertyName" : "action"
        },
        "properties" : {
          "id" : {
            "description" : "The temporary id of a task",
            "example" : "123",
            "readOnly" : true,
            "type" : "string"
          },
          "state" : {
            "enum" : [ "pending", "failed", "done", "running" ],
            "example" : "running",
            "readOnly" : true,
            "type" : "string"
          },
          "progress" : {
            "description" : "Progress of the task",
            "example" : 10,
            "maximum" : 100,
            "minimum" : 0,
            "readOnly" : true,
            "type" : "integer"
          },
          "eta" : {
            "description" : "ETA in RFC 3339 format",
            "example" : "2019-01-01T12:00:27.87+00:20",
            "format" : "dateTime",
            "readOnly" : true,
            "type" : "string"
          },
          "action" : {
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "SSID_allOf" : {
        "description" : "Configuration for SSID",
        "properties" : {
          "ssid" : {
            "description" : "The ssid of the wireless network",
            "example" : "wlan-xyz",
            "type" : "string"
          }
        },
        "required" : [ "ssid" ]
      },
      "InterfaceConfiguration_dhcpOverrides" : {
        "example" : {
          "ipv4" : {
            "routeMetric" : 100,
            "useDns" : true,
            "useNtp" : true,
            "useMtu" : true
          },
          "ipv6" : {
            "routeMetric" : 100,
            "useDns" : true,
            "useNtp" : true,
            "useMtu" : true
          }
        },
        "properties" : {
          "ipv4" : {
            "$ref" : "#/components/schemas/DhcpOverrides"
          },
          "ipv6" : {
            "$ref" : "#/components/schemas/DhcpOverrides"
          }
        }
      },
      "TaskPing_allOf" : {
        "properties" : {
          "action" : {
            "description" : "The ping task",
            "enum" : [ "ping" ],
            "example" : "ping",
            "type" : "string"
          },
          "address" : {
            "description" : "Dns name or ip address to ping",
            "example" : "192.168.0.1",
            "type" : "string"
          },
          "interval" : {
            "description" : "Seconds between sending ping requests",
            "example" : 2,
            "type" : "int"
          },
          "count" : {
            "description" : "Number of ping retries",
            "example" : 10,
            "type" : "int"
          },
          "result" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/Problem"
            }, {
              "description" : "Ping response",
              "items" : {
                "type" : "string"
              },
              "readOnly" : true,
              "type" : "array"
            } ]
          }
        }
      },
      "EAPTLSConfig_allOf" : {
        "properties" : {
          "configType" : {
            "enum" : [ "eaptls" ],
            "type" : "string"
          },
          "identity" : {
            "description" : "identity of client",
            "type" : "string"
          },
          "ca" : {
            "description" : "file name of ca certificate",
            "type" : "string"
          },
          "cert" : {
            "description" : "file name of client certificate",
            "type" : "string"
          },
          "privateKey" : {
            "description" : "file name of client private key",
            "type" : "string"
          },
          "privateKeyPassword" : {
            "description" : "password of client private key",
            "type" : "string"
          }
        },
        "required" : [ "ca", "cert", "identity", "privateKey", "privateKeyPassword" ]
      },
      "PSKConfig_allOf" : {
        "properties" : {
          "configType" : {
            "enum" : [ "psk" ],
            "type" : "string"
          },
          "password" : {
            "description" : "password of used ssid",
            "type" : "string"
          }
        },
        "required" : [ "password" ]
      },
      "OpenWifiConfig_allOf" : {
        "properties" : {
          "configType" : {
            "enum" : [ "open" ],
            "type" : "string"
          }
        }
      }
    },
    "securitySchemes" : {
      "UsernamePassword" : {
        "description" : "Enter username and password",
        "flows" : {
          "password" : {
            "scopes" : {
              "dummy" : "Dummy scope (scopes not used)"
            },
            "tokenUrl" : "/identity-manager/api/v1/auth/token"
          }
        },
        "type" : "oauth2"
      },
      "Bearer" : {
        "description" : "Alternatively&colon; Enter bearer token (without prefix 'Bearer')",
        "scheme" : "bearer",
        "type" : "http"
      }
    }
  }
}