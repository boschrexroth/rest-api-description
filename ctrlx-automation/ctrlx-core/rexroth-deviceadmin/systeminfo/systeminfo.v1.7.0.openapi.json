{
  "openapi" : "3.0.1",
  "info" : {
    "contact" : {
      "email" : "support@boschrexroth.com",
      "name" : "Bosch Rexroth Support",
      "url" : "https://www.boschrexroth.com"
    },
    "description" : "This is an API for querying system data on ctrlX CORE devices",
    "title" : "ctrlX CORE - System API",
    "version" : "1.7.0"
  },
  "servers" : [ {
    "description" : "Use this, if this page and the api are on the same server",
    "url" : "/system/api/v1"
  }, {
    "url" : "{protocol}://{host}/system/api/v1",
    "variables" : {
      "protocol" : {
        "default" : "https",
        "description" : "Protocol to access the host (http or https)",
        "enum" : [ "https", "http" ]
      },
      "host" : {
        "default" : "localhost:443",
        "description" : "Hostname (or IP) and port of the Service"
      }
    }
  } ],
  "security" : [ {
    "UsernamePassword" : [ ]
  }, {
    "Bearer" : [ ]
  } ],
  "tags" : [ {
    "description" : "Groups all operations on System",
    "name" : "System"
  }, {
    "description" : "Groups all operations on date and time settings",
    "name" : "Date and Time"
  }, {
    "description" : "Groups all operations on TypePlate",
    "name" : "TypePlate"
  }, {
    "description" : "Groups all operations on Sensors",
    "name" : "Sensors"
  }, {
    "description" : "Group all image upload operations",
    "name" : "Image upload"
  }, {
    "description" : "Group all commissioning operations",
    "name" : "Commissioning"
  } ],
  "paths" : {
    "/commissioning" : {
      "post" : {
        "description" : "Create a commissioning file on the device",
        "operationId" : "createCommissioning",
        "requestBody" : {
          "content" : {
            "multipart/form-data" : {
              "schema" : {
                "$ref" : "#/components/schemas/Commissioning"
              }
            }
          }
        },
        "responses" : {
          "204" : {
            "description" : "Commissioning file created successfully"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "The request is incomplete or malformed"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Not authorized to access this resource"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Access forbidden for this resource"
          }
        },
        "summary" : "Create a commissioning file on the device",
        "tags" : [ "Commissioning" ]
      }
    },
    "/commissioning/{commissioningType}" : {
      "get" : {
        "description" : "Get the required size for the requested reset type",
        "operationId" : "getCommissioning",
        "parameters" : [ {
          "description" : "The commissioning point",
          "explode" : false,
          "in" : "path",
          "name" : "commissioningType",
          "required" : true,
          "schema" : {
            "enum" : [ "image", "factory" ],
            "example" : "factory",
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Commissioning"
                }
              }
            },
            "description" : "Commissioning information received"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "The request is incomplete or malformed"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Not authorized to access this resource"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Access forbidden for this resource"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "The resource was not found"
          }
        },
        "summary" : "Get the required size for the requested reset type",
        "tags" : [ "Commissioning" ]
      }
    },
    "/image-upload" : {
      "post" : {
        "description" : "Upload and extract image and setup files",
        "operationId" : "imageUpload",
        "parameters" : [ {
          "description" : "The mount point of the removable media device (must be in /mnt or /media)",
          "explode" : true,
          "in" : "query",
          "name" : "mount-point",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "content" : {
            "multipart/form-data" : {
              "schema" : {
                "$ref" : "#/components/schemas/ImageUpload"
              }
            }
          }
        },
        "responses" : {
          "204" : {
            "description" : "Image file upload successfully done"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "The request is incomplete or malformed"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Not authorized to access this resource"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Access forbidden for this resource"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Something unexpected happened on the server"
          }
        },
        "summary" : "Upload and extract image and setup files",
        "tags" : [ "Image upload" ]
      }
    },
    "/hostname" : {
      "get" : {
        "description" : "Returns the hostname of the device",
        "operationId" : "getHostname",
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Hostname"
                }
              }
            },
            "description" : "OK"
          }
        },
        "tags" : [ "System" ]
      },
      "put" : {
        "description" : "Set a new hostname for the device",
        "operationId" : "setHostname",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Hostname"
              }
            }
          },
          "description" : "New hostname for device. Must start with character or digit, can contain characters, digits\nand hyphon. Maximal allowed length is 64 characters.\n",
          "required" : true
        },
        "responses" : {
          "204" : {
            "description" : "Hostname set successfully"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "The request is incomplete or malformed"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Not authorized to access this resource"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Access forbidden for this resource"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Something unexpected happened on the server"
          }
        },
        "tags" : [ "System" ]
      }
    },
    "/sensors" : {
      "get" : {
        "description" : "Return a list of all available sensors",
        "operationId" : "getSensors",
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Sensors"
                }
              }
            },
            "description" : "Returns a list of sensors information"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Not authorized to access this resource"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Something unexpected happened on the server"
          }
        },
        "tags" : [ "Sensors" ]
      }
    },
    "/sensors/{id}" : {
      "get" : {
        "operationId" : "getSensorData",
        "parameters" : [ {
          "explode" : false,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Sensor"
                }
              }
            },
            "description" : "Returns sensor information"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Not authorized to access this resource"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "The resource was not found"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Something unexpected happened on the server"
          }
        },
        "tags" : [ "Sensors" ]
      }
    },
    "/info" : {
      "get" : {
        "description" : "Returns a list of important system properties",
        "operationId" : "getSystemInfo",
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SystemInfo"
                }
              }
            },
            "description" : "List of System properties"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Something unexpected happened on the server"
          }
        },
        "summary" : "Get a list of System properties",
        "tags" : [ "System" ]
      }
    },
    "/report" : {
      "get" : {
        "deprecated" : true,
        "description" : "<p>Use 'POST /tasks' of type 'TaskReport' instead.</p> <p>Creates and returns an archive containing files with system information inside like device settings, logbook messages and exception logs.</p>",
        "operationId" : "getReport",
        "responses" : {
          "200" : {
            "content" : {
              "application/zip" : {
                "schema" : {
                  "format" : "binary",
                  "type" : "string"
                }
              }
            },
            "description" : "Archive containing files with system information"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Not authorized to access this resource"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Something unexpected happened on the server"
          }
        },
        "summary" : "Creates a system report",
        "tags" : [ "System" ]
      }
    },
    "/reports" : {
      "get" : {
        "description" : "Gets a list of available system report files on the device. Have a look at 'TaskReport' on how to create a new report.",
        "operationId" : "getReports",
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Reports"
                }
              }
            },
            "description" : "System reports"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Not authorized to access this resource"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Something unexpected happened on the server"
          }
        },
        "tags" : [ "System" ]
      }
    },
    "/reports/{fileName}" : {
      "delete" : {
        "description" : "Deletes the given system report file from the device.",
        "operationId" : "deleteReport",
        "parameters" : [ {
          "description" : "Name of the file",
          "explode" : false,
          "in" : "path",
          "name" : "fileName",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "204" : {
            "description" : "System report file successfully deleted"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Not authorized to access this resource"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "The resource was not found"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Something unexpected happened on the server"
          }
        },
        "tags" : [ "System" ]
      },
      "get" : {
        "description" : "Downloads the system report file with the given file name. The file name is provided by the corresponding system report task.",
        "operationId" : "getReportByFileName",
        "parameters" : [ {
          "description" : "Name of the file",
          "explode" : false,
          "in" : "path",
          "name" : "fileName",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/zip" : {
                "schema" : {
                  "format" : "binary",
                  "type" : "string"
                }
              }
            },
            "description" : "System report file successfully downloaded"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Not authorized to access this resource"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Access forbidden for this resource"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "The resource was not found"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Something unexpected happened on the server"
          }
        },
        "tags" : [ "System" ]
      }
    },
    "/typeplate" : {
      "get" : {
        "description" : "Returns a list of type plate properties",
        "operationId" : "getTypePlate",
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "examples" : {
                  "ctrlXCORE" : {
                    "summary" : "ctrlX CORE type plate",
                    "value" : {
                      "typePlateType" : "ctrlXCORE",
                      "storeBrandId" : "boschrexroth",
                      "storeModelId" : "rexroth-arch01",
                      "storeSerialId" : "7260xxx05726",
                      "manufacturer" : "Bosch Rexroth",
                      "serialNumber" : "72xxx123456",
                      "secondarySerialNumbers" : [ {
                        "type" : "component",
                        "serialNumber" : "72xxx123456",
                        "name" : "Control Unit"
                      }, {
                        "type" : "assembly",
                        "serialNumber" : "72xxx456789",
                        "name" : "Circuit Board"
                      } ],
                      "materialIndex" : "000",
                      "materialNumber" : "R123xxxxxxxxx",
                      "typeCode" : "000",
                      "biosVersion" : "000"
                    }
                  },
                  "generic" : {
                    "summary" : "generic linux typeplate",
                    "value" : {
                      "typePlateType" : "generic",
                      "storeBrandId" : "boschrexroth",
                      "storeModelId" : "rexroth-arch01",
                      "storeSerialId" : "7260xxx05726",
                      "manufacturer" : "Bosch Rexroth AG",
                      "productName" : "ctrlX COREvirtual",
                      "version" : "1.8.0",
                      "serialNumber" : "BB41E3C8-A4B3-11A8-9D43-AB0000CC0000",
                      "uuid" : "BB41E3C8-A4B3-11A8-9D43-AB0000CC0000"
                    }
                  }
                },
                "schema" : {
                  "$ref" : "#/components/schemas/OneOfTypePlate"
                }
              }
            },
            "description" : "Data structure containing hostname, IP address, etc."
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Something unexpected happened on the server"
          }
        },
        "summary" : "Get information from electronic type plate",
        "tags" : [ "TypePlate" ]
      }
    },
    "/time" : {
      "get" : {
        "description" : "Returns the current device date",
        "operationId" : "getDeviceDate",
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DateAndTime"
                }
              }
            },
            "description" : "Returns the current device date and time"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Not authorized to access this resource"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Something unexpected happened on the server"
          }
        },
        "summary" : "Get the device date",
        "tags" : [ "Date and Time" ]
      }
    },
    "/serial-vault" : {
      "get" : {
        "description" : "Get the URL of the serial vault",
        "operationId" : "getSerialVault",
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SerialVault"
                }
              }
            },
            "description" : "The URL of the serial vault"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Not authorized to access this resource"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Access forbidden for this resource"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Something unexpected happened on the server"
          }
        },
        "summary" : "Get the URL of the serial vault",
        "tags" : [ "SerialVault" ]
      },
      "put" : {
        "description" : "Update the URL of the serial vault",
        "operationId" : "updateSerialVault",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/SerialVault"
              }
            }
          }
        },
        "responses" : {
          "204" : {
            "description" : "Ok"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Not authorized to access this resource"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Access forbidden for this resource"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Something unexpected happened on the server"
          }
        },
        "summary" : "Update the URL of the serial vault",
        "tags" : [ "SerialVault" ]
      }
    },
    "/time/timezones" : {
      "get" : {
        "description" : "Returns a list of available timezones",
        "operationId" : "getTimezones",
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Timezones"
                }
              }
            },
            "description" : "List of timezones"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Not authorized to access this resource"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Something unexpected happened on the server"
          }
        },
        "summary" : "Returns a list of available timezones",
        "tags" : [ "Date and Time" ]
      }
    },
    "/time/settings" : {
      "get" : {
        "description" : "Returns the current device date settings",
        "operationId" : "getDeviceDateSettings",
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DateAndTimeSettings"
                }
              }
            },
            "description" : "Returns the current device date and time settings"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Not authorized to access this resource"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Something unexpected happened on the server"
          }
        },
        "summary" : "Get the device date",
        "tags" : [ "Date and Time" ]
      },
      "put" : {
        "description" : "Set the current device date",
        "operationId" : "setDeviceDate",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/DateAndTimeSettings"
              }
            }
          },
          "description" : "Set the current device date",
          "required" : true
        },
        "responses" : {
          "204" : {
            "description" : "Device date and time set successfully"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Not authorized to access this resource"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Access forbidden for this resource"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Something unexpected happened on the server"
          }
        },
        "summary" : "Set the device date",
        "tags" : [ "Date and Time" ]
      }
    },
    "/tasks" : {
      "get" : {
        "description" : "Receive a list of tasks",
        "operationId" : "getTasks",
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Tasks"
                }
              }
            },
            "description" : "List of tasks"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Not authorized to access this resource"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Access forbidden for this resource"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Something unexpected happened on the server"
          }
        },
        "summary" : "Receive a list of tasks",
        "tags" : [ "Tasks" ]
      },
      "post" : {
        "operationId" : "createTask",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "examples" : {
                "report" : {
                  "$ref" : "#/components/examples/report"
                },
                "reboot" : {
                  "$ref" : "#/components/examples/reboot"
                },
                "shutdown" : {
                  "$ref" : "#/components/examples/shutdown"
                },
                "reset" : {
                  "$ref" : "#/components/examples/reset"
                }
              },
              "schema" : {
                "$ref" : "#/components/schemas/OneOfTask"
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OneOfTask"
                }
              }
            },
            "description" : "Task created"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "The request is incomplete or malformed"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Not authorized to access this resource"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Access forbidden for this resource"
          },
          "409" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "The request conflicts with the current state of the resource"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Something unexpected happened on the server"
          }
        },
        "summary" : "Create a new task",
        "tags" : [ "Tasks" ]
      }
    },
    "/tasks/{taskId}" : {
      "delete" : {
        "operationId" : "deleteTask",
        "parameters" : [ {
          "description" : "task id",
          "explode" : false,
          "in" : "path",
          "name" : "taskId",
          "required" : true,
          "schema" : {
            "example" : "123",
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "204" : {
            "description" : "Task is canceled and removed"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "The request is incomplete or malformed"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Not authorized to access this resource"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Access forbidden for this resource"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "The resource was not found"
          }
        },
        "summary" : "Remove and cancel the task",
        "tags" : [ "Tasks" ]
      },
      "get" : {
        "operationId" : "getTask",
        "parameters" : [ {
          "description" : "task id",
          "explode" : false,
          "in" : "path",
          "name" : "taskId",
          "required" : true,
          "schema" : {
            "example" : "123",
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OneOfTask"
                }
              }
            },
            "description" : "Done - Task information"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Not authorized to access this resource"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Access forbidden for this resource"
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "The resource was not found"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Something unexpected happened on the server"
          }
        },
        "summary" : "Receive information about a task",
        "tags" : [ "Tasks" ]
      }
    },
    "/resource-allocation/memory" : {
      "get" : {
        "description" : "Read the actual resource allocation for memory",
        "operationId" : "getResourceAllocationMemory",
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AllocationMemory"
                }
              }
            },
            "description" : "OK"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Not authorized to access this resource"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Access forbidden for this resource"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Something unexpected happened on the server"
          }
        },
        "tags" : [ "System" ]
      },
      "put" : {
        "description" : "Set resource allocation memory",
        "operationId" : "setResourceAllocationMemory",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AllocationMemory"
              }
            }
          },
          "description" : "Modifies the current settings of resource allocation for memory (enable/disable, change current)\n",
          "required" : true
        },
        "responses" : {
          "204" : {
            "description" : "Hostname set successfully"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "The request is incomplete or malformed"
          },
          "401" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Not authorized to access this resource"
          },
          "403" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Access forbidden for this resource"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Problem"
                }
              }
            },
            "description" : "Something unexpected happened on the server"
          }
        },
        "tags" : [ "System" ]
      }
    }
  },
  "components" : {
    "examples" : {
      "report" : {
        "value" : {
          "action" : "report",
          "parameters" : {
            "logbookLastHours" : 3,
            "logbookLevel" : "debug",
            "createOptions" : "{\"$content\":\"files\",\"$format\":\"zip\"}",
            "additionalInfo" : "error description",
            "password" : "secret"
          }
        }
      },
      "reboot" : {
        "value" : {
          "action" : "reboot"
        }
      },
      "shutdown" : {
        "value" : {
          "action" : "shutdown"
        }
      },
      "reset" : {
        "value" : {
          "action" : "reset",
          "parameters" : {
            "type" : "factory"
          }
        }
      }
    },
    "parameters" : {
      "fileName" : {
        "description" : "Name of the file",
        "explode" : false,
        "in" : "path",
        "name" : "fileName",
        "required" : true,
        "schema" : {
          "type" : "string"
        },
        "style" : "simple"
      },
      "taskId" : {
        "description" : "task id",
        "explode" : false,
        "in" : "path",
        "name" : "taskId",
        "required" : true,
        "schema" : {
          "example" : "123",
          "type" : "string"
        },
        "style" : "simple"
      },
      "mountPoint" : {
        "description" : "The mount point of the removable media device (must be in /mnt or /media)",
        "explode" : true,
        "in" : "query",
        "name" : "mount-point",
        "required" : true,
        "schema" : {
          "type" : "string"
        },
        "style" : "form"
      },
      "commissioningType" : {
        "description" : "The commissioning point",
        "explode" : false,
        "in" : "path",
        "name" : "commissioningType",
        "required" : true,
        "schema" : {
          "enum" : [ "image", "factory" ],
          "example" : "factory",
          "type" : "string"
        },
        "style" : "simple"
      }
    },
    "responses" : {
      "Conflict" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/Problem"
            }
          }
        },
        "description" : "The request conflicts with the current state of the resource"
      },
      "Unauthorized" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/Problem"
            }
          }
        },
        "description" : "Not authorized to access this resource"
      },
      "Forbidden" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/Problem"
            }
          }
        },
        "description" : "Access forbidden for this resource"
      },
      "BadRequest" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/Problem"
            }
          }
        },
        "description" : "The request is incomplete or malformed"
      },
      "InternalServerError" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/Problem"
            }
          }
        },
        "description" : "Something unexpected happened on the server"
      },
      "NotFound" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/Problem"
            }
          }
        },
        "description" : "The resource was not found"
      }
    },
    "schemas" : {
      "SystemInfo" : {
        "description" : "System info dataobject",
        "example" : {
          "hostname" : "ctrlx-p1-123",
          "macAddress" : "DE-AD-BE-00-00-02",
          "osVersion" : "18",
          "virtualized" : true,
          "operatingSystem" : "Unbuntu 18.0",
          "architecture" : "x86-64"
        },
        "properties" : {
          "hostname" : {
            "description" : "The hostname of the device",
            "example" : "ctrlx-p1-123",
            "type" : "string"
          },
          "operatingSystem" : {
            "description" : "The operating system",
            "example" : "Unbuntu 18.0",
            "type" : "string"
          },
          "osVersion" : {
            "description" : "The version of the operating system",
            "example" : "18",
            "type" : "string"
          },
          "architecture" : {
            "description" : "The processor architecture",
            "example" : "x86-64",
            "type" : "string"
          },
          "macAddress" : {
            "description" : "The mac address",
            "example" : "DE-AD-BE-00-00-02",
            "type" : "string"
          },
          "virtualized" : {
            "description" : "Shows if the system runs in a virtualized environment",
            "example" : true,
            "type" : "boolean"
          }
        },
        "type" : "object"
      },
      "ctrlXCORETypePlate" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/TypePlate"
        }, {
          "$ref" : "#/components/schemas/UbuntuCoreIds"
        }, {
          "$ref" : "#/components/schemas/ctrlXCORETypePlate_allOf"
        } ],
        "description" : "Typeplate for ctrlX CORE",
        "discriminator" : {
          "propertyName" : "typePlateType"
        },
        "type" : "object"
      },
      "GenericLinuxTypePlate" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/TypePlate"
        }, {
          "$ref" : "#/components/schemas/UbuntuCoreIds"
        }, {
          "$ref" : "#/components/schemas/GenericLinuxTypePlate_allOf"
        } ],
        "description" : "Generic linux typeplate - derived from the linux smbios type 1, see: https://www.dmtf.org/sites/default/files/standards/documents/DSP0134_3.2.0.pdf",
        "discriminator" : {
          "propertyName" : "typePlateType"
        },
        "type" : "object"
      },
      "OneOfTypePlate" : {
        "oneOf" : [ {
          "$ref" : "#/components/schemas/ctrlXCORETypePlate"
        }, {
          "$ref" : "#/components/schemas/GenericLinuxTypePlate"
        } ]
      },
      "SecondarySerialNumber" : {
        "description" : "Secondary serial numbers of components and assemblies contained in the device",
        "properties" : {
          "type" : {
            "enum" : [ "component", "assembly" ],
            "example" : "component",
            "type" : "string"
          },
          "serialNumber" : {
            "type" : "string"
          },
          "name" : {
            "example" : "Circuit Board",
            "type" : "string"
          }
        },
        "required" : [ "serialNumber", "type" ],
        "type" : "object"
      },
      "SerialVault" : {
        "description" : "URL of the serial vault",
        "example" : {
          "url" : "https://demo-url.com"
        },
        "properties" : {
          "url" : {
            "description" : "URL of the serial vault",
            "example" : "https://demo-url.com",
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "Timezones" : {
        "example" : [ "Europe/Berlin", "UTC" ],
        "items" : {
          "type" : "string"
        },
        "type" : "array"
      },
      "Hostname" : {
        "description" : "System info dataobject",
        "example" : {
          "hostname" : "ctrlX-p1-123"
        },
        "properties" : {
          "hostname" : {
            "description" : "The hostname of the device",
            "example" : "ctrlX-p1-123",
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "AllocationMemory" : {
        "description" : "Resource allocation for memory",
        "example" : {
          "current" : 1000000,
          "min" : 256000,
          "max" : 1725000,
          "enabled" : true
        },
        "properties" : {
          "enabled" : {
            "description" : "resource allocation for memory is enabled state\n",
            "type" : "boolean"
          },
          "current" : {
            "description" : "Amount of currently allocated memory in kB      \n",
            "example" : 1000000,
            "type" : "integer"
          },
          "min" : {
            "description" : "Lower bound for allocation of memory in kB      \n",
            "example" : 256000,
            "readOnly" : true,
            "type" : "integer"
          },
          "max" : {
            "description" : "Upper bound for allocation of memory in kB      \n",
            "example" : 1725000,
            "readOnly" : true,
            "type" : "integer"
          }
        },
        "type" : "object"
      },
      "DateAndTime" : {
        "description" : "Time and Date",
        "example" : {
          "timezone" : "[\"Europe/Berlin\",\"America/Jamaica\",\"UTC\",\"EST\"]",
          "timestamp" : "2020-12-31T19:20:21.456"
        },
        "properties" : {
          "timestamp" : {
            "description" : "The local date and time of the device in the corresponding timezone. Format is based on ISO 8601 \nwithout time-offset of timezone: YYYY-MM-dd'T'HH:mm:ss.SSS\n",
            "example" : "2020-12-31T19:20:21.456",
            "type" : "string"
          },
          "timezone" : {
            "description" : "The timezone or location of the device. The timestamp is the time in this given timezone. This can\nbe a location (e.g. 'Europe/Berlin') from the 'IANA timezone database', a timezone abbrevation (e.g. 'EST') or \n'UTC' in case no local timezone shall be configured.\nThe use of a location is preferred over a timezone abbrevation, because timezone abbrevations can be ambiguous.\n",
            "example" : "[\"Europe/Berlin\",\"America/Jamaica\",\"UTC\",\"EST\"]",
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "DateAndTimeSettings" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/DateAndTime"
        }, {
          "$ref" : "#/components/schemas/DateAndTimeSettings_allOf"
        } ],
        "description" : "Time and Date Settings"
      },
      "Sensors" : {
        "items" : {
          "$ref" : "#/components/schemas/Sensor"
        },
        "type" : "array"
      },
      "Sensor" : {
        "description" : "Sensor data",
        "example" : {
          "unit" : "m/s",
          "id" : "id",
          "title" : "Translation speed",
          "value" : "3.1415"
        },
        "properties" : {
          "id" : {
            "description" : "The id of the sensor",
            "type" : "string"
          },
          "unit" : {
            "description" : "The physical unit of the sensor value",
            "example" : "m/s",
            "type" : "string"
          },
          "value" : {
            "description" : "The current value of the sensor",
            "example" : "3.1415",
            "type" : "string"
          },
          "title" : {
            "description" : "The title of the sensor",
            "example" : "Translation speed",
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "Reports" : {
        "example" : {
          "reports" : [ {
            "fileName" : "systemreport_2022-11-15_15-00-00.zip"
          }, {
            "fileName" : "systemreport_2022-11-15_15-00-00.zip"
          } ]
        },
        "properties" : {
          "reports" : {
            "items" : {
              "$ref" : "#/components/schemas/Report"
            },
            "readOnly" : true,
            "type" : "array"
          }
        },
        "required" : [ "reports" ],
        "type" : "object"
      },
      "Task" : {
        "discriminator" : {
          "propertyName" : "action"
        },
        "properties" : {
          "id" : {
            "description" : "The temporary id of a task",
            "example" : "123",
            "readOnly" : true,
            "type" : "string"
          },
          "state" : {
            "enum" : [ "pending", "failed", "done", "running" ],
            "example" : "running",
            "readOnly" : true,
            "type" : "string"
          },
          "progress" : {
            "description" : "Progress of the task",
            "example" : 10,
            "maximum" : 100,
            "minimum" : 0,
            "readOnly" : true,
            "type" : "integer"
          },
          "eta" : {
            "description" : "ETA in RFC 3339 format",
            "example" : "2019-01-01T12:00:27.87+00:20",
            "format" : "dateTime",
            "readOnly" : true,
            "type" : "string"
          },
          "action" : {
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "Tasks" : {
        "items" : {
          "$ref" : "#/components/schemas/OneOfTask"
        },
        "type" : "array"
      },
      "TaskReport" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Task"
        }, {
          "$ref" : "#/components/schemas/TaskReport_allOf"
        } ],
        "description" : "Creates a system report",
        "discriminator" : {
          "propertyName" : "action"
        }
      },
      "TaskReboot" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Task"
        }, {
          "$ref" : "#/components/schemas/TaskReboot_allOf"
        } ],
        "description" : "Reboot the device",
        "discriminator" : {
          "propertyName" : "action"
        }
      },
      "TaskShutdown" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Task"
        }, {
          "$ref" : "#/components/schemas/TaskShutdown_allOf"
        } ],
        "description" : "Shutdown the device",
        "discriminator" : {
          "propertyName" : "action"
        }
      },
      "TaskReset" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Task"
        }, {
          "$ref" : "#/components/schemas/TaskReset_allOf"
        } ],
        "description" : "Perform a commissioning reset",
        "discriminator" : {
          "propertyName" : "action"
        }
      },
      "OneOfTask" : {
        "oneOf" : [ {
          "$ref" : "#/components/schemas/TaskReport"
        }, {
          "$ref" : "#/components/schemas/TaskReboot"
        }, {
          "$ref" : "#/components/schemas/TaskShutdown"
        }, {
          "$ref" : "#/components/schemas/TaskReset"
        } ]
      },
      "Problem" : {
        "description" : "This document defines a \"problem detail\" as a way  to carry machine-readable details of errors in a  HTTP response to avoid the need to define new error  response formats for HTTP APIs.\n",
        "properties" : {
          "type" : {
            "default" : "about:blank",
            "description" : "A URI reference [RFC3986] that identifies the problem type. \nThis specification encourages that, when dereferenced, \nit provide human-readable documentation for the problem type \n(e.g., using HTML [W3C.REC-html5-20141028]). When this member \nis not present, its value is assumed to be \"about:blank\".\n",
            "example" : "https://example.com/probs/out-of-credit",
            "format" : "uri",
            "type" : "string"
          },
          "title" : {
            "description" : "A short, human-readable summary of the problem type. \nIt SHOULD NOT change from occurrence to occurrence of the problem, \nexcept for purposes of localization (e.g., using proactive content \nnegotiation; see [RFC7231], Section 3.4).\n",
            "example" : "You do not have enough credit.",
            "type" : "string"
          },
          "status" : {
            "description" : "The HTTP status code ([RFC7231], Section 6) generated by the \norigin server for this occurrence of the problem.\n",
            "example" : 403,
            "format" : "int32",
            "type" : "integer"
          },
          "detail" : {
            "description" : "A human-readable explanation specific to this occurrence of the problem.\n",
            "example" : "Your current balance is 30, but that costs 50.",
            "type" : "string"
          },
          "instance" : {
            "description" : "A URI reference that identifies the specific occurrence of the problem.\nIt may or may not yield further information if dereferenced.\n",
            "example" : "/account/12345/msgs/abc",
            "type" : "string"
          },
          "code" : {
            "deprecated" : true,
            "description" : "An error code issued by the system that caused the original problem.\nThis code can be used to track down the root cause of the error.\n",
            "example" : "F360001",
            "type" : "string"
          },
          "mainDiagnosisCode" : {
            "description" : "The main diagnosis code is issued by the system that caused the problem.\nThis code can be used to track down the root cause and source of the error.\nIt can be used to search in the documentation for a solution.\nIt SHOULD NOT change from occurrence to occurrence of the same problem.\n",
            "example" : "080F0100",
            "type" : "string"
          },
          "detailedDiagnosisCode" : {
            "description" : "The detailed diagnosis code issued by the system that caused the problem.\nThis code can be used to track down the detailed cause and source of the error.\nIt can be used to search in the documentation for a solution.\nThe detailed diagnosis code gives additional information about the cause of the error.\nIt SHOULD NOT change from occurrence to occurrence of the same problem.\n",
            "example" : "00666001",
            "type" : "string"
          },
          "dynamicDescription" : {
            "description" : "A dynamic description gives detailed information about the occurrence of a problem.\nIt can change between different occurrences of the same error.\n",
            "example" : "value = -4.5",
            "type" : "string"
          },
          "severity" : {
            "description" : " Severity of a problem as defined RFC5424 of the Syslog standard, see https://tools.ietf.org/html/rfc5424",
            "enum" : [ "Emergency", "Alert", "Critical", "Error", "Warning", "Notice", "Informational", "Debug" ],
            "example" : "Error",
            "type" : "string"
          },
          "links" : {
            "description" : "Collection of links to fix the problem. E.g. links to online user manual,\nto an online community (using tags) or a developer chat (e.g. Slack).\n",
            "items" : {
              "example" : "https://stackoverflow.com/questions/tagged/boschrexroth+controlx+f360001",
              "format" : "uri",
              "type" : "string"
            },
            "type" : "array"
          },
          "moreInfo" : {
            "additionalProperties" : true,
            "example" : {
              "trace" : "ExampleClass.cpp#452 Null pointer exception",
              "class" : "ExampleClass"
            },
            "type" : "object"
          }
        },
        "required" : [ "title", "type" ],
        "type" : "object",
        "x-version" : "1.0.0"
      },
      "ImageUpload" : {
        "description" : "Upload image and setup file to storage device like usb stick or sd card",
        "properties" : {
          "image" : {
            "description" : "The image update file (zip archive)",
            "format" : "binary",
            "type" : "string"
          },
          "image-md5" : {
            "description" : "Md5 hash of image file",
            "type" : "string"
          },
          "setup" : {
            "description" : "The setup file - only setup, generate-setup or none of them are allowed",
            "format" : "binary",
            "type" : "string"
          },
          "setup-md5" : {
            "description" : "Md5 hash of setup file",
            "type" : "string"
          },
          "generate-setup" : {
            "description" : "Generate setup file from current configuration (including apps) - only setup, generate-setup or none of them are allowed",
            "type" : "boolean"
          }
        },
        "required" : [ "image", "media" ],
        "type" : "object"
      },
      "Commissioning" : {
        "description" : "Commissioning information",
        "example" : {
          "missingApps" : [ "missingApps", "missingApps" ],
          "requiredSize" : 12345,
          "type" : "factory"
        },
        "properties" : {
          "type" : {
            "description" : "Type of the commissioning, e. g. factory to describe the content of the device after the manufactoring process",
            "enum" : [ "image", "factory" ],
            "example" : "factory",
            "type" : "string"
          },
          "requiredSize" : {
            "description" : "The estimated size in byte to store all apps for reset the device on the removable media",
            "example" : 12345,
            "readOnly" : true,
            "type" : "integer"
          },
          "missingApps" : {
            "description" : "A list of missing apps",
            "items" : {
              "type" : "string"
            },
            "readOnly" : true,
            "type" : "array"
          }
        },
        "required" : [ "type" ],
        "type" : "object"
      },
      "TypePlate" : {
        "discriminator" : {
          "propertyName" : "typePlateType"
        },
        "properties" : {
          "typePlateType" : {
            "type" : "string"
          }
        },
        "required" : [ "typePlateType" ]
      },
      "UbuntuCoreIds" : {
        "description" : "Ubuntu Core and Brandstore related properties of the Typeplate",
        "properties" : {
          "storeBrandId" : {
            "description" : "brand id of the device in the store",
            "example" : "boschrexroth",
            "type" : "string"
          },
          "storeModelId" : {
            "description" : "model id of the device in the store",
            "example" : "rexroth-arch01",
            "type" : "string"
          },
          "storeSerialId" : {
            "description" : "unique id for the device in the store",
            "example" : "7260xxx05726",
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "Report" : {
        "example" : {
          "fileName" : "systemreport_2022-11-15_15-00-00.zip"
        },
        "properties" : {
          "fileName" : {
            "description" : "Name of system report file",
            "example" : "systemreport_2022-11-15_15-00-00.zip",
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "ProtocolEntry" : {
        "properties" : {
          "severity" : {
            "description" : "Severity of the event described by the protocol entry",
            "example" : "\"ERROR\", \"WARNING\", \"INFO\" or \"DEBUG\"",
            "type" : "string"
          },
          "time" : {
            "description" : "Time in RFC 3339 format when the event described by the protocol entry occurred",
            "example" : "2022-11-15T15:00:00Z",
            "format" : "date-time",
            "type" : "string"
          },
          "message" : {
            "description" : "Message describing the event that occurred",
            "example" : "Reading logbook messages...",
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "ctrlXCORETypePlate_allOf" : {
        "properties" : {
          "typePlateType" : {
            "enum" : [ "ctrlXCORE" ],
            "type" : "string"
          },
          "manufacturer" : {
            "description" : "The manufacturer of the device",
            "example" : "Bosch Rexroth",
            "type" : "string"
          },
          "serialNumber" : {
            "description" : "The primary serial number of the device",
            "example" : "72xxx123456",
            "type" : "string"
          },
          "secondarySerialNumbers" : {
            "description" : "Secondary serial numbers of components and assemblies contained in the device",
            "items" : {
              "$ref" : "#/components/schemas/SecondarySerialNumber"
            },
            "type" : "array"
          },
          "materialIndex" : {
            "description" : "The revision of the material number",
            "example" : "000",
            "type" : "string"
          },
          "materialNumber" : {
            "description" : "The material number",
            "example" : "R123xxxxxxxxx",
            "type" : "string"
          },
          "typeCode" : {
            "description" : "The type code",
            "example" : "000",
            "type" : "string"
          },
          "hardwareRevision" : {
            "description" : "The hardware revision of the device",
            "example" : "cx_x7p_a",
            "type" : "string"
          },
          "biosVersion" : {
            "description" : "The bios version of the device",
            "example" : "CTL6E904.118",
            "type" : "string"
          }
        },
        "required" : [ "typePlateType" ]
      },
      "GenericLinuxTypePlate_allOf" : {
        "properties" : {
          "typePlateType" : {
            "enum" : [ "generic" ],
            "type" : "string"
          },
          "manufacturer" : {
            "description" : "The manufacturer of the device",
            "example" : "Bosch Rexroth AG",
            "type" : "string"
          },
          "productName" : {
            "description" : "The product name of the device",
            "example" : "ctrlX COREvirtual",
            "type" : "string"
          },
          "version" : {
            "description" : "The version of the device, e.g. ctrlX COREvirtual image",
            "example" : "1.8.0",
            "type" : "string"
          },
          "serialNumber" : {
            "description" : "The serial number of the device, e.g. used for licensing",
            "example" : "BB41E3C8-A4B3-11A8-9D43-AB0000CC0000",
            "type" : "string"
          },
          "uuid" : {
            "description" : "The uuid of the device",
            "example" : "BB41E3C8-A4B3-11A8-9D43-AB0000CC0000",
            "type" : "string"
          },
          "sku" : {
            "description" : "This text string identifies a particular device configuration for sale.",
            "example" : "SomeSKU",
            "type" : "string"
          },
          "family" : {
            "description" : "This text string identifies the family to which a particular device belongs. A family refers to a set of devices that are similar but not identical from a hardware or software point of view.",
            "example" : "ctrlX CORE",
            "type" : "string"
          }
        },
        "required" : [ "typePlateType" ]
      },
      "DateAndTimeSettings_allOf" : {
        "properties" : {
          "rtcOk" : {
            "description" : "Indicates whether real time clock is ok or not. If the rtc battery is missing or empty the rtc is not ok.",
            "example" : true,
            "type" : "boolean"
          },
          "timeSynchronization" : {
            "description" : "Enable or disable time sychronization. If enabled time server is used.",
            "example" : true,
            "type" : "boolean"
          },
          "ntpServers" : {
            "description" : "Time servers, if time synchronization is enabled.",
            "example" : [ "pool.ntp.org" ],
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        }
      },
      "TaskReport_allOf_properties" : {
        "properties" : {
          "file" : {
            "description" : "Name of the system report file",
            "example" : "systemreport_2022-11-15_15-00-00.zip",
            "type" : "string"
          },
          "progressText" : {
            "description" : "Text summarizing the current operation",
            "example" : "Reading logbook messages...",
            "type" : "string"
          },
          "protocol" : {
            "description" : "Protocol collects events that occur while the task is processed",
            "items" : {
              "$ref" : "#/components/schemas/ProtocolEntry"
            },
            "type" : "array"
          }
        }
      },
      "TaskReport_allOf_parameters_components" : {
        "description" : "System report components",
        "properties" : {
          "logbook" : {
            "default" : "include",
            "description" : "'include' or 'exclude' logbook file(s)",
            "enum" : [ "include", "exclude" ],
            "type" : "string"
          },
          "snapd" : {
            "default" : "include",
            "description" : "'include' or 'exclude' snapd files",
            "enum" : [ "include", "exclude" ],
            "type" : "string"
          }
        }
      },
      "TaskReport_allOf_parameters" : {
        "properties" : {
          "logbookLastHours" : {
            "description" : "Time span in hours. Starting with the most recent message in the logbook,\nall messages that occurred within the specified time span are included\n in the system report. 0 means that all messages are included.\n",
            "example" : 3,
            "type" : "integer"
          },
          "logbookLevel" : {
            "default" : "debug",
            "description" : "Level of logbook messages. The 'warning' level also contains 'error' messages,\nthe 'info' level contains 'error' and 'warning' messages, and so on.\n",
            "enum" : [ "error", "warning", "info", "debug" ],
            "type" : "string"
          },
          "createOptions" : {
            "description" : "JSON String with 'CreateOptions' inside for setup part. Details see 'Setup API - CreateOptions'.",
            "type" : "string"
          },
          "components" : {
            "$ref" : "#/components/schemas/TaskReport_allOf_parameters_components"
          },
          "additionalInfo" : {
            "description" : "Additional information text by the user (optional). This could be an error description or any other information that is necessary or helpful for further processing of the report.",
            "example" : "error description",
            "type" : "string"
          },
          "password" : {
            "description" : "Password for encrypting system report.",
            "example" : "secret",
            "format" : "password",
            "type" : "string"
          }
        }
      },
      "TaskReport_allOf" : {
        "properties" : {
          "action" : {
            "enum" : [ "report" ],
            "type" : "string"
          },
          "properties" : {
            "$ref" : "#/components/schemas/TaskReport_allOf_properties"
          },
          "parameters" : {
            "$ref" : "#/components/schemas/TaskReport_allOf_parameters"
          }
        }
      },
      "TaskReboot_allOf" : {
        "properties" : {
          "action" : {
            "enum" : [ "reboot" ],
            "type" : "string"
          }
        }
      },
      "TaskShutdown_allOf" : {
        "properties" : {
          "action" : {
            "enum" : [ "shutdown" ],
            "type" : "string"
          }
        }
      },
      "TaskReset_allOf_parameters" : {
        "properties" : {
          "type" : {
            "description" : "Reset type to perform\nimage:   reset the device to time of the image update - all apps except the system apps are lost, no removable media device needed\nfactory: reset the device to the end of the manufactoring process - all apps except the apps installed during the manufactoring process are lost, removable media device required\n",
            "enum" : [ "image", "factory" ],
            "example" : "factory",
            "type" : "string"
          },
          "media" : {
            "description" : "The mount point of the removable media device (not for type image)",
            "example" : "/media/sda1",
            "type" : "string"
          }
        }
      },
      "TaskReset_allOf_currentState" : {
        "properties" : {
          "app" : {
            "description" : "The app of this entry (empty for preparation of removable device)",
            "example" : "rexroth-deviceadmin",
            "readOnly" : true,
            "type" : "string"
          },
          "type" : {
            "description" : "The type of the entry",
            "enum" : [ "done", "info", "warning", "error" ],
            "example" : "info",
            "readOnly" : true,
            "type" : "string"
          },
          "message" : {
            "description" : "The current app state",
            "example" : "Download of app successfully finished",
            "readOnly" : true,
            "type" : "string"
          }
        }
      },
      "TaskReset_allOf" : {
        "properties" : {
          "action" : {
            "enum" : [ "reset" ],
            "type" : "string"
          },
          "parameters" : {
            "$ref" : "#/components/schemas/TaskReset_allOf_parameters"
          },
          "currentState" : {
            "description" : "Current state for the single steps (prepare, download)",
            "items" : {
              "$ref" : "#/components/schemas/TaskReset_allOf_currentState"
            },
            "readOnly" : true,
            "type" : "array"
          },
          "result" : {
            "$ref" : "#/components/schemas/Problem"
          }
        }
      }
    },
    "securitySchemes" : {
      "UsernamePassword" : {
        "description" : "Enter username and password",
        "flows" : {
          "password" : {
            "scopes" : {
              "dummy" : "Dummy scope (scopes not used)"
            },
            "tokenUrl" : "/identity-manager/api/v2/auth/token"
          }
        },
        "type" : "oauth2"
      },
      "Bearer" : {
        "description" : "Alternatively&colon; Enter bearer token (without prefix 'Bearer')",
        "scheme" : "bearer",
        "type" : "http"
      }
    }
  }
}